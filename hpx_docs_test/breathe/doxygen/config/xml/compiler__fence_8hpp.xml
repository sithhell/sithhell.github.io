<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="compiler__fence_8hpp" kind="file" language="C++">
    <compoundname>compiler_fence.hpp</compoundname>
    <includes refid="compiler__specific_8hpp" local="no">hpx/config/compiler_specific.hpp</includes>
    <includedby refid="config_8hpp" local="no">libs/config/include/hpx/config.hpp</includedby>
    <incdepgraph>
      <node id="36">
        <label>hpx/config/compiler_specific.hpp</label>
        <link refid="compiler__specific_8hpp_source"/>
      </node>
      <node id="35">
        <label>libs/config/include/hpx/config/compiler_fence.hpp</label>
        <link refid="compiler__fence_8hpp"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="38">
        <label>libs/config/include/hpx/config.hpp</label>
        <link refid="config_8hpp_source"/>
      </node>
      <node id="37">
        <label>libs/config/include/hpx/config/compiler_fence.hpp</label>
        <link refid="compiler__fence_8hpp"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="compiler__fence_8hpp_1adf3537ec8a8caa1b3d17b9ee70173ed9" prot="public" static="no">
        <name>HPX_COMPILER_FENCE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generates assembly that serves as a fence to the compiler CPU to disable optimization. Usually implemented in the form of a memory barrier. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/config/include/hpx/config/compiler_fence.hpp" line="16" column="9" bodyfile="libs/config/include/hpx/config/compiler_fence.hpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="compiler__fence_8hpp_1a054dcc72a86eb9efc3e68fd66a06986b" prot="public" static="no">
        <name>HPX_SMT_PAUSE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generates assembly the executes a &quot;pause&quot; instruction. Useful in spinning loops. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/config/include/hpx/config/compiler_fence.hpp" line="19" column="9" bodyfile="libs/config/include/hpx/config/compiler_fence.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2008<sp/>Peter<sp/>Dimov</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2017<sp/>Agustin<sp/>Berge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPX_CONFIG_COMPILER_FENCE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_CONFIG_COMPILER_FENCE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/config/compiler_specific.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(DOXYGEN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor">#define<sp/>HPX_COMPILER_FENCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_SMT_PAUSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__INTEL_COMPILER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_COMPILER_FENCE<sp/>__memory_barrier()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(<sp/>_MSC_VER<sp/>)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1310</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_ReadWriteBarrier();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>intrinsic(<sp/>_ReadWriteBarrier<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_COMPILER_FENCE<sp/>_ReadWriteBarrier()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_mm_pause();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_SMT_PAUSE<sp/>_mm_pause()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_COMPILER_FENCE<sp/>__asm__<sp/>__volatile__(<sp/>&quot;&quot;<sp/>:<sp/>:<sp/>:<sp/>&quot;memory&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__i386__)<sp/>||<sp/>defined(__x86_64__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_SMT_PAUSE<sp/>__asm__<sp/>__volatile__(<sp/>&quot;rep;<sp/>nop&quot;<sp/>:<sp/>:<sp/>:<sp/>&quot;memory&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__ppc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>According<sp/>to:<sp/>https://stackoverflow.com/questions/5425506/equivalent-of-x86-pause-instruction-for-ppc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_SMT_PAUSE<sp/>__asm__<sp/>__volatile__(&quot;or<sp/>27,27,27&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__arm__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_SMT_PAUSE<sp/>__asm__<sp/>__volatile__(&quot;yield&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_SMT_PAUSE<sp/>HPX_COMPILER_FENCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_COMPILER_FENCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="libs/config/include/hpx/config/compiler_fence.hpp"/>
  </compounddef>
</doxygen>
