<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structmoodycamel_1_1_consumer_token" kind="struct" language="C++" prot="public">
    <compoundname>moodycamel::ConsumerToken</compoundname>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structmoodycamel_1_1_consumer_token_1ac77c3583af133c29d4e26d4bb8605ce4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Traits</type>
          </param>
        </templateparamlist>
        <type>friend class</type>
        <definition>friend class ConcurrentQueue</definition>
        <argsstring></argsstring>
        <name>ConcurrentQueue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="681" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="681" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="structmoodycamel_1_1_consumer_token_1a680d9a9301a3c7bb2380209214ace21e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ConcurrentQueueTests</definition>
        <argsstring></argsstring>
        <name>ConcurrentQueueTests</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="682" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="682" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structmoodycamel_1_1_consumer_token_1af65e25dcc92a723c2a84da7a4b763ed9" prot="private" static="no" mutable="no">
        <type>std::uint32_t</type>
        <definition>std::uint32_t moodycamel::ConsumerToken::initialOffset</definition>
        <argsstring></argsstring>
        <name>initialOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="685" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="685" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmoodycamel_1_1_consumer_token_1a87122da7757b646f32bc06ede03040f8" prot="private" static="no" mutable="no">
        <type>std::uint32_t</type>
        <definition>std::uint32_t moodycamel::ConsumerToken::lastKnownGlobalOffset</definition>
        <argsstring></argsstring>
        <name>lastKnownGlobalOffset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="686" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="686" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmoodycamel_1_1_consumer_token_1a325bbb4f3a69a4deefb9e0982fe369f8" prot="private" static="no" mutable="no">
        <type>std::uint32_t</type>
        <definition>std::uint32_t moodycamel::ConsumerToken::itemsConsumedFromCurrent</definition>
        <argsstring></argsstring>
        <name>itemsConsumedFromCurrent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="687" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="687" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmoodycamel_1_1_consumer_token_1ab6c81d07254cfcef38ea721dc3c39239" prot="private" static="no" mutable="no">
        <type><ref refid="structmoodycamel_1_1details_1_1_concurrent_queue_producer_typeless_base" kindref="compound">details::ConcurrentQueueProducerTypelessBase</ref> *</type>
        <definition>details::ConcurrentQueueProducerTypelessBase* moodycamel::ConsumerToken::currentProducer</definition>
        <argsstring></argsstring>
        <name>currentProducer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="688" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="688" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmoodycamel_1_1_consumer_token_1a795a88ef4b83f5953fbc7aa8115068c8" prot="private" static="no" mutable="no">
        <type><ref refid="structmoodycamel_1_1details_1_1_concurrent_queue_producer_typeless_base" kindref="compound">details::ConcurrentQueueProducerTypelessBase</ref> *</type>
        <definition>details::ConcurrentQueueProducerTypelessBase* moodycamel::ConsumerToken::desiredProducer</definition>
        <argsstring></argsstring>
        <name>desiredProducer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="689" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="689" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmoodycamel_1_1_consumer_token_1a45d0a4c22666b3e877573ef99e6ba707" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Traits</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>moodycamel::ConsumerToken::ConsumerToken</definition>
        <argsstring>(ConcurrentQueue&lt; T, Traits &gt; &amp;q)</argsstring>
        <name>ConsumerToken</name>
        <param>
          <type><ref refid="classmoodycamel_1_1_concurrent_queue" kindref="compound">ConcurrentQueue</ref>&lt; T, Traits &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="651" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="3610" bodyend="3615"/>
      </memberdef>
      <memberdef kind="function" id="structmoodycamel_1_1_consumer_token_1aed268cbb816fefe7c6f365b7ec3b5716" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Traits</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>moodycamel::ConsumerToken::ConsumerToken</definition>
        <argsstring>(BlockingConcurrentQueue&lt; T, Traits &gt; &amp;q)</argsstring>
        <name>ConsumerToken</name>
        <param>
          <type><ref refid="classmoodycamel_1_1_blocking_concurrent_queue" kindref="compound">BlockingConcurrentQueue</ref>&lt; T, Traits &gt; &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="654" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="3618" bodyend="3623"/>
      </memberdef>
      <memberdef kind="function" id="structmoodycamel_1_1_consumer_token_1aedf28befbd4a5d699ba5024b3b6f89b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>moodycamel::ConsumerToken::ConsumerToken</definition>
        <argsstring>(ConsumerToken &amp;&amp;other) MOODYCAMEL_NOEXCEPT</argsstring>
        <name>ConsumerToken</name>
        <param>
          <type><ref refid="structmoodycamel_1_1_consumer_token" kindref="compound">ConsumerToken</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="656" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="656" bodyend="659"/>
      </memberdef>
      <memberdef kind="function" id="structmoodycamel_1_1_consumer_token_1a65e3c4bde5ea725f24edd001ad6ff709" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structmoodycamel_1_1_consumer_token" kindref="compound">ConsumerToken</ref> &amp;</type>
        <definition>ConsumerToken&amp; moodycamel::ConsumerToken::operator=</definition>
        <argsstring>(ConsumerToken &amp;&amp;other) MOODYCAMEL_NOEXCEPT</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structmoodycamel_1_1_consumer_token" kindref="compound">ConsumerToken</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="661" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="661" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="structmoodycamel_1_1_consumer_token_1afb46600c622adbe5c82bb49a538f9fc0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void moodycamel::ConsumerToken::swap</definition>
        <argsstring>(ConsumerToken &amp;other) MOODYCAMEL_NOEXCEPT</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="structmoodycamel_1_1_consumer_token" kindref="compound">ConsumerToken</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="667" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="667" bodyend="674"/>
      </memberdef>
      <memberdef kind="function" id="structmoodycamel_1_1_consumer_token_1a3a1570469d08da707725d348f763c54a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>moodycamel::ConsumerToken::ConsumerToken</definition>
        <argsstring>(ConsumerToken const &amp;) MOODYCAMEL_DELETE_FUNCTION</argsstring>
        <name>ConsumerToken</name>
        <param>
          <type><ref refid="structmoodycamel_1_1_consumer_token" kindref="compound">ConsumerToken</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structmoodycamel_1_1_consumer_token_1a28a5eac0c5cb2c55c34bd030cb91c402" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structmoodycamel_1_1_consumer_token" kindref="compound">ConsumerToken</ref> &amp;</type>
        <definition>ConsumerToken&amp; moodycamel::ConsumerToken::operator=</definition>
        <argsstring>(ConsumerToken const &amp;) MOODYCAMEL_DELETE_FUNCTION</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structmoodycamel_1_1_consumer_token" kindref="compound">ConsumerToken</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="678" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="649" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="648" bodyend="690"/>
    <listofallmembers>
      <member refid="structmoodycamel_1_1_consumer_token_1ac77c3583af133c29d4e26d4bb8605ce4" prot="private" virt="non-virtual"><scope>moodycamel::ConsumerToken</scope><name>ConcurrentQueue</name></member>
      <member refid="structmoodycamel_1_1_consumer_token_1a680d9a9301a3c7bb2380209214ace21e" prot="private" virt="non-virtual"><scope>moodycamel::ConsumerToken</scope><name>ConcurrentQueueTests</name></member>
      <member refid="structmoodycamel_1_1_consumer_token_1a45d0a4c22666b3e877573ef99e6ba707" prot="public" virt="non-virtual"><scope>moodycamel::ConsumerToken</scope><name>ConsumerToken</name></member>
      <member refid="structmoodycamel_1_1_consumer_token_1aed268cbb816fefe7c6f365b7ec3b5716" prot="public" virt="non-virtual"><scope>moodycamel::ConsumerToken</scope><name>ConsumerToken</name></member>
      <member refid="structmoodycamel_1_1_consumer_token_1aedf28befbd4a5d699ba5024b3b6f89b7" prot="public" virt="non-virtual"><scope>moodycamel::ConsumerToken</scope><name>ConsumerToken</name></member>
      <member refid="structmoodycamel_1_1_consumer_token_1a3a1570469d08da707725d348f763c54a" prot="public" virt="non-virtual"><scope>moodycamel::ConsumerToken</scope><name>ConsumerToken</name></member>
      <member refid="structmoodycamel_1_1_consumer_token_1ab6c81d07254cfcef38ea721dc3c39239" prot="private" virt="non-virtual"><scope>moodycamel::ConsumerToken</scope><name>currentProducer</name></member>
      <member refid="structmoodycamel_1_1_consumer_token_1a795a88ef4b83f5953fbc7aa8115068c8" prot="private" virt="non-virtual"><scope>moodycamel::ConsumerToken</scope><name>desiredProducer</name></member>
      <member refid="structmoodycamel_1_1_consumer_token_1af65e25dcc92a723c2a84da7a4b763ed9" prot="private" virt="non-virtual"><scope>moodycamel::ConsumerToken</scope><name>initialOffset</name></member>
      <member refid="structmoodycamel_1_1_consumer_token_1a325bbb4f3a69a4deefb9e0982fe369f8" prot="private" virt="non-virtual"><scope>moodycamel::ConsumerToken</scope><name>itemsConsumedFromCurrent</name></member>
      <member refid="structmoodycamel_1_1_consumer_token_1a87122da7757b646f32bc06ede03040f8" prot="private" virt="non-virtual"><scope>moodycamel::ConsumerToken</scope><name>lastKnownGlobalOffset</name></member>
      <member refid="structmoodycamel_1_1_consumer_token_1a65e3c4bde5ea725f24edd001ad6ff709" prot="public" virt="non-virtual"><scope>moodycamel::ConsumerToken</scope><name>operator=</name></member>
      <member refid="structmoodycamel_1_1_consumer_token_1a28a5eac0c5cb2c55c34bd030cb91c402" prot="public" virt="non-virtual"><scope>moodycamel::ConsumerToken</scope><name>operator=</name></member>
      <member refid="structmoodycamel_1_1_consumer_token_1afb46600c622adbe5c82bb49a538f9fc0" prot="public" virt="non-virtual"><scope>moodycamel::ConsumerToken</scope><name>swap</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
