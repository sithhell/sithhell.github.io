<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structmoodycamel_1_1_concurrent_queue_1_1_free_list" kind="struct" language="C++" prot="private">
    <compoundname>moodycamel::ConcurrentQueue::FreeList</compoundname>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1ae118c5d74c13b10de15c10979f187b01" prot="private" static="no" mutable="no">
        <type>std::atomic&lt; N * &gt;</type>
        <definition>std::atomic&lt;N*&gt; moodycamel::ConcurrentQueue&lt; T, Traits &gt;::FreeList&lt; N &gt;::freeListHead</definition>
        <argsstring></argsstring>
        <name>freeListHead</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1474" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="1474" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1abc38362334f160539380452146e071da" prot="private" static="yes" mutable="no">
        <type>const std::uint32_t</type>
        <definition>const std::uint32_t moodycamel::ConcurrentQueue&lt; T, Traits &gt;::FreeList&lt; N &gt;::REFS_MASK</definition>
        <argsstring></argsstring>
        <name>REFS_MASK</name>
        <initializer>= 0x7FFFFFFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1476" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="1476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1a8c5a97db3f502da842d430ac3985bdb1" prot="private" static="yes" mutable="no">
        <type>const std::uint32_t</type>
        <definition>const std::uint32_t moodycamel::ConcurrentQueue&lt; T, Traits &gt;::FreeList&lt; N &gt;::SHOULD_BE_ON_FREELIST</definition>
        <argsstring></argsstring>
        <name>SHOULD_BE_ON_FREELIST</name>
        <initializer>= 0x80000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1477" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="1477" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1ad9b24ebcd2a5325a7b31f4d377b5c54a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>moodycamel::ConcurrentQueue&lt; T, Traits &gt;::FreeList&lt; N &gt;::FreeList</definition>
        <argsstring>()</argsstring>
        <name>FreeList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1384" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="1384" bodyend="1384"/>
      </memberdef>
      <memberdef kind="function" id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1a99f0f4769908b749f136f25c6dbc6ae6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>moodycamel::ConcurrentQueue&lt; T, Traits &gt;::FreeList&lt; N &gt;::FreeList</definition>
        <argsstring>(FreeList &amp;&amp;other)</argsstring>
        <name>FreeList</name>
        <param>
          <type>FreeList &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1385" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="1385" bodyend="1385"/>
      </memberdef>
      <memberdef kind="function" id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1a84a45b61667074f8cfde4b0faa4057e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void moodycamel::ConcurrentQueue&lt; T, Traits &gt;::FreeList&lt; N &gt;::swap</definition>
        <argsstring>(FreeList &amp;other)</argsstring>
        <name>swap</name>
        <param>
          <type>FreeList &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1386" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="1386" bodyend="1386"/>
      </memberdef>
      <memberdef kind="function" id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1af1c443a532268291bd402e294d91042e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>moodycamel::ConcurrentQueue&lt; T, Traits &gt;::FreeList&lt; N &gt;::FreeList</definition>
        <argsstring>(FreeList const &amp;) MOODYCAMEL_DELETE_FUNCTION</argsstring>
        <name>FreeList</name>
        <param>
          <type>FreeList const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1388" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1ad1e1d368c85a95561e9b7d3169272a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FreeList &amp;</type>
        <definition>FreeList&amp; moodycamel::ConcurrentQueue&lt; T, Traits &gt;::FreeList&lt; N &gt;::operator=</definition>
        <argsstring>(FreeList const &amp;) MOODYCAMEL_DELETE_FUNCTION</argsstring>
        <name>operator=</name>
        <param>
          <type>FreeList const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1a14589bc236b0f416621fa379135a4077" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void moodycamel::ConcurrentQueue&lt; T, Traits &gt;::FreeList&lt; N &gt;::add</definition>
        <argsstring>(N *node)</argsstring>
        <name>add</name>
        <param>
          <type>N *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1391" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="1391" bodyend="1403"/>
      </memberdef>
      <memberdef kind="function" id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1a7283e3e0742e7bd3bc9e6cc0a09aa7fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>N *</type>
        <definition>N* moodycamel::ConcurrentQueue&lt; T, Traits &gt;::FreeList&lt; N &gt;::try_get</definition>
        <argsstring>()</argsstring>
        <name>try_get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1405" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="1405" bodyend="1442"/>
      </memberdef>
      <memberdef kind="function" id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1ab0ef90da20aa51d19d91cf09be086a01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>N *</type>
        <definition>N* moodycamel::ConcurrentQueue&lt; T, Traits &gt;::FreeList&lt; N &gt;::head_unsafe</definition>
        <argsstring>() const</argsstring>
        <name>head_unsafe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1445" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="1445" bodyend="1445"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1a6f884e19fc9859c7e74ee18d5f8f47b8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void moodycamel::ConcurrentQueue&lt; T, Traits &gt;::FreeList&lt; N &gt;::add_knowing_refcount_is_zero</definition>
        <argsstring>(N *node)</argsstring>
        <name>add_knowing_refcount_is_zero</name>
        <param>
          <type>N *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1448" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="1448" bodyend="1470"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1383" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="1382" bodyend="1482"/>
    <listofallmembers>
      <member refid="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1a14589bc236b0f416621fa379135a4077" prot="public" virt="non-virtual"><scope>moodycamel::ConcurrentQueue::FreeList</scope><name>add</name></member>
      <member refid="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1a6f884e19fc9859c7e74ee18d5f8f47b8" prot="private" virt="non-virtual"><scope>moodycamel::ConcurrentQueue::FreeList</scope><name>add_knowing_refcount_is_zero</name></member>
      <member refid="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1ad9b24ebcd2a5325a7b31f4d377b5c54a" prot="public" virt="non-virtual"><scope>moodycamel::ConcurrentQueue::FreeList</scope><name>FreeList</name></member>
      <member refid="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1a99f0f4769908b749f136f25c6dbc6ae6" prot="public" virt="non-virtual"><scope>moodycamel::ConcurrentQueue::FreeList</scope><name>FreeList</name></member>
      <member refid="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1af1c443a532268291bd402e294d91042e" prot="public" virt="non-virtual"><scope>moodycamel::ConcurrentQueue::FreeList</scope><name>FreeList</name></member>
      <member refid="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1ae118c5d74c13b10de15c10979f187b01" prot="private" virt="non-virtual"><scope>moodycamel::ConcurrentQueue::FreeList</scope><name>freeListHead</name></member>
      <member refid="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1ab0ef90da20aa51d19d91cf09be086a01" prot="public" virt="non-virtual"><scope>moodycamel::ConcurrentQueue::FreeList</scope><name>head_unsafe</name></member>
      <member refid="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1ad1e1d368c85a95561e9b7d3169272a8b" prot="public" virt="non-virtual"><scope>moodycamel::ConcurrentQueue::FreeList</scope><name>operator=</name></member>
      <member refid="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1abc38362334f160539380452146e071da" prot="private" virt="non-virtual"><scope>moodycamel::ConcurrentQueue::FreeList</scope><name>REFS_MASK</name></member>
      <member refid="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1a8c5a97db3f502da842d430ac3985bdb1" prot="private" virt="non-virtual"><scope>moodycamel::ConcurrentQueue::FreeList</scope><name>SHOULD_BE_ON_FREELIST</name></member>
      <member refid="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1a84a45b61667074f8cfde4b0faa4057e1" prot="public" virt="non-virtual"><scope>moodycamel::ConcurrentQueue::FreeList</scope><name>swap</name></member>
      <member refid="structmoodycamel_1_1_concurrent_queue_1_1_free_list_1a7283e3e0742e7bd3bc9e6cc0a09aa7fb" prot="public" virt="non-virtual"><scope>moodycamel::ConcurrentQueue::FreeList</scope><name>try_get</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
