<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_node" kind="struct" language="C++" prot="private">
    <compoundname>moodycamel::ConcurrentQueue::FreeListNode</compoundname>
    <templateparamlist>
      <param>
        <type>typename N</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_node_1a0c934202ce7257bdb5210788858587ad" prot="public" static="no" mutable="no">
        <type>std::atomic&lt; std::uint32_t &gt;</type>
        <definition>std::atomic&lt;std::uint32_t&gt; moodycamel::ConcurrentQueue&lt; T, Traits &gt;::FreeListNode&lt; N &gt;::freeListRefs</definition>
        <argsstring></argsstring>
        <name>freeListRefs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1374" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="1374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_node_1abfbf7153bbe8d93e6c7760010cc07dd4" prot="public" static="no" mutable="no">
        <type>std::atomic&lt; N * &gt;</type>
        <definition>std::atomic&lt;N*&gt; moodycamel::ConcurrentQueue&lt; T, Traits &gt;::FreeListNode&lt; N &gt;::freeListNext</definition>
        <argsstring></argsstring>
        <name>freeListNext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1375" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="1375" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structmoodycamel_1_1_concurrent_queue_1_1_free_list_node_1a51b1a7127e0203be5808e79123155a8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>moodycamel::ConcurrentQueue&lt; T, Traits &gt;::FreeListNode&lt; N &gt;::FreeListNode</definition>
        <argsstring>()</argsstring>
        <name>FreeListNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1372" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="1372" bodyend="1372"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="1371" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="1370" bodyend="1376"/>
    <listofallmembers>
      <member refid="structmoodycamel_1_1_concurrent_queue_1_1_free_list_node_1abfbf7153bbe8d93e6c7760010cc07dd4" prot="public" virt="non-virtual"><scope>moodycamel::ConcurrentQueue::FreeListNode</scope><name>freeListNext</name></member>
      <member refid="structmoodycamel_1_1_concurrent_queue_1_1_free_list_node_1a51b1a7127e0203be5808e79123155a8c" prot="public" virt="non-virtual"><scope>moodycamel::ConcurrentQueue::FreeListNode</scope><name>FreeListNode</name></member>
      <member refid="structmoodycamel_1_1_concurrent_queue_1_1_free_list_node_1a0c934202ce7257bdb5210788858587ad" prot="public" virt="non-virtual"><scope>moodycamel::ConcurrentQueue::FreeListNode</scope><name>freeListRefs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
