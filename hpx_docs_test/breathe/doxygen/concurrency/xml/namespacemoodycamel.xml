<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacemoodycamel" kind="namespace" language="C++">
    <compoundname>moodycamel</compoundname>
    <innerclass refid="classmoodycamel_1_1_blocking_concurrent_queue" prot="public">moodycamel::BlockingConcurrentQueue</innerclass>
    <innerclass refid="classmoodycamel_1_1_concurrent_queue" prot="public">moodycamel::ConcurrentQueue</innerclass>
    <innerclass refid="structmoodycamel_1_1_concurrent_queue_default_traits" prot="public">moodycamel::ConcurrentQueueDefaultTraits</innerclass>
    <innerclass refid="structmoodycamel_1_1_consumer_token" prot="public">moodycamel::ConsumerToken</innerclass>
    <innerclass refid="structmoodycamel_1_1_producer_token" prot="public">moodycamel::ProducerToken</innerclass>
    <innernamespace refid="namespacemoodycamel_1_1details">moodycamel::details</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="hpx_2concurrency_2concurrentqueue_8hpp_1a78277ebe26a395c75c17c9a5f495c5f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Traits</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void moodycamel::swap</definition>
        <argsstring>(typename ConcurrentQueue&lt; T, Traits &gt;::ImplicitProducerKVP &amp;a, typename ConcurrentQueue&lt; T, Traits &gt;::ImplicitProducerKVP &amp;b) MOODYCAMEL_NOEXCEPT</argsstring>
        <name>swap</name>
        <param>
          <type>typename <ref refid="classmoodycamel_1_1_concurrent_queue" kindref="compound">ConcurrentQueue</ref>&lt; T, Traits &gt;::ImplicitProducerKVP &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>typename <ref refid="classmoodycamel_1_1_concurrent_queue" kindref="compound">ConcurrentQueue</ref>&lt; T, Traits &gt;::ImplicitProducerKVP &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="695" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="3642" bodyend="3645"/>
      </memberdef>
      <memberdef kind="function" id="hpx_2concurrency_2concurrentqueue_8hpp_1ada7384ac6a6a6c59cacc23734bd2adea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Traits</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void moodycamel::swap</definition>
        <argsstring>(ConcurrentQueue&lt; T, Traits &gt; &amp;a, ConcurrentQueue&lt; T, Traits &gt; &amp;b) MOODYCAMEL_NOEXCEPT</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classmoodycamel_1_1_concurrent_queue" kindref="compound">ConcurrentQueue</ref>&lt; T, Traits &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="classmoodycamel_1_1_concurrent_queue" kindref="compound">ConcurrentQueue</ref>&lt; T, Traits &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="3626" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="3626" bodyend="3629"/>
      </memberdef>
      <memberdef kind="function" id="hpx_2concurrency_2concurrentqueue_8hpp_1a3db96606b0ab22d1aea18d820dc46c6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void moodycamel::swap</definition>
        <argsstring>(ProducerToken &amp;a, ProducerToken &amp;b) MOODYCAMEL_NOEXCEPT</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="structmoodycamel_1_1_producer_token" kindref="compound">ProducerToken</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structmoodycamel_1_1_producer_token" kindref="compound">ProducerToken</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="3631" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="3631" bodyend="3634"/>
      </memberdef>
      <memberdef kind="function" id="hpx_2concurrency_2concurrentqueue_8hpp_1a80d8ad0cde3189f421309a4017850ac2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void moodycamel::swap</definition>
        <argsstring>(ConsumerToken &amp;a, ConsumerToken &amp;b) MOODYCAMEL_NOEXCEPT</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="structmoodycamel_1_1_consumer_token" kindref="compound">ConsumerToken</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="structmoodycamel_1_1_consumer_token" kindref="compound">ConsumerToken</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="3636" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="3636" bodyend="3639"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="90" column="1"/>
  </compounddef>
</doxygen>
