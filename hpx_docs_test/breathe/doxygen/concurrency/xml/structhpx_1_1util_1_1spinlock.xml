<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1util_1_1spinlock" kind="struct" language="C++" prot="public">
    <compoundname>hpx::util::spinlock</compoundname>
    <includes refid="hpx_2concurrency_2spinlock_8hpp" local="no">spinlock.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structhpx_1_1util_1_1spinlock_1a0582893dc1795e4b1647e3268d8ab94c" prot="public" static="no">
        <type>boost::detail::spinlock *</type>
        <definition>typedef boost::detail::spinlock* hpx::util::spinlock::native_handle_type</definition>
        <argsstring></argsstring>
        <name>native_handle_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/spinlock.hpp" line="75" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/spinlock.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structhpx_1_1util_1_1spinlock_1a63347187662a42ba32fc7b0f2aa30485" prot="private" static="no" mutable="no">
        <type>boost::detail::spinlock</type>
        <definition>boost::detail::spinlock hpx::util::spinlock::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/spinlock.hpp" line="29" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/spinlock.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1util_1_1spinlock_1af1dd5761283521afda00bd3ecb44ff86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hpx::util::spinlock::HPX_NON_COPYABLE</definition>
        <argsstring>(spinlock)</argsstring>
        <name>HPX_NON_COPYABLE</name>
        <param>
          <type><ref refid="structhpx_1_1util_1_1spinlock" kindref="compound">spinlock</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/spinlock.hpp" line="23" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1spinlock_1adceb90e76be07c559d592c13951c5b1e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::util::spinlock::spinlock</definition>
        <argsstring>(char const *=nullptr)</argsstring>
        <name>spinlock</name>
        <param>
          <type>char const *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/spinlock.hpp" line="33" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/spinlock.hpp" bodystart="33" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1spinlock_1ae6ae54a877a7ac7002c905355bc64edb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::util::spinlock::~spinlock</definition>
        <argsstring>()</argsstring>
        <name>~spinlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/spinlock.hpp" line="41" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/spinlock.hpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1spinlock_1ae55fa6281613f30a0fb37719aaf5a50b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::spinlock::lock</definition>
        <argsstring>()</argsstring>
        <name>lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/spinlock.hpp" line="46" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/spinlock.hpp" bodystart="46" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1spinlock_1a0f548a6d25db1462ab00a0e6f2fe1f54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hpx::util::spinlock::try_lock</definition>
        <argsstring>()</argsstring>
        <name>try_lock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/spinlock.hpp" line="54" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/spinlock.hpp" bodystart="54" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1spinlock_1a395c1bf47c7a66521bb246830c43b1f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::spinlock::unlock</definition>
        <argsstring>()</argsstring>
        <name>unlock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/spinlock.hpp" line="67" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/spinlock.hpp" bodystart="67" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1spinlock_1a698981c25223db8745b4e7c228657d45" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>native_handle_type</type>
        <definition>native_handle_type hpx::util::spinlock::native_handle</definition>
        <argsstring>()</argsstring>
        <name>native_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/spinlock.hpp" line="77" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/spinlock.hpp" bodystart="77" bodyend="80"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>boost::mutex-compatible spinlock class </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/concurrency/include/hpx/concurrency/spinlock.hpp" line="21" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/spinlock.hpp" bodystart="20" bodyend="81"/>
    <listofallmembers>
      <member refid="structhpx_1_1util_1_1spinlock_1af1dd5761283521afda00bd3ecb44ff86" prot="public" virt="non-virtual"><scope>hpx::util::spinlock</scope><name>HPX_NON_COPYABLE</name></member>
      <member refid="structhpx_1_1util_1_1spinlock_1ae55fa6281613f30a0fb37719aaf5a50b" prot="public" virt="non-virtual"><scope>hpx::util::spinlock</scope><name>lock</name></member>
      <member refid="structhpx_1_1util_1_1spinlock_1a63347187662a42ba32fc7b0f2aa30485" prot="private" virt="non-virtual"><scope>hpx::util::spinlock</scope><name>m</name></member>
      <member refid="structhpx_1_1util_1_1spinlock_1a698981c25223db8745b4e7c228657d45" prot="public" virt="non-virtual"><scope>hpx::util::spinlock</scope><name>native_handle</name></member>
      <member refid="structhpx_1_1util_1_1spinlock_1a0582893dc1795e4b1647e3268d8ab94c" prot="public" virt="non-virtual"><scope>hpx::util::spinlock</scope><name>native_handle_type</name></member>
      <member refid="structhpx_1_1util_1_1spinlock_1adceb90e76be07c559d592c13951c5b1e" prot="public" virt="non-virtual"><scope>hpx::util::spinlock</scope><name>spinlock</name></member>
      <member refid="structhpx_1_1util_1_1spinlock_1a0f548a6d25db1462ab00a0e6f2fe1f54" prot="public" virt="non-virtual"><scope>hpx::util::spinlock</scope><name>try_lock</name></member>
      <member refid="structhpx_1_1util_1_1spinlock_1a395c1bf47c7a66521bb246830c43b1f6" prot="public" virt="non-virtual"><scope>hpx::util::spinlock</scope><name>unlock</name></member>
      <member refid="structhpx_1_1util_1_1spinlock_1ae6ae54a877a7ac7002c905355bc64edb" prot="public" virt="non-virtual"><scope>hpx::util::spinlock</scope><name>~spinlock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
