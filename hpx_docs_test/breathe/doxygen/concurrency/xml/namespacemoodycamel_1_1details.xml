<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacemoodycamel_1_1details" kind="namespace" language="C++">
    <compoundname>moodycamel::details</compoundname>
    <innerclass refid="structmoodycamel_1_1details_1_1__hash__32__or__64" prot="public">moodycamel::details::_hash_32_or_64</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1__hash__32__or__64_3_011_01_4" prot="public">moodycamel::details::_hash_32_or_64&lt; 1 &gt;</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1_concurrent_queue_producer_typeless_base" prot="public">moodycamel::details::ConcurrentQueueProducerTypelessBase</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1const__numeric__max" prot="public">moodycamel::details::const_numeric_max</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1hash__32__or__64" prot="public">moodycamel::details::hash_32_or_64</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1is__trivially__destructible" prot="public">moodycamel::details::is_trivially_destructible</innerclass>
    <innerclass refid="unionmoodycamel_1_1details_1_1max__align__t" prot="public">moodycamel::details::max_align_t</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1nomove__if" prot="public">moodycamel::details::nomove_if</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1nomove__if_3_01false_01_4" prot="public">moodycamel::details::nomove_if&lt; false &gt;</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1static__is__lock__free" prot="public">moodycamel::details::static_is_lock_free</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1static__is__lock__free_3_01bool_01_4" prot="public">moodycamel::details::static_is_lock_free&lt; bool &gt;</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1static__is__lock__free_3_01_u_01_5_01_4" prot="public">moodycamel::details::static_is_lock_free&lt; U * &gt;</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1static__is__lock__free__num" prot="public">moodycamel::details::static_is_lock_free_num</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1static__is__lock__free__num_3_01int_01_4" prot="public">moodycamel::details::static_is_lock_free_num&lt; int &gt;</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1static__is__lock__free__num_3_01long_01_4" prot="public">moodycamel::details::static_is_lock_free_num&lt; long &gt;</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1static__is__lock__free__num_3_01long_01long_01_4" prot="public">moodycamel::details::static_is_lock_free_num&lt; long long &gt;</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1static__is__lock__free__num_3_01short_01_4" prot="public">moodycamel::details::static_is_lock_free_num&lt; short &gt;</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1static__is__lock__free__num_3_01signed_01char_01_4" prot="public">moodycamel::details::static_is_lock_free_num&lt; signed char &gt;</innerclass>
    <innerclass refid="structmoodycamel_1_1details_1_1thread__id__converter" prot="public">moodycamel::details::thread_id_converter</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="hpx_2concurrency_2concurrentqueue_8hpp_1af2f0ffefbd01d4921bb4a89353b30018" prot="public" static="no">
        <type>std::uintptr_t</type>
        <definition>typedef std::uintptr_t moodycamel::details::thread_id_t</definition>
        <argsstring></argsstring>
        <name>thread_id_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="162" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="hpx_2concurrency_2concurrentqueue_8hpp_1a61cb412cfd41b7cf23ad9338cb850aee" prot="public" static="no">
        <type>std::max_align_t</type>
        <definition>typedef std::max_align_t moodycamel::details::std_max_align_t</definition>
        <argsstring></argsstring>
        <name>std_max_align_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="261" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="hpx_2concurrency_2concurrentqueue_8hpp_1a716cb93a06b4ef56e29ad3ff20b30451" prot="public" static="yes" mutable="no">
        <type>const thread_id_t</type>
        <definition>const thread_id_t moodycamel::details::invalid_thread_id</definition>
        <argsstring></argsstring>
        <name>invalid_thread_id</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="163" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="hpx_2concurrency_2concurrentqueue_8hpp_1a08560f3eeab113084bf32ed7b79483a0" prot="public" static="yes" mutable="no">
        <type>const thread_id_t</type>
        <definition>const thread_id_t moodycamel::details::invalid_thread_id2</definition>
        <argsstring></argsstring>
        <name>invalid_thread_id2</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="164" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hpx_2concurrency_2concurrentqueue_8hpp_1a9d5514e68f4f0f2d4295a0ac62386822" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>thread_id_t</type>
        <definition>static thread_id_t moodycamel::details::thread_id</definition>
        <argsstring>()</argsstring>
        <name>thread_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="165" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="hpx_2concurrency_2concurrentqueue_8hpp_1a40f7377af074d1cd282e22f75674c59d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool()</type>
        <definition>static bool() moodycamel::details::likely</definition>
        <argsstring>(bool x)</argsstring>
        <name>likely</name>
        <param>
          <type>bool</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="239" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="hpx_2concurrency_2concurrentqueue_8hpp_1aa5927baf54594051335e9d3e858fc08e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool()</type>
        <definition>static bool() moodycamel::details::unlikely</definition>
        <argsstring>(bool x)</argsstring>
        <name>unlikely</name>
        <param>
          <type>bool</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="240" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="240" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="hpx_2concurrency_2concurrentqueue_8hpp_1a89c17c65fd022267103d6fcaa350bfbf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t moodycamel::details::hash_thread_id</definition>
        <argsstring>(thread_id_t id)</argsstring>
        <name>hash_thread_id</name>
        <param>
          <type>thread_id_t</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="414" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="414" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="hpx_2concurrency_2concurrentqueue_8hpp_1a2ff09523faed5206b521363a67a94df0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool moodycamel::details::circular_less_than</definition>
        <argsstring>(T a, T b)</argsstring>
        <name>circular_less_than</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="422" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="422" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="hpx_2concurrency_2concurrentqueue_8hpp_1a7c9128d1c6f20e7dd075543bb295d665" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>char *</type>
        <definition>static char* moodycamel::details::align_for</definition>
        <argsstring>(char *ptr)</argsstring>
        <name>align_for</name>
        <param>
          <type>char *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="436" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="436" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="hpx_2concurrency_2concurrentqueue_8hpp_1afa522c74433d489117e82dea779a797f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>static T moodycamel::details::ceil_to_pow_2</definition>
        <argsstring>(T x)</argsstring>
        <name>ceil_to_pow_2</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="443" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="443" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="hpx_2concurrency_2concurrentqueue_8hpp_1a5b1d2c3239fba04fbd0c15863042e121" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void moodycamel::details::swap_relaxed</definition>
        <argsstring>(std::atomic&lt; T &gt; &amp;left, std::atomic&lt; T &gt; &amp;right)</argsstring>
        <name>swap_relaxed</name>
        <param>
          <type>std::atomic&lt; T &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>std::atomic&lt; T &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="460" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="460" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="hpx_2concurrency_2concurrentqueue_8hpp_1aa76b694b726ac3e96d15d4930dd85cec" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T const  &amp;</type>
        <definition>static T const&amp; moodycamel::details::nomove</definition>
        <argsstring>(T const &amp;x)</argsstring>
        <name>nomove</name>
        <param>
          <type>T const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="468" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="468" bodyend="471"/>
      </memberdef>
      <memberdef kind="function" id="hpx_2concurrency_2concurrentqueue_8hpp_1a6b9ee0505690e9c90b5279e46c733391" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename It</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto moodycamel::details::deref_noexcept</definition>
        <argsstring>(It &amp;it) MOODYCAMEL_NOEXCEPT -&gt; decltype(*it)</argsstring>
        <name>deref_noexcept</name>
        <param>
          <type>It &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="495" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" bodystart="495" bodyend="498"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/concurrency/include/hpx/concurrency/concurrentqueue.hpp" line="90" column="1"/>
  </compounddef>
</doxygen>
