<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structboost_1_1lockfree_1_1deque__anchor" kind="struct" language="C++" prot="public">
    <compoundname>boost::lockfree::deque_anchor</compoundname>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1lockfree_1_1deque__anchor_1afa0d64e3c53247a147d30f5745c7321b" prot="public" static="no">
        <type><ref refid="structboost_1_1lockfree_1_1deque__node" kindref="compound">deque_node</ref>&lt; T &gt;</type>
        <definition>typedef deque_node&lt;T&gt; boost::lockfree::deque_anchor&lt; T &gt;::node</definition>
        <argsstring></argsstring>
        <name>node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="83" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1lockfree_1_1deque__anchor_1ab4a7921eaf47599360231aa7ced5ff7f" prot="public" static="no">
        <type>node::pointer</type>
        <definition>typedef node::pointer boost::lockfree::deque_anchor&lt; T &gt;::node_pointer</definition>
        <argsstring></argsstring>
        <name>node_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="84" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1lockfree_1_1deque__anchor_1a06e97729945fbce3f2eb86e83677e931" prot="public" static="no">
        <type>node::atomic_pointer</type>
        <definition>typedef node::atomic_pointer boost::lockfree::deque_anchor&lt; T &gt;::atomic_node_pointer</definition>
        <argsstring></argsstring>
        <name>atomic_node_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="85" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1lockfree_1_1deque__anchor_1ae4d75db7d2a6d190875b1229a9e9d3e3" prot="public" static="no">
        <type>node::tag_t</type>
        <definition>typedef node::tag_t boost::lockfree::deque_anchor&lt; T &gt;::tag_t</definition>
        <argsstring></argsstring>
        <name>tag_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="87" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1lockfree_1_1deque__anchor_1a22f86b5c85cb5fecef2d99888a2d5d04" prot="public" static="no">
        <type>tagged_ptr_pair&lt; <ref refid="structboost_1_1lockfree_1_1deque__node" kindref="compound">node</ref>, <ref refid="structboost_1_1lockfree_1_1deque__node" kindref="compound">node</ref> &gt;</type>
        <definition>typedef tagged_ptr_pair&lt;node, node&gt; boost::lockfree::deque_anchor&lt; T &gt;::pair</definition>
        <argsstring></argsstring>
        <name>pair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="89" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1lockfree_1_1deque__anchor_1ae457522d68a03bc794ed39e3a9d01da9" prot="public" static="no">
        <type>std::atomic&lt; pair &gt;</type>
        <definition>typedef std::atomic&lt;pair&gt; boost::lockfree::deque_anchor&lt; T &gt;::atomic_pair</definition>
        <argsstring></argsstring>
        <name>atomic_pair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="90" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structboost_1_1lockfree_1_1deque__anchor_1a810334f6ecd37b1e0afec830f814995a" prot="private" static="no" mutable="no">
        <type>atomic_pair</type>
        <definition>atomic_pair boost::lockfree::deque_anchor&lt; T &gt;::pair_</definition>
        <argsstring></argsstring>
        <name>pair_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="93" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1adf3b2284f05e8e61e1902d8d492a50b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::lockfree::deque_anchor&lt; T &gt;::deque_anchor</definition>
        <argsstring>()</argsstring>
        <name>deque_anchor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="96" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1a3c7f8eca5e1b0c805c7c2ab356fac15f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::lockfree::deque_anchor&lt; T &gt;::deque_anchor</definition>
        <argsstring>(deque_anchor const &amp;p)</argsstring>
        <name>deque_anchor</name>
        <param>
          <type><ref refid="structboost_1_1lockfree_1_1deque__anchor" kindref="compound">deque_anchor</ref> const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="101" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1a8860fa4ef2cc125ffcbbf48eb0dc8993" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::lockfree::deque_anchor&lt; T &gt;::deque_anchor</definition>
        <argsstring>(pair const &amp;p)</argsstring>
        <name>deque_anchor</name>
        <param>
          <type>pair const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="106" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1a2eafbcd58978623642fc7ad5bd08286c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::lockfree::deque_anchor&lt; T &gt;::deque_anchor</definition>
        <argsstring>(node *lptr, node *rptr, tag_t status=stable, tag_t tag=0)</argsstring>
        <name>deque_anchor</name>
        <param>
          <type><ref refid="structboost_1_1lockfree_1_1deque__node" kindref="compound">node</ref> *</type>
          <declname>lptr</declname>
        </param>
        <param>
          <type><ref refid="structboost_1_1lockfree_1_1deque__node" kindref="compound">node</ref> *</type>
          <declname>rptr</declname>
        </param>
        <param>
          <type>tag_t</type>
          <declname>status</declname>
          <defval>stable</defval>
        </param>
        <param>
          <type>tag_t</type>
          <declname>tag</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="111" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="111" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1ae8ce17a1c56d1e0aac101e3c35473320" prot="public" static="no" const="yes" explicit="no" inline="yes" volatile="yes" virt="non-virtual">
        <type>pair</type>
        <definition>pair boost::lockfree::deque_anchor&lt; T &gt;::lrs</definition>
        <argsstring>() const volatile</argsstring>
        <name>lrs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="117" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1aa77966b75e374f73b45c0a75a4c7825b" prot="public" static="no" const="yes" explicit="no" inline="yes" volatile="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1lockfree_1_1deque__node" kindref="compound">node</ref> *</type>
        <definition>node* boost::lockfree::deque_anchor&lt; T &gt;::left</definition>
        <argsstring>() const volatile</argsstring>
        <name>left</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="122" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1ae10a4bfd8c6ad9952dd338e09dfde628" prot="public" static="no" const="yes" explicit="no" inline="yes" volatile="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1lockfree_1_1deque__node" kindref="compound">node</ref> *</type>
        <definition>node* boost::lockfree::deque_anchor&lt; T &gt;::right</definition>
        <argsstring>() const volatile</argsstring>
        <name>right</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="127" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1a634896cfba4a9caabecf6afac1f462f8" prot="public" static="no" const="yes" explicit="no" inline="yes" volatile="yes" virt="non-virtual">
        <type>tag_t</type>
        <definition>tag_t boost::lockfree::deque_anchor&lt; T &gt;::status</definition>
        <argsstring>() const volatile</argsstring>
        <name>status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="132" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1ade9567c0556b92b20d4622493c52daa3" prot="public" static="no" const="yes" explicit="no" inline="yes" volatile="yes" virt="non-virtual">
        <type>tag_t</type>
        <definition>tag_t boost::lockfree::deque_anchor&lt; T &gt;::tag</definition>
        <argsstring>() const volatile</argsstring>
        <name>tag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="137" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1ac3301276f0f93b25be7febef60cfe673" prot="public" static="no" const="no" explicit="no" inline="yes" volatile="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::lockfree::deque_anchor&lt; T &gt;::cas</definition>
        <argsstring>(deque_anchor &amp;expected, deque_anchor const &amp;desired) volatile</argsstring>
        <name>cas</name>
        <param>
          <type><ref refid="structboost_1_1lockfree_1_1deque__anchor" kindref="compound">deque_anchor</ref> &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type><ref refid="structboost_1_1lockfree_1_1deque__anchor" kindref="compound">deque_anchor</ref> const &amp;</type>
          <declname>desired</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="142" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="142" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1a526fdc74f62727190d17caedb5d03c1b" prot="public" static="no" const="no" explicit="no" inline="yes" volatile="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::lockfree::deque_anchor&lt; T &gt;::cas</definition>
        <argsstring>(pair &amp;expected, deque_anchor const &amp;desired) volatile</argsstring>
        <name>cas</name>
        <param>
          <type>pair &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type><ref refid="structboost_1_1lockfree_1_1deque__anchor" kindref="compound">deque_anchor</ref> const &amp;</type>
          <declname>desired</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="148" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1a28239dd2e05762541a7efbf17985e275" prot="public" static="no" const="no" explicit="no" inline="yes" volatile="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::lockfree::deque_anchor&lt; T &gt;::cas</definition>
        <argsstring>(deque_anchor &amp;expected, pair const &amp;desired) volatile</argsstring>
        <name>cas</name>
        <param>
          <type><ref refid="structboost_1_1lockfree_1_1deque__anchor" kindref="compound">deque_anchor</ref> &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>pair const &amp;</type>
          <declname>desired</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="153" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1a63672eb91cb230ab647f8a81a50af5bd" prot="public" static="no" const="no" explicit="no" inline="yes" volatile="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::lockfree::deque_anchor&lt; T &gt;::cas</definition>
        <argsstring>(pair &amp;expected, pair const &amp;desired) volatile</argsstring>
        <name>cas</name>
        <param>
          <type>pair &amp;</type>
          <declname>expected</declname>
        </param>
        <param>
          <type>pair const &amp;</type>
          <declname>desired</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="158" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="158" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1a3e293b12300f1054b95897d061af42c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::lockfree::deque_anchor&lt; T &gt;::operator==</definition>
        <argsstring>(volatile deque_anchor const &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>volatile <ref refid="structboost_1_1lockfree_1_1deque__anchor" kindref="compound">deque_anchor</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="163" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="163" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1a0056d9130230ce59b9fc79dd5c1d6aba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::lockfree::deque_anchor&lt; T &gt;::operator!=</definition>
        <argsstring>(volatile deque_anchor const &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>volatile <ref refid="structboost_1_1lockfree_1_1deque__anchor" kindref="compound">deque_anchor</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="168" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1a8dfb422ad9675c423de6da121886b389" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::lockfree::deque_anchor&lt; T &gt;::operator==</definition>
        <argsstring>(volatile pair const &amp;rhs) const</argsstring>
        <name>operator==</name>
        <param>
          <type>volatile pair const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="173" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1a95dc4846650939e60db20dc9168027be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::lockfree::deque_anchor&lt; T &gt;::operator!=</definition>
        <argsstring>(volatile pair const &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>volatile pair const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="178" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1lockfree_1_1deque__anchor_1a8249ead305406f4ee27e04675b344af0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::lockfree::deque_anchor&lt; T &gt;::is_lock_free</definition>
        <argsstring>() const</argsstring>
        <name>is_lock_free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="183" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="183" bodyend="186"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/concurrency/include/hpx/concurrency/deque.hpp" line="82" column="1" bodyfile="libs/concurrency/include/hpx/concurrency/deque.hpp" bodystart="81" bodyend="187"/>
    <listofallmembers>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1a06e97729945fbce3f2eb86e83677e931" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>atomic_node_pointer</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1ae457522d68a03bc794ed39e3a9d01da9" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>atomic_pair</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1ac3301276f0f93b25be7febef60cfe673" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>cas</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1a526fdc74f62727190d17caedb5d03c1b" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>cas</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1a28239dd2e05762541a7efbf17985e275" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>cas</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1a63672eb91cb230ab647f8a81a50af5bd" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>cas</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1adf3b2284f05e8e61e1902d8d492a50b1" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>deque_anchor</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1a3c7f8eca5e1b0c805c7c2ab356fac15f" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>deque_anchor</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1a8860fa4ef2cc125ffcbbf48eb0dc8993" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>deque_anchor</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1a2eafbcd58978623642fc7ad5bd08286c" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>deque_anchor</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1a8249ead305406f4ee27e04675b344af0" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>is_lock_free</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1aa77966b75e374f73b45c0a75a4c7825b" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>left</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1ae8ce17a1c56d1e0aac101e3c35473320" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>lrs</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1afa0d64e3c53247a147d30f5745c7321b" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>node</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1ab4a7921eaf47599360231aa7ced5ff7f" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>node_pointer</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1a0056d9130230ce59b9fc79dd5c1d6aba" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>operator!=</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1a95dc4846650939e60db20dc9168027be" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>operator!=</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1a3e293b12300f1054b95897d061af42c5" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>operator==</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1a8dfb422ad9675c423de6da121886b389" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>operator==</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1a22f86b5c85cb5fecef2d99888a2d5d04" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>pair</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1a810334f6ecd37b1e0afec830f814995a" prot="private" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>pair_</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1ae10a4bfd8c6ad9952dd338e09dfde628" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>right</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1a634896cfba4a9caabecf6afac1f462f8" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>status</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1ade9567c0556b92b20d4622493c52daa3" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>tag</name></member>
      <member refid="structboost_1_1lockfree_1_1deque__anchor_1ae4d75db7d2a6d190875b1229a9e9d3e3" prot="public" virt="non-virtual"><scope>boost::lockfree::deque_anchor</scope><name>tag_t</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
