<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4" kind="class" language="C++" prot="public">
    <compoundname>hpx::util::function&lt; R(Ts...), Serializable &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">detail::basic_function&lt; R(Ts...), true, Serializable &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename R</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>Ts</declname>
        <defname>Ts</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>Serializable</declname>
        <defname>Serializable</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a117e67d20e97f14ac7a7fd669fa193b8" prot="private" static="no">
        <type>detail::basic_function&lt; R(Ts...), true, Serializable &gt;</type>
        <definition>using hpx::util::function&lt; R(Ts...), Serializable &gt;::base_type =  detail::basic_function&lt;R(Ts...), true, Serializable&gt;</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/function.hpp" line="31" column="1" bodyfile="libs/functional/include/hpx/functional/function.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a0b3330487522a9e59a839610ab22f0bd" prot="public" static="no">
        <type>R</type>
        <definition>typedef R hpx::util::function&lt; R(Ts...), Serializable &gt;::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/function.hpp" line="34" column="1" bodyfile="libs/functional/include/hpx/functional/function.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a2acababad4f1b6ba129be11a78f163ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::util::function&lt; R(Ts...), Serializable &gt;::function</definition>
        <argsstring>(std::nullptr_t=nullptr) noexcept</argsstring>
        <name>function</name>
        <param>
          <type>std::nullptr_t</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/function.hpp" line="36" column="1" bodyfile="libs/functional/include/hpx/functional/function.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1af392914ee2b59d14bee2daeeed3a09e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hpx::util::function&lt; R(Ts...), Serializable &gt;::function</definition>
        <argsstring>(function const &amp;)=default</argsstring>
        <name>function</name>
        <param>
          <type><ref refid="classhpx_1_1util_1_1function" kindref="compound">function</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/function.hpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1ac4aeb9544bad13232d387a13a36982a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hpx::util::function&lt; R(Ts...), Serializable &gt;::function</definition>
        <argsstring>(function &amp;&amp;) noexcept=default</argsstring>
        <name>function</name>
        <param>
          <type><ref refid="classhpx_1_1util_1_1function" kindref="compound">function</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/function.hpp" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a368ada384629724bf546a1d0b8d4ed76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhpx_1_1util_1_1function" kindref="compound">function</ref> &amp;</type>
        <definition>function&amp; hpx::util::function&lt; R(Ts...), Serializable &gt;::operator=</definition>
        <argsstring>(function const &amp;)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhpx_1_1util_1_1function" kindref="compound">function</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/function.hpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a26901be8bed432a5034b0a8b5aa12eac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhpx_1_1util_1_1function" kindref="compound">function</ref> &amp;</type>
        <definition>function&amp; hpx::util::function&lt; R(Ts...), Serializable &gt;::operator=</definition>
        <argsstring>(function &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhpx_1_1util_1_1function" kindref="compound">function</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/function.hpp" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a6cbf891c0363031fb3cf732f1c8d7717" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename FD</type>
            <defval>typename std::decay&lt;F&gt;::type</defval>
          </param>
          <param>
            <type>typename Enable1</type>
            <defval>typename std::enable_if&lt;                !std::is_same&lt;FD, <ref refid="classhpx_1_1util_1_1function" kindref="compound">function</ref>&gt;::value&gt;::type</defval>
          </param>
          <param>
            <type>typename Enable2</type>
            <defval>typename std::enable_if&lt;                <ref refid="structhpx_1_1traits_1_1is__invocable__r" kindref="compound">traits::is_invocable_r</ref>&lt;R, FD&amp;, Ts...&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>hpx::util::function&lt; R(Ts...), Serializable &gt;::function</definition>
        <argsstring>(F &amp;&amp;f)</argsstring>
        <name>function</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/function.hpp" line="49" column="1" bodyfile="libs/functional/include/hpx/functional/function.hpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a9ef2fe90b33241af482913fde52eb9ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename FD</type>
            <defval>typename std::decay&lt;F&gt;::type</defval>
          </param>
          <param>
            <type>typename Enable1</type>
            <defval>typename std::enable_if&lt;                !std::is_same&lt;FD, <ref refid="classhpx_1_1util_1_1function" kindref="compound">function</ref>&gt;::value&gt;::type</defval>
          </param>
          <param>
            <type>typename Enable2</type>
            <defval>typename std::enable_if&lt;                <ref refid="structhpx_1_1traits_1_1is__invocable__r" kindref="compound">traits::is_invocable_r</ref>&lt;R, FD&amp;, Ts...&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classhpx_1_1util_1_1function" kindref="compound">function</ref> &amp;</type>
        <definition>function&amp; hpx::util::function&lt; R(Ts...), Serializable &gt;::operator=</definition>
        <argsstring>(F &amp;&amp;f)</argsstring>
        <name>operator=</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/function.hpp" line="60" column="1" bodyfile="libs/functional/include/hpx/functional/function.hpp" bodystart="60" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>detail::basic_function&lt; R(Ts...), true, Serializable &gt;</label>
      </node>
      <node id="2">
        <label>hpx::util::function&lt; R(Ts...), Serializable &gt;</label>
        <link refid="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>detail::basic_function&lt; R(Ts...), true, Serializable &gt;</label>
      </node>
      <node id="4">
        <label>hpx::util::function&lt; R(Ts...), Serializable &gt;</label>
        <link refid="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/functional/include/hpx/functional/function.hpp" line="30" column="1" bodyfile="libs/functional/include/hpx/functional/function.hpp" bodystart="28" bodyend="71"/>
    <listofallmembers>
      <member refid="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a117e67d20e97f14ac7a7fd669fa193b8" prot="private" virt="non-virtual"><scope>hpx::util::function&lt; R(Ts...), Serializable &gt;</scope><name>base_type</name></member>
      <member refid="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a2acababad4f1b6ba129be11a78f163ff" prot="public" virt="non-virtual"><scope>hpx::util::function&lt; R(Ts...), Serializable &gt;</scope><name>function</name></member>
      <member refid="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1af392914ee2b59d14bee2daeeed3a09e1" prot="public" virt="non-virtual"><scope>hpx::util::function&lt; R(Ts...), Serializable &gt;</scope><name>function</name></member>
      <member refid="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1ac4aeb9544bad13232d387a13a36982a6" prot="public" virt="non-virtual"><scope>hpx::util::function&lt; R(Ts...), Serializable &gt;</scope><name>function</name></member>
      <member refid="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a6cbf891c0363031fb3cf732f1c8d7717" prot="public" virt="non-virtual"><scope>hpx::util::function&lt; R(Ts...), Serializable &gt;</scope><name>function</name></member>
      <member refid="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a368ada384629724bf546a1d0b8d4ed76" prot="public" virt="non-virtual"><scope>hpx::util::function&lt; R(Ts...), Serializable &gt;</scope><name>operator=</name></member>
      <member refid="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a26901be8bed432a5034b0a8b5aa12eac" prot="public" virt="non-virtual"><scope>hpx::util::function&lt; R(Ts...), Serializable &gt;</scope><name>operator=</name></member>
      <member refid="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a9ef2fe90b33241af482913fde52eb9ac" prot="public" virt="non-virtual"><scope>hpx::util::function&lt; R(Ts...), Serializable &gt;</scope><name>operator=</name></member>
      <member refid="classhpx_1_1util_1_1function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a0b3330487522a9e59a839610ab22f0bd" prot="public" virt="non-virtual"><scope>hpx::util::function&lt; R(Ts...), Serializable &gt;</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
