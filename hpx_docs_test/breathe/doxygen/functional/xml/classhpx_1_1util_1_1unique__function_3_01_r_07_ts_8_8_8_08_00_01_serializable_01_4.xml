<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4" kind="class" language="C++" prot="public">
    <compoundname>hpx::util::unique_function&lt; R(Ts...), Serializable &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">detail::basic_function&lt; R(Ts...), false, Serializable &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename R</type>
      </param>
      <param>
        <type>typename...</type>
        <declname>Ts</declname>
        <defname>Ts</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>Serializable</declname>
        <defname>Serializable</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a9932168a3dd12315e40f5ebcd827231b" prot="private" static="no">
        <type>detail::basic_function&lt; R(Ts...), false, Serializable &gt;</type>
        <definition>using hpx::util::unique_function&lt; R(Ts...), Serializable &gt;::base_type =  detail::basic_function&lt;R(Ts...), false, Serializable&gt;</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/unique_function.hpp" line="31" column="1" bodyfile="libs/functional/include/hpx/functional/unique_function.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a0b3402f3df6eef8c58c2a9eb4b242624" prot="public" static="no">
        <type>R</type>
        <definition>typedef R hpx::util::unique_function&lt; R(Ts...), Serializable &gt;::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/unique_function.hpp" line="34" column="1" bodyfile="libs/functional/include/hpx/functional/unique_function.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a8f24c893cae0e8ecb67de10fee96c40c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::util::unique_function&lt; R(Ts...), Serializable &gt;::unique_function</definition>
        <argsstring>(std::nullptr_t=nullptr) noexcept</argsstring>
        <name>unique_function</name>
        <param>
          <type>std::nullptr_t</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/unique_function.hpp" line="36" column="1" bodyfile="libs/functional/include/hpx/functional/unique_function.hpp" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a9ed40779ec6e1756bac3be1b82919d1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hpx::util::unique_function&lt; R(Ts...), Serializable &gt;::unique_function</definition>
        <argsstring>(unique_function &amp;&amp;) noexcept=default</argsstring>
        <name>unique_function</name>
        <param>
          <type><ref refid="classhpx_1_1util_1_1unique__function" kindref="compound">unique_function</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/unique_function.hpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1abdfdd35ebb137e8d25eaf3f1c131583b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhpx_1_1util_1_1unique__function" kindref="compound">unique_function</ref> &amp;</type>
        <definition>unique_function&amp; hpx::util::unique_function&lt; R(Ts...), Serializable &gt;::operator=</definition>
        <argsstring>(unique_function &amp;&amp;) noexcept=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhpx_1_1util_1_1unique__function" kindref="compound">unique_function</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/unique_function.hpp" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1ab4e60f8204c01666fe94b14e55b21d95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename FD</type>
            <defval>typename std::decay&lt;F&gt;::type</defval>
          </param>
          <param>
            <type>typename Enable1</type>
            <defval>typename std::enable_if&lt;                !std::is_same&lt;FD, <ref refid="classhpx_1_1util_1_1unique__function" kindref="compound">unique_function</ref>&gt;::value&gt;::type</defval>
          </param>
          <param>
            <type>typename Enable2</type>
            <defval>typename std::enable_if&lt;                <ref refid="structhpx_1_1traits_1_1is__invocable__r" kindref="compound">traits::is_invocable_r</ref>&lt;R, FD&amp;, Ts...&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>hpx::util::unique_function&lt; R(Ts...), Serializable &gt;::unique_function</definition>
        <argsstring>(F &amp;&amp;f)</argsstring>
        <name>unique_function</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/unique_function.hpp" line="47" column="1" bodyfile="libs/functional/include/hpx/functional/unique_function.hpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a961c3a9b6e3da0c08ed7649d652968c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename FD</type>
            <defval>typename std::decay&lt;F&gt;::type</defval>
          </param>
          <param>
            <type>typename Enable1</type>
            <defval>typename std::enable_if&lt;                !std::is_same&lt;FD, <ref refid="classhpx_1_1util_1_1unique__function" kindref="compound">unique_function</ref>&gt;::value&gt;::type</defval>
          </param>
          <param>
            <type>typename Enable2</type>
            <defval>typename std::enable_if&lt;                <ref refid="structhpx_1_1traits_1_1is__invocable__r" kindref="compound">traits::is_invocable_r</ref>&lt;R, FD&amp;, Ts...&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classhpx_1_1util_1_1unique__function" kindref="compound">unique_function</ref> &amp;</type>
        <definition>unique_function&amp; hpx::util::unique_function&lt; R(Ts...), Serializable &gt;::operator=</definition>
        <argsstring>(F &amp;&amp;f)</argsstring>
        <name>operator=</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/functional/include/hpx/functional/unique_function.hpp" line="58" column="1" bodyfile="libs/functional/include/hpx/functional/unique_function.hpp" bodystart="58" bodyend="62"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="93">
        <label>detail::basic_function&lt; R(Ts...), false, Serializable &gt;</label>
      </node>
      <node id="92">
        <label>hpx::util::unique_function&lt; R(Ts...), Serializable &gt;</label>
        <link refid="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="95">
        <label>detail::basic_function&lt; R(Ts...), false, Serializable &gt;</label>
      </node>
      <node id="94">
        <label>hpx::util::unique_function&lt; R(Ts...), Serializable &gt;</label>
        <link refid="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4"/>
        <childnode refid="95" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/functional/include/hpx/functional/unique_function.hpp" line="30" column="1" bodyfile="libs/functional/include/hpx/functional/unique_function.hpp" bodystart="28" bodyend="69"/>
    <listofallmembers>
      <member refid="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a9932168a3dd12315e40f5ebcd827231b" prot="private" virt="non-virtual"><scope>hpx::util::unique_function&lt; R(Ts...), Serializable &gt;</scope><name>base_type</name></member>
      <member refid="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1abdfdd35ebb137e8d25eaf3f1c131583b" prot="public" virt="non-virtual"><scope>hpx::util::unique_function&lt; R(Ts...), Serializable &gt;</scope><name>operator=</name></member>
      <member refid="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a961c3a9b6e3da0c08ed7649d652968c9" prot="public" virt="non-virtual"><scope>hpx::util::unique_function&lt; R(Ts...), Serializable &gt;</scope><name>operator=</name></member>
      <member refid="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a0b3402f3df6eef8c58c2a9eb4b242624" prot="public" virt="non-virtual"><scope>hpx::util::unique_function&lt; R(Ts...), Serializable &gt;</scope><name>result_type</name></member>
      <member refid="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a8f24c893cae0e8ecb67de10fee96c40c" prot="public" virt="non-virtual"><scope>hpx::util::unique_function&lt; R(Ts...), Serializable &gt;</scope><name>unique_function</name></member>
      <member refid="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1a9ed40779ec6e1756bac3be1b82919d1c" prot="public" virt="non-virtual"><scope>hpx::util::unique_function&lt; R(Ts...), Serializable &gt;</scope><name>unique_function</name></member>
      <member refid="classhpx_1_1util_1_1unique__function_3_01_r_07_ts_8_8_8_08_00_01_serializable_01_4_1ab4e60f8204c01666fe94b14e55b21d95" prot="public" virt="non-virtual"><scope>hpx::util::unique_function&lt; R(Ts...), Serializable &gt;</scope><name>unique_function</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
