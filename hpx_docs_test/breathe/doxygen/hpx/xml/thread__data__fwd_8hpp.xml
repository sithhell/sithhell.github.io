<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="thread__data__fwd_8hpp" kind="file" language="C++">
    <compoundname>thread_data_fwd.hpp</compoundname>
    <includes local="no">hpx/config.hpp</includes>
    <includes local="no">hpx/errors.hpp</includes>
    <includes local="no">hpx/runtime/threads/coroutines/coroutine_fwd.hpp</includes>
    <includes refid="thread__enums_8hpp" local="no">hpx/runtime/threads/thread_enums.hpp</includes>
    <includes local="no">hpx/runtime/threads/thread_id_type.hpp</includes>
    <includes local="no">hpx/util_fwd.hpp</includes>
    <includes local="no">hpx/functional/function.hpp</includes>
    <includes local="no">hpx/functional/unique_function.hpp</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">utility</includes>
    <includes local="no">memory</includes>
    <includedby refid="get__os__thread__count_8hpp" local="no">hpx/runtime/get_os_thread_count.hpp</includedby>
    <includedby refid="basic__action_8hpp" local="no">hpx/runtime/actions/basic_action.hpp</includedby>
    <includedby refid="thread__helpers_8hpp" local="no">hpx/runtime/threads/thread_helpers.hpp</includedby>
    <incdepgraph>
      <node id="1090">
        <label>hpx/functional/unique_function.hpp</label>
      </node>
      <node id="1086">
        <label>cstdint</label>
      </node>
      <node id="1080">
        <label>hpx/config.hpp</label>
      </node>
      <node id="1088">
        <label>hpx/util_fwd.hpp</label>
      </node>
      <node id="1083">
        <label>hpx/runtime/threads/thread_enums.hpp</label>
        <link refid="thread__enums_8hpp"/>
        <childnode refid="1080" relation="include">
        </childnode>
        <childnode refid="1084" relation="include">
        </childnode>
        <childnode refid="1085" relation="include">
        </childnode>
        <childnode refid="1086" relation="include">
        </childnode>
      </node>
      <node id="1089">
        <label>hpx/functional/function.hpp</label>
      </node>
      <node id="1087">
        <label>hpx/runtime/threads/thread_id_type.hpp</label>
      </node>
      <node id="1091">
        <label>utility</label>
      </node>
      <node id="1081">
        <label>hpx/errors.hpp</label>
      </node>
      <node id="1084">
        <label>hpx/runtime/threads/detail/combined_tagged_state.hpp</label>
      </node>
      <node id="1085">
        <label>cstddef</label>
      </node>
      <node id="1082">
        <label>hpx/runtime/threads/coroutines/coroutine_fwd.hpp</label>
      </node>
      <node id="1079">
        <label>hpx/runtime/threads/thread_data_fwd.hpp</label>
        <link refid="thread__data__fwd_8hpp"/>
        <childnode refid="1080" relation="include">
        </childnode>
        <childnode refid="1081" relation="include">
        </childnode>
        <childnode refid="1082" relation="include">
        </childnode>
        <childnode refid="1083" relation="include">
        </childnode>
        <childnode refid="1087" relation="include">
        </childnode>
        <childnode refid="1088" relation="include">
        </childnode>
        <childnode refid="1089" relation="include">
        </childnode>
        <childnode refid="1090" relation="include">
        </childnode>
        <childnode refid="1085" relation="include">
        </childnode>
        <childnode refid="1086" relation="include">
        </childnode>
        <childnode refid="1091" relation="include">
        </childnode>
        <childnode refid="1092" relation="include">
        </childnode>
      </node>
      <node id="1092">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1094">
        <label>hpx/runtime/get_os_thread_count.hpp</label>
        <link refid="get__os__thread__count_8hpp"/>
        <childnode refid="1095" relation="include">
        </childnode>
      </node>
      <node id="1101">
        <label>hpx/runtime/components/migrate_component.hpp</label>
        <link refid="migrate__component_8hpp"/>
      </node>
      <node id="1097">
        <label>hpx/runtime/actions/basic_action.hpp</label>
        <link refid="basic__action_8hpp"/>
        <childnode refid="1098" relation="include">
        </childnode>
        <childnode refid="1099" relation="include">
        </childnode>
      </node>
      <node id="1102">
        <label>hpx/runtime/threads/thread_helpers.hpp</label>
        <link refid="thread__helpers_8hpp_source"/>
      </node>
      <node id="1099">
        <label>hpx/runtime/actions/plain_action.hpp</label>
        <link refid="plain__action_8hpp"/>
        <childnode refid="1100" relation="include">
        </childnode>
        <childnode refid="1101" relation="include">
        </childnode>
      </node>
      <node id="1098">
        <label>hpx/runtime/actions/component_action.hpp</label>
        <link refid="component__action_8hpp"/>
      </node>
      <node id="1100">
        <label>hpx/runtime/components/copy_component.hpp</label>
        <link refid="copy__component_8hpp"/>
      </node>
      <node id="1096">
        <label>hpx/runtime/get_ptr.hpp</label>
        <link refid="get__ptr_8hpp"/>
      </node>
      <node id="1093">
        <label>hpx/runtime/threads/thread_data_fwd.hpp</label>
        <link refid="thread__data__fwd_8hpp"/>
        <childnode refid="1094" relation="include">
        </childnode>
        <childnode refid="1097" relation="include">
        </childnode>
        <childnode refid="1102" relation="include">
        </childnode>
      </node>
      <node id="1095">
        <label>hpx/runtime_fwd.hpp</label>
        <link refid="runtime__fwd_8hpp"/>
        <childnode refid="1096" relation="include">
        </childnode>
        <childnode refid="1097" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacehpx">hpx</innernamespace>
    <innernamespace refid="namespacehpx_1_1threads">hpx::threads</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2007-2015<sp/>Hartmut<sp/>Kaiser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(HPX_THREADS_THREAD_DATA_FWD_AUG_11_2015_0228PM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_THREADS_THREAD_DATA_FWD_AUG_11_2015_0228PM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/config.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/errors.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/runtime/threads/coroutines/coroutine_fwd.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="thread__enums_8hpp" kindref="compound">hpx/runtime/threads/thread_enums.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/runtime/threads/thread_id_type.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/util_fwd.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/functional/function.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/functional/unique_function.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPX_HAVE_APEX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forward<sp/>declare<sp/>the<sp/>APEX<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">apex<sp/>{<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">task_wrapper;<sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;apex::task_wrapper&gt;<sp/>apex_task_wrapper;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehpx" kindref="compound">hpx</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">HPX_EXPORT<sp/>thread;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehpx" kindref="compound">hpx</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">threads</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">HPX_EXPORT<sp/>threadmanager;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">HPX_EXPORT<sp/>topology;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">HPX_EXPORT<sp/>executor;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>coroutines::coroutine<sp/>coroutine_type;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>coroutines::detail::coroutine_self<sp/>thread_self;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>coroutines::detail::coroutine_impl<sp/>thread_self_impl_type;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::pair&lt;thread_state_enum,<sp/>thread_id_type&gt;<sp/>thread_result_type;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="thread__enums_8hpp_1aa55297caca57a2d7beaa2e818bf5f147" kindref="member">thread_state_ex_enum</ref><sp/>thread_arg_type;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>thread_result_type<sp/>thread_function_sig(thread_arg_type);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>util::unique_function_nonser&lt;thread_function_sig&gt;<sp/>thread_function_type;</highlight></codeline>
<codeline lineno="56"></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/>thread_self&amp;<sp/><ref refid="thread__data__fwd_8hpp_1a77859d42e81ecf27277b6c7bc166ae49" kindref="member">get_self</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/>thread_self*<sp/><ref refid="thread__data__fwd_8hpp_1a45510897ddaea6512f6c00bf89802a9a" kindref="member">get_self_ptr</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/>thread_self_impl_type*<sp/><ref refid="thread__data__fwd_8hpp_1a62107deb3ee8749e4cab29d7c657f47c" kindref="member">get_ctx_ptr</ref>();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/>thread_self*<sp/><ref refid="thread__data__fwd_8hpp_1a69fe8464ce5d183ccc0297b1f2345ad3" kindref="member">get_self_ptr_checked</ref>(error_code&amp;<sp/>ec<sp/>=<sp/></highlight><highlight class="keywordflow">throws</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/>thread_id_type<sp/><ref refid="thread__data__fwd_8hpp_1afafe0f900b9fac3d4ed3c747625c1cfe" kindref="member">get_self_id</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/>thread_id_type<sp/><ref refid="thread__data__fwd_8hpp_1a3be8ab17cbcf2b2d1fe0df0be9b373dd" kindref="member">get_parent_id</ref>();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/>std::size_t<sp/><ref refid="thread__data__fwd_8hpp_1a91fbafda8b0e7c377d349d8032078714" kindref="member">get_parent_phase</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/>std::size_t<sp/><ref refid="thread__data__fwd_8hpp_1a151264fbf7d066507ef1a342309bd3a9" kindref="member">get_self_stacksize</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/>std::uint32_t<sp/><ref refid="thread__data__fwd_8hpp_1a19fe383da3491eceac32720c89ae8f7d" kindref="member">get_parent_locality_id</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/>std::uint64_t<sp/><ref refid="thread__data__fwd_8hpp_1aaf3979d5ae152739784f946eaab044c3" kindref="member">get_self_component_id</ref>();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>function<sp/>get_thread_manager<sp/>returns<sp/>a<sp/>reference<sp/>to<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>current<sp/>thread<sp/>manager.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/>threadmanager&amp;<sp/>get_thread_manager();</highlight></codeline>
<codeline lineno="122"></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/>std::int64_t<sp/><ref refid="thread__data__fwd_8hpp_1ae2b675b9517381442c7201c041033680" kindref="member">get_thread_count</ref>(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_state_enum<sp/>state<sp/>=<sp/>unknown);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/>std::int64_t<sp/><ref refid="thread__data__fwd_8hpp_1ae2b675b9517381442c7201c041033680" kindref="member">get_thread_count</ref>(</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_priority<sp/>priority,<sp/>thread_state_enum<sp/>state<sp/>=<sp/>unknown);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="thread__data__fwd_8hpp_1a5dd2cea272f81a19d4f61470851a29cf" kindref="member">enumerate_threads</ref>(</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util::function_nonser&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(thread_id_type)&gt;<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>f,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread_state_enum<sp/>state<sp/>=<sp/>unknown);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPX_HAVE_APEX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/>apex_task_wrapper<sp/>get_self_apex_data(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_API_EXPORT<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_self_apex_data(apex_task_wrapper<sp/>data);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="hpx/runtime/threads/thread_data_fwd.hpp"/>
  </compounddef>
</doxygen>
