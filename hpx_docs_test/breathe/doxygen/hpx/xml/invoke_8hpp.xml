<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="invoke_8hpp" kind="file" language="C++">
    <compoundname>invoke.hpp</compoundname>
    <includes local="no">hpx/config.hpp</includes>
    <includes local="no">hpx/util/result_of.hpp</includes>
    <includes local="no">hpx/util/void_guard.hpp</includes>
    <includes local="no">boost/ref.hpp</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includedby refid="algorithms_2copy_8hpp" local="no">hpx/parallel/algorithms/copy.hpp</includedby>
    <includedby refid="exclusive__scan_8hpp" local="no">hpx/parallel/algorithms/exclusive_scan.hpp</includedby>
    <includedby refid="algorithms_2find_8hpp" local="no">hpx/parallel/algorithms/find.hpp</includedby>
    <includedby refid="algorithms_2for__each_8hpp" local="no">hpx/parallel/algorithms/for_each.hpp</includedby>
    <includedby refid="for__loop_8hpp" local="no">hpx/parallel/algorithms/for_loop.hpp</includedby>
    <includedby refid="algorithms_2is__heap_8hpp" local="no">hpx/parallel/algorithms/is_heap.hpp</includedby>
    <includedby refid="inclusive__scan_8hpp" local="no">hpx/parallel/algorithms/inclusive_scan.hpp</includedby>
    <includedby refid="is__partitioned_8hpp" local="no">hpx/parallel/algorithms/is_partitioned.hpp</includedby>
    <includedby refid="is__sorted_8hpp" local="no">hpx/parallel/algorithms/is_sorted.hpp</includedby>
    <includedby refid="lexicographical__compare_8hpp" local="no">hpx/parallel/algorithms/lexicographical_compare.hpp</includedby>
    <includedby refid="algorithms_2merge_8hpp" local="no">hpx/parallel/algorithms/merge.hpp</includedby>
    <includedby refid="algorithms_2minmax_8hpp" local="no">hpx/parallel/algorithms/minmax.hpp</includedby>
    <includedby refid="mismatch_8hpp" local="no">hpx/parallel/algorithms/mismatch.hpp</includedby>
    <includedby refid="algorithms_2partition_8hpp" local="no">hpx/parallel/algorithms/partition.hpp</includedby>
    <includedby refid="algorithms_2remove_8hpp" local="no">hpx/parallel/algorithms/remove.hpp</includedby>
    <includedby refid="algorithms_2remove__copy_8hpp" local="no">hpx/parallel/algorithms/remove_copy.hpp</includedby>
    <includedby refid="algorithms_2replace_8hpp" local="no">hpx/parallel/algorithms/replace.hpp</includedby>
    <includedby refid="algorithms_2sort_8hpp" local="no">hpx/parallel/algorithms/sort.hpp</includedby>
    <includedby refid="algorithms_2transform_8hpp" local="no">hpx/parallel/algorithms/transform.hpp</includedby>
    <includedby refid="transform__exclusive__scan_8hpp" local="no">hpx/parallel/algorithms/transform_exclusive_scan.hpp</includedby>
    <includedby refid="transform__inclusive__scan_8hpp" local="no">hpx/parallel/algorithms/transform_inclusive_scan.hpp</includedby>
    <includedby refid="transform__reduce__binary_8hpp" local="no">hpx/parallel/algorithms/transform_reduce_binary.hpp</includedby>
    <includedby refid="algorithms_2unique_8hpp" local="no">hpx/parallel/algorithms/unique.hpp</includedby>
    <includedby refid="sequenced__executor_8hpp" local="no">hpx/parallel/executors/sequenced_executor.hpp</includedby>
    <includedby refid="invoke__fused_8hpp" local="no">hpx/util/invoke_fused.hpp</includedby>
    <incdepgraph>
      <node id="10275">
        <label>hpx/util/void_guard.hpp</label>
      </node>
      <node id="10274">
        <label>hpx/util/result_of.hpp</label>
      </node>
      <node id="10273">
        <label>hpx/config.hpp</label>
      </node>
      <node id="10278">
        <label>utility</label>
      </node>
      <node id="10276">
        <label>boost/ref.hpp</label>
      </node>
      <node id="10272">
        <label>hpx/util/invoke.hpp</label>
        <link refid="invoke_8hpp"/>
        <childnode refid="10273" relation="include">
        </childnode>
        <childnode refid="10274" relation="include">
        </childnode>
        <childnode refid="10275" relation="include">
        </childnode>
        <childnode refid="10276" relation="include">
        </childnode>
        <childnode refid="10277" relation="include">
        </childnode>
        <childnode refid="10278" relation="include">
        </childnode>
      </node>
      <node id="10277">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10295">
        <label>hpx/parallel/algorithms/find.hpp</label>
        <link refid="algorithms_2find_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10296" relation="include">
        </childnode>
      </node>
      <node id="10320">
        <label>hpx/parallel/container_algorithms/minmax.hpp</label>
        <link refid="container__algorithms_2minmax_8hpp"/>
      </node>
      <node id="10317">
        <label>hpx/parallel/algorithms/merge.hpp</label>
        <link refid="algorithms_2merge_8hpp_source"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10318" relation="include">
        </childnode>
      </node>
      <node id="10344">
        <label>hpx/parallel/algorithms/equal.hpp</label>
        <link refid="equal_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
      </node>
      <node id="10354">
        <label>hpx/util/invoke_fused.hpp</label>
        <link refid="invoke__fused_8hpp_source"/>
      </node>
      <node id="10351">
        <label>hpx/parallel/algorithms/uninitialized_fill.hpp</label>
        <link refid="uninitialized__fill_8hpp"/>
      </node>
      <node id="10290">
        <label>hpx/parallel/algorithms/set_intersection.hpp</label>
        <link refid="set__intersection_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
      </node>
      <node id="10296">
        <label>hpx/parallel/container_algorithms/find.hpp</label>
        <link refid="container__algorithms_2find_8hpp"/>
      </node>
      <node id="10311">
        <label>hpx/parallel/container_algorithms/is_heap.hpp</label>
        <link refid="container__algorithms_2is__heap_8hpp"/>
      </node>
      <node id="10316">
        <label>hpx/parallel/algorithms/is_sorted.hpp</label>
        <link refid="is__sorted_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
      </node>
      <node id="10303">
        <label>hpx/parallel/algorithms/replace.hpp</label>
        <link refid="algorithms_2replace_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10304" relation="include">
        </childnode>
      </node>
      <node id="10313">
        <label>hpx/parallel/algorithms/transform_inclusive_scan.hpp</label>
        <link refid="transform__inclusive__scan_8hpp"/>
        <childnode refid="10314" relation="include">
        </childnode>
      </node>
      <node id="10298">
        <label>hpx/parallel/algorithms/fill.hpp</label>
        <link refid="algorithms_2fill_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10299" relation="include">
        </childnode>
      </node>
      <node id="10329">
        <label>hpx/parallel/algorithms/transform.hpp</label>
        <link refid="algorithms_2transform_8hpp"/>
        <childnode refid="10330" relation="include">
        </childnode>
      </node>
      <node id="10328">
        <label>hpx/parallel/container_algorithms/sort.hpp</label>
        <link refid="container__algorithms_2sort_8hpp"/>
      </node>
      <node id="10347">
        <label>hpx/parallel/algorithms/reduce.hpp</label>
        <link refid="parallel_2algorithms_2reduce_8hpp"/>
      </node>
      <node id="10305">
        <label>hpx/parallel/algorithms/search.hpp</label>
        <link refid="algorithms_2search_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10306" relation="include">
        </childnode>
      </node>
      <node id="10281">
        <label>hpx/parallel/algorithm.hpp</label>
        <link refid="algorithm_8hpp_source"/>
      </node>
      <node id="10346">
        <label>hpx/parallel/algorithms/move.hpp</label>
        <link refid="move_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
      </node>
      <node id="10340">
        <label>hpx/parallel/container_algorithms/all_any_none.hpp</label>
        <link refid="container__algorithms_2all__any__none_8hpp"/>
      </node>
      <node id="10292">
        <label>hpx/parallel/algorithms/set_union.hpp</label>
        <link refid="set__union_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
      </node>
      <node id="10352">
        <label>hpx/parallel/algorithms/uninitialized_move.hpp</label>
        <link refid="uninitialized__move_8hpp"/>
      </node>
      <node id="10318">
        <label>hpx/parallel/container_algorithms/merge.hpp</label>
        <link refid="container__algorithms_2merge_8hpp"/>
      </node>
      <node id="10326">
        <label>hpx/parallel/algorithms/sort.hpp</label>
        <link refid="algorithms_2sort_8hpp_source"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10282" relation="include">
        </childnode>
        <childnode refid="10327" relation="include">
        </childnode>
        <childnode refid="10328" relation="include">
        </childnode>
      </node>
      <node id="10332">
        <label>hpx/parallel/algorithms/unique.hpp</label>
        <link refid="algorithms_2unique_8hpp_source"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10333" relation="include">
        </childnode>
      </node>
      <node id="10321">
        <label>hpx/parallel/algorithms/mismatch.hpp</label>
        <link refid="mismatch_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10302" relation="include">
        </childnode>
      </node>
      <node id="10335">
        <label>hpx/parallel/execution_policy.hpp</label>
        <link refid="execution__policy_8hpp"/>
        <childnode refid="10336" relation="include">
        </childnode>
        <childnode refid="10337" relation="include">
        </childnode>
        <childnode refid="10338" relation="include">
        </childnode>
        <childnode refid="10339" relation="include">
        </childnode>
        <childnode refid="10280" relation="include">
        </childnode>
        <childnode refid="10341" relation="include">
        </childnode>
        <childnode refid="10343" relation="include">
        </childnode>
        <childnode refid="10344" relation="include">
        </childnode>
        <childnode refid="10294" relation="include">
        </childnode>
        <childnode refid="10298" relation="include">
        </childnode>
        <childnode refid="10295" relation="include">
        </childnode>
        <childnode refid="10297" relation="include">
        </childnode>
        <childnode refid="10309" relation="include">
        </childnode>
        <childnode refid="10300" relation="include">
        </childnode>
        <childnode refid="10310" relation="include">
        </childnode>
        <childnode refid="10345" relation="include">
        </childnode>
        <childnode refid="10312" relation="include">
        </childnode>
        <childnode refid="10315" relation="include">
        </childnode>
        <childnode refid="10316" relation="include">
        </childnode>
        <childnode refid="10302" relation="include">
        </childnode>
        <childnode refid="10317" relation="include">
        </childnode>
        <childnode refid="10319" relation="include">
        </childnode>
        <childnode refid="10321" relation="include">
        </childnode>
        <childnode refid="10346" relation="include">
        </childnode>
        <childnode refid="10322" relation="include">
        </childnode>
        <childnode refid="10347" relation="include">
        </childnode>
        <childnode refid="10324" relation="include">
        </childnode>
        <childnode refid="10283" relation="include">
        </childnode>
        <childnode refid="10303" relation="include">
        </childnode>
        <childnode refid="10285" relation="include">
        </childnode>
        <childnode refid="10286" relation="include">
        </childnode>
        <childnode refid="10305" relation="include">
        </childnode>
        <childnode refid="10289" relation="include">
        </childnode>
        <childnode refid="10290" relation="include">
        </childnode>
        <childnode refid="10291" relation="include">
        </childnode>
        <childnode refid="10292" relation="include">
        </childnode>
        <childnode refid="10326" relation="include">
        </childnode>
        <childnode refid="10307" relation="include">
        </childnode>
        <childnode refid="10329" relation="include">
        </childnode>
        <childnode refid="10314" relation="include">
        </childnode>
        <childnode refid="10313" relation="include">
        </childnode>
        <childnode refid="10348" relation="include">
        </childnode>
        <childnode refid="10331" relation="include">
        </childnode>
        <childnode refid="10349" relation="include">
        </childnode>
        <childnode refid="10350" relation="include">
        </childnode>
        <childnode refid="10351" relation="include">
        </childnode>
        <childnode refid="10352" relation="include">
        </childnode>
        <childnode refid="10353" relation="include">
        </childnode>
        <childnode refid="10332" relation="include">
        </childnode>
      </node>
      <node id="10348">
        <label>hpx/parallel/algorithms/transform_reduce.hpp</label>
        <link refid="transform__reduce_8hpp"/>
      </node>
      <node id="10285">
        <label>hpx/parallel/algorithms/reverse.hpp</label>
        <link refid="algorithms_2reverse_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10286" relation="include">
        </childnode>
        <childnode refid="10288" relation="include">
        </childnode>
      </node>
      <node id="10282">
        <label>hpx/parallel/algorithms/reduce_by_key.hpp</label>
        <link refid="reduce__by__key_8hpp"/>
      </node>
      <node id="10336">
        <label>hpx/parallel/task_block.hpp</label>
        <link refid="task__block_8hpp"/>
      </node>
      <node id="10314">
        <label>hpx/parallel/algorithms/transform_exclusive_scan.hpp</label>
        <link refid="transform__exclusive__scan_8hpp"/>
      </node>
      <node id="10334">
        <label>hpx/parallel/executors/sequenced_executor.hpp</label>
        <link refid="sequenced__executor_8hpp"/>
        <childnode refid="10335" relation="include">
        </childnode>
      </node>
      <node id="10315">
        <label>hpx/parallel/algorithms/is_partitioned.hpp</label>
        <link refid="is__partitioned_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
      </node>
      <node id="10339">
        <label>hpx/parallel/algorithms/all_any_none.hpp</label>
        <link refid="algorithms_2all__any__none_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10340" relation="include">
        </childnode>
      </node>
      <node id="10284">
        <label>hpx/parallel/container_algorithms/remove_copy.hpp</label>
        <link refid="container__algorithms_2remove__copy_8hpp"/>
      </node>
      <node id="10333">
        <label>hpx/parallel/container_algorithms/unique.hpp</label>
        <link refid="container__algorithms_2unique_8hpp"/>
      </node>
      <node id="10287">
        <label>hpx/parallel/container_algorithms/rotate.hpp</label>
        <link refid="container__algorithms_2rotate_8hpp"/>
      </node>
      <node id="10283">
        <label>hpx/parallel/algorithms/remove_copy.hpp</label>
        <link refid="algorithms_2remove__copy_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10284" relation="include">
        </childnode>
      </node>
      <node id="10345">
        <label>hpx/parallel/algorithms/includes.hpp</label>
        <link refid="includes_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
      </node>
      <node id="10288">
        <label>hpx/parallel/container_algorithms/reverse.hpp</label>
        <link refid="container__algorithms_2reverse_8hpp"/>
      </node>
      <node id="10330">
        <label>hpx/parallel/container_algorithms/transform.hpp</label>
        <link refid="container__algorithms_2transform_8hpp"/>
      </node>
      <node id="10300">
        <label>hpx/parallel/algorithms/generate.hpp</label>
        <link refid="algorithms_2generate_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10301" relation="include">
        </childnode>
      </node>
      <node id="10289">
        <label>hpx/parallel/algorithms/set_difference.hpp</label>
        <link refid="set__difference_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
      </node>
      <node id="10307">
        <label>hpx/parallel/algorithms/swap_ranges.hpp</label>
        <link refid="swap__ranges_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
      </node>
      <node id="10302">
        <label>hpx/parallel/algorithms/lexicographical_compare.hpp</label>
        <link refid="lexicographical__compare_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
      </node>
      <node id="10294">
        <label>hpx/parallel/algorithms/exclusive_scan.hpp</label>
        <link refid="exclusive__scan_8hpp"/>
      </node>
      <node id="10297">
        <label>hpx/parallel/algorithms/for_each.hpp</label>
        <link refid="algorithms_2for__each_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10298" relation="include">
        </childnode>
        <childnode refid="10300" relation="include">
        </childnode>
        <childnode refid="10302" relation="include">
        </childnode>
        <childnode refid="10282" relation="include">
        </childnode>
        <childnode refid="10303" relation="include">
        </childnode>
        <childnode refid="10285" relation="include">
        </childnode>
        <childnode refid="10305" relation="include">
        </childnode>
        <childnode refid="10307" relation="include">
        </childnode>
        <childnode refid="10308" relation="include">
        </childnode>
      </node>
      <node id="10286">
        <label>hpx/parallel/algorithms/rotate.hpp</label>
        <link refid="algorithms_2rotate_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10287" relation="include">
        </childnode>
      </node>
      <node id="10341">
        <label>hpx/parallel/algorithms/count.hpp</label>
        <link refid="algorithms_2count_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10342" relation="include">
        </childnode>
      </node>
      <node id="10325">
        <label>hpx/parallel/container_algorithms/remove.hpp</label>
        <link refid="container__algorithms_2remove_8hpp"/>
      </node>
      <node id="10327">
        <label>hpx/parallel/algorithms/sort_by_key.hpp</label>
        <link refid="sort__by__key_8hpp_source"/>
      </node>
      <node id="10319">
        <label>hpx/parallel/algorithms/minmax.hpp</label>
        <link refid="algorithms_2minmax_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10320" relation="include">
        </childnode>
      </node>
      <node id="10343">
        <label>hpx/parallel/algorithms/destroy.hpp</label>
        <link refid="destroy_8hpp"/>
      </node>
      <node id="10312">
        <label>hpx/parallel/algorithms/inclusive_scan.hpp</label>
        <link refid="inclusive__scan_8hpp"/>
        <childnode refid="10294" relation="include">
        </childnode>
        <childnode refid="10282" relation="include">
        </childnode>
        <childnode refid="10313" relation="include">
        </childnode>
      </node>
      <node id="10337">
        <label>hpx/parallel/algorithms/adjacent_difference.hpp</label>
        <link refid="adjacent__difference_8hpp"/>
      </node>
      <node id="10342">
        <label>hpx/parallel/container_algorithms/count.hpp</label>
        <link refid="container__algorithms_2count_8hpp"/>
      </node>
      <node id="10322">
        <label>hpx/parallel/algorithms/partition.hpp</label>
        <link refid="algorithms_2partition_8hpp_source"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10323" relation="include">
        </childnode>
      </node>
      <node id="10301">
        <label>hpx/parallel/container_algorithms/generate.hpp</label>
        <link refid="container__algorithms_2generate_8hpp"/>
      </node>
      <node id="10349">
        <label>hpx/parallel/algorithms/uninitialized_copy.hpp</label>
        <link refid="uninitialized__copy_8hpp"/>
      </node>
      <node id="10331">
        <label>hpx/parallel/algorithms/transform_reduce_binary.hpp</label>
        <link refid="transform__reduce__binary_8hpp"/>
      </node>
      <node id="10350">
        <label>hpx/parallel/algorithms/uninitialized_default_construct.hpp</label>
        <link refid="uninitialized__default__construct_8hpp"/>
      </node>
      <node id="10323">
        <label>hpx/parallel/container_algorithms/partition.hpp</label>
        <link refid="container__algorithms_2partition_8hpp"/>
      </node>
      <node id="10293">
        <label>hpx/parallel/container_algorithms/copy.hpp</label>
        <link refid="container__algorithms_2copy_8hpp"/>
      </node>
      <node id="10309">
        <label>hpx/parallel/algorithms/for_loop.hpp</label>
        <link refid="for__loop_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
      </node>
      <node id="10279">
        <label>hpx/util/invoke.hpp</label>
        <link refid="invoke_8hpp"/>
        <childnode refid="10280" relation="include">
        </childnode>
        <childnode refid="10294" relation="include">
        </childnode>
        <childnode refid="10295" relation="include">
        </childnode>
        <childnode refid="10297" relation="include">
        </childnode>
        <childnode refid="10309" relation="include">
        </childnode>
        <childnode refid="10310" relation="include">
        </childnode>
        <childnode refid="10312" relation="include">
        </childnode>
        <childnode refid="10315" relation="include">
        </childnode>
        <childnode refid="10316" relation="include">
        </childnode>
        <childnode refid="10302" relation="include">
        </childnode>
        <childnode refid="10317" relation="include">
        </childnode>
        <childnode refid="10319" relation="include">
        </childnode>
        <childnode refid="10321" relation="include">
        </childnode>
        <childnode refid="10322" relation="include">
        </childnode>
        <childnode refid="10324" relation="include">
        </childnode>
        <childnode refid="10283" relation="include">
        </childnode>
        <childnode refid="10303" relation="include">
        </childnode>
        <childnode refid="10326" relation="include">
        </childnode>
        <childnode refid="10329" relation="include">
        </childnode>
        <childnode refid="10314" relation="include">
        </childnode>
        <childnode refid="10313" relation="include">
        </childnode>
        <childnode refid="10331" relation="include">
        </childnode>
        <childnode refid="10332" relation="include">
        </childnode>
        <childnode refid="10334" relation="include">
        </childnode>
        <childnode refid="10354" relation="include">
        </childnode>
      </node>
      <node id="10306">
        <label>hpx/parallel/container_algorithms/search.hpp</label>
        <link refid="container__algorithms_2search_8hpp"/>
      </node>
      <node id="10299">
        <label>hpx/parallel/container_algorithms/fill.hpp</label>
        <link refid="container__algorithms_2fill_8hpp"/>
      </node>
      <node id="10324">
        <label>hpx/parallel/algorithms/remove.hpp</label>
        <link refid="algorithms_2remove_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10325" relation="include">
        </childnode>
      </node>
      <node id="10291">
        <label>hpx/parallel/algorithms/set_symmetric_difference.hpp</label>
        <link refid="set__symmetric__difference_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
      </node>
      <node id="10338">
        <label>hpx/parallel/algorithms/adjacent_find.hpp</label>
        <link refid="adjacent__find_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
      </node>
      <node id="10308">
        <label>hpx/parallel/container_algorithms/for_each.hpp</label>
        <link refid="container__algorithms_2for__each_8hpp"/>
      </node>
      <node id="10304">
        <label>hpx/parallel/container_algorithms/replace.hpp</label>
        <link refid="container__algorithms_2replace_8hpp"/>
      </node>
      <node id="10353">
        <label>hpx/parallel/algorithms/uninitialized_value_construct.hpp</label>
        <link refid="uninitialized__value__construct_8hpp"/>
      </node>
      <node id="10310">
        <label>hpx/parallel/algorithms/is_heap.hpp</label>
        <link refid="algorithms_2is__heap_8hpp_source"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10311" relation="include">
        </childnode>
      </node>
      <node id="10280">
        <label>hpx/parallel/algorithms/copy.hpp</label>
        <link refid="algorithms_2copy_8hpp"/>
        <childnode refid="10281" relation="include">
        </childnode>
        <childnode refid="10282" relation="include">
        </childnode>
        <childnode refid="10283" relation="include">
        </childnode>
        <childnode refid="10285" relation="include">
        </childnode>
        <childnode refid="10286" relation="include">
        </childnode>
        <childnode refid="10289" relation="include">
        </childnode>
        <childnode refid="10290" relation="include">
        </childnode>
        <childnode refid="10291" relation="include">
        </childnode>
        <childnode refid="10292" relation="include">
        </childnode>
        <childnode refid="10293" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacehpx">hpx</innernamespace>
    <innernamespace refid="namespacehpx_1_1util">hpx::util</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2013-2015<sp/>Agustin<sp/>Berge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2016<sp/>Antoine<sp/>Tran<sp/>Tan</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>hpxinspect:nodeprecatedinclude:boost/ref.hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>hpxinspect:nodeprecatedname:boost::reference_wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HPX_UTIL_INVOKE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_UTIL_INVOKE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/config.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/util/result_of.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/util/void_guard.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/ref.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehpx" kindref="compound">hpx</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util</highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FD&gt;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">invoke_impl</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>f(t0,<sp/>t1,<sp/>...,<sp/>tN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Ts&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HPX_CONSTEXPR<sp/>HPX_HOST_DEVICE</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>operator()(F&amp;&amp;<sp/>f,<sp/>Ts&amp;&amp;...<sp/>vs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="34"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::util::void_guard&lt;R&gt;(),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;F&gt;(f)(std::forward&lt;Ts&gt;(vs)...);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">invoke_impl&lt;R,<sp/>M<sp/>C::*&gt;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>t0.*f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0&gt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HPX_CONSTEXPR<sp/>HPX_HOST_DEVICE</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_base_of&lt;C,<sp/>typename<sp/>std::decay&lt;T0&gt;::type&gt;::value,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator()(F<sp/>f,<sp/>T0&amp;<sp/>v0)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="52"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::util::void_guard&lt;R&gt;(),<sp/>(v0.*f);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HPX_CONSTEXPR<sp/>HPX_HOST_DEVICE</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_base_of&lt;C,<sp/>typename<sp/>std::decay&lt;T0&gt;::type&gt;::value</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!std::is_lvalue_reference&lt;T0&gt;::value,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator()(F<sp/>f,<sp/>T0&amp;&amp;<sp/>v0)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="64"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::util::void_guard&lt;R&gt;(),<sp/>std::move(v0.*f);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(*t0).*f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HPX_CONSTEXPR<sp/>HPX_HOST_DEVICE</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_base_of&lt;C,<sp/>typename<sp/>std::decay&lt;T0&gt;::type&gt;::value,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator()(F<sp/>f,<sp/>T0&amp;&amp;<sp/>v0)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="76"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::util::void_guard&lt;R&gt;(),<sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)(f,<sp/>*std::forward&lt;T0&gt;(v0));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RR,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Ps&gt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">invoke_impl&lt;R,<sp/>RR<sp/>(C::*)(Ps...)&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(t0.*f)(t1,<sp/>...,<sp/>tN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Ts&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HPX_CONSTEXPR<sp/>HPX_HOST_DEVICE</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_base_of&lt;C,<sp/>typename<sp/>std::decay&lt;T0&gt;::type&gt;::value,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator()(F<sp/>f,<sp/>T0&amp;&amp;<sp/>v0,<sp/>Ts&amp;&amp;...<sp/>vs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="92"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::util::void_guard&lt;R&gt;(),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::forward&lt;T0&gt;(v0).*f)(std::forward&lt;Ts&gt;(vs)...);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>((*t0).*f)(t1,<sp/>...,<sp/>tN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Ts&gt;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HPX_CONSTEXPR<sp/>HPX_HOST_DEVICE</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!std::is_base_of&lt;C,<sp/>typename<sp/>std::decay&lt;T0&gt;::type&gt;::value,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator()(F<sp/>f,<sp/>T0&amp;&amp;<sp/>v0,<sp/>Ts&amp;&amp;...<sp/>vs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="105"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::util::void_guard&lt;R&gt;(),</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)(f,<sp/>*std::forward&lt;T0&gt;(v0),<sp/>std::forward&lt;Ts&gt;(vs)...);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>RR,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>C,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Ps&gt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">invoke_impl&lt;R,<sp/>RR<sp/>(C::*)(Ps...)<sp/>const&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>invoke_impl&lt;R,<sp/>RR<sp/>(C::*)(Ps...)&gt;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>X&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">invoke_impl&lt;R,::boost::reference_wrapper&lt;X&gt;&gt;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>invoke_impl&lt;R,X&amp;&gt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>support<sp/>boost::[c]ref,<sp/>which<sp/>is<sp/>not<sp/>callable<sp/>as<sp/>std::[c]ref</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Ts&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HPX_CONSTEXPR<sp/>HPX_HOST_DEVICE</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>operator()(F<sp/>f,<sp/>Ts&amp;&amp;...<sp/>vs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="124"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::util::void_guard&lt;R&gt;(),<sp/>f.get()(std::forward&lt;Ts&gt;(vs)...);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Ts&gt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_CONSTEXPR<sp/>HPX_HOST_DEVICE</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>util::invoke_result&lt;F,<sp/>Ts...&gt;::type</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>invoke(F&amp;&amp;<sp/>f,<sp/>Ts&amp;&amp;...<sp/>vs)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>util::invoke_result&lt;F,<sp/>Ts...&gt;::type<sp/>R;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::invoke_impl&lt;R,typename<sp/>std::decay&lt;F&gt;::type&gt;()(</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;F&gt;(f),<sp/>std::forward&lt;Ts&gt;(vs)...);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...Ts&gt;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_CONSTEXPR<sp/>HPX_HOST_DEVICE</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>R<sp/>invoke_r(F&amp;&amp;<sp/>f,<sp/>Ts&amp;&amp;...<sp/>vs)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::invoke_impl&lt;R,typename<sp/>std::decay&lt;F&gt;::type&gt;()(</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;F&gt;(f),<sp/>std::forward&lt;Ts&gt;(vs)...);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">functional</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">invoke</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HPX_CONSTEXPR<sp/>HPX_HOST_DEVICE</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>util::invoke_result&lt;F,<sp/>Ts...&gt;::type</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operator()(F<sp/>&amp;&amp;<sp/>f,<sp/>Ts<sp/>&amp;&amp;...<sp/>vs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="179"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>util::invoke_result&lt;F,<sp/>Ts...&gt;::type<sp/>R;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::util::void_guard&lt;R&gt;(),<sp/>util::invoke(std::forward&lt;F&gt;(f),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;Ts&gt;(vs)...);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">invoke_r</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HPX_CONSTEXPR<sp/>HPX_HOST_DEVICE</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>operator()(F<sp/>&amp;&amp;<sp/>f,<sp/>Ts<sp/>&amp;&amp;...<sp/>vs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="193"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::util::void_guard&lt;R&gt;(),<sp/>util::invoke_r&lt;R&gt;(std::forward&lt;F&gt;(f),</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;Ts&gt;(vs)...);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="hpx/util/invoke.hpp"/>
  </compounddef>
</doxygen>
