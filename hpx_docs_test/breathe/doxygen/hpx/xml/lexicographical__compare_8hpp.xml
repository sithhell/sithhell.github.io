<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lexicographical__compare_8hpp" kind="file" language="C++">
    <compoundname>lexicographical_compare.hpp</compoundname>
    <includes local="no">hpx/config.hpp</includes>
    <includes local="no">hpx/traits/is_iterator.hpp</includes>
    <includes refid="invoke_8hpp" local="no">hpx/util/invoke.hpp</includes>
    <includes local="no">hpx/parallel/algorithms/detail/dispatch.hpp</includes>
    <includes local="no">hpx/parallel/algorithms/detail/predicates.hpp</includes>
    <includes refid="algorithms_2for__each_8hpp" local="no">hpx/parallel/algorithms/for_each.hpp</includes>
    <includes refid="mismatch_8hpp" local="no">hpx/parallel/algorithms/mismatch.hpp</includes>
    <includes refid="execution__policy_8hpp" local="no">hpx/parallel/execution_policy.hpp</includes>
    <includes local="no">hpx/parallel/util/detail/algorithm_result.hpp</includes>
    <includes local="no">hpx/parallel/util/loop.hpp</includes>
    <includes local="no">hpx/parallel/util/partitioner.hpp</includes>
    <includes local="no">hpx/parallel/util/zip_iterator.hpp</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">iterator</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includedby refid="algorithm_8hpp" local="no">hpx/parallel/algorithm.hpp</includedby>
    <incdepgraph>
      <node id="3329">
        <label>hpx/traits/is_execution_policy.hpp</label>
        <link refid="is__execution__policy_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3330" relation="include">
        </childnode>
        <childnode refid="3248" relation="include">
        </childnode>
      </node>
      <node id="3310">
        <label>atomic</label>
      </node>
      <node id="3318">
        <label>functional</label>
      </node>
      <node id="3258">
        <label>hpx/util/identity.hpp</label>
      </node>
      <node id="3307">
        <label>hpx/util/register_locks.hpp</label>
      </node>
      <node id="3269">
        <label>hpx/parallel/executors/post_policy_dispatch.hpp</label>
      </node>
      <node id="3308">
        <label>hpx/util/steady_clock.hpp</label>
      </node>
      <node id="3327">
        <label>iterator</label>
      </node>
      <node id="3257">
        <label>hpx/util/annotated_function.hpp</label>
      </node>
      <node id="3255">
        <label>hpx/traits/is_value_proxy.hpp</label>
      </node>
      <node id="3293">
        <label>cstdint</label>
      </node>
      <node id="3281">
        <label>hpx/throw_exception.hpp</label>
        <link refid="throw__exception_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3277" relation="include">
        </childnode>
        <childnode refid="3280" relation="include">
        </childnode>
        <childnode refid="3282" relation="include">
        </childnode>
        <childnode refid="3283" relation="include">
        </childnode>
        <childnode refid="3284" relation="include">
        </childnode>
        <childnode refid="3285" relation="include">
        </childnode>
        <childnode refid="3278" relation="include">
        </childnode>
        <childnode refid="3286" relation="include">
        </childnode>
        <childnode refid="3279" relation="include">
        </childnode>
        <childnode refid="3287" relation="include">
        </childnode>
        <childnode refid="3288" relation="include">
        </childnode>
      </node>
      <node id="3299">
        <label>hpx/runtime/threads/policies/scheduler_mode.hpp</label>
        <link refid="scheduler__mode_8hpp_source"/>
      </node>
      <node id="3304">
        <label>hpx/util/function.hpp</label>
      </node>
      <node id="3280">
        <label>hpx/exception_fwd.hpp</label>
        <link refid="exception__fwd_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3277" relation="include">
        </childnode>
        <childnode refid="3281" relation="include">
        </childnode>
      </node>
      <node id="3256">
        <label>hpx/traits/segmented_iterator_traits.hpp</label>
      </node>
      <node id="3332">
        <label>hpx/parallel/traits/projected.hpp</label>
      </node>
      <node id="3246">
        <label>hpx/util/void_guard.hpp</label>
      </node>
      <node id="3245">
        <label>hpx/util/result_of.hpp</label>
      </node>
      <node id="3289">
        <label>stdexcept</label>
      </node>
      <node id="3290">
        <label>hpx/runtime/launch_policy.hpp</label>
        <link refid="launch__policy_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3291" relation="include">
        </childnode>
        <childnode refid="3294" relation="include">
        </childnode>
        <childnode refid="3248" relation="include">
        </childnode>
        <childnode refid="3249" relation="include">
        </childnode>
      </node>
      <node id="3279">
        <label>string</label>
      </node>
      <node id="3284">
        <label>hpx/util/detail/pp/nargs.hpp</label>
      </node>
      <node id="3331">
        <label>hpx/traits/is_launch_policy.hpp</label>
      </node>
      <node id="3295">
        <label>hpx/runtime/threads/thread_helpers.hpp</label>
        <link refid="thread__helpers_8hpp_source"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3280" relation="include">
        </childnode>
        <childnode refid="3296" relation="include">
        </childnode>
        <childnode refid="3297" relation="include">
        </childnode>
        <childnode refid="3298" relation="include">
        </childnode>
        <childnode refid="3299" relation="include">
        </childnode>
        <childnode refid="3300" relation="include">
        </childnode>
        <childnode refid="3291" relation="include">
        </childnode>
        <childnode refid="3303" relation="include">
        </childnode>
        <childnode refid="3305" relation="include">
        </childnode>
        <childnode refid="3307" relation="include">
        </childnode>
        <childnode refid="3308" relation="include">
        </childnode>
        <childnode refid="3309" relation="include">
        </childnode>
        <childnode refid="3310" relation="include">
        </childnode>
        <childnode refid="3311" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
        <childnode refid="3293" relation="include">
        </childnode>
        <childnode refid="3248" relation="include">
        </childnode>
        <childnode refid="3249" relation="include">
        </childnode>
      </node>
      <node id="3277">
        <label>hpx/error.hpp</label>
        <link refid="error_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3278" relation="include">
        </childnode>
        <childnode refid="3279" relation="include">
        </childnode>
      </node>
      <node id="3287">
        <label>hpx/config/warnings_prefix.hpp</label>
      </node>
      <node id="3242">
        <label>hpx/config.hpp</label>
      </node>
      <node id="3337">
        <label>hpx/parallel/algorithms/mismatch.hpp</label>
        <link refid="mismatch_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3243" relation="include">
        </childnode>
        <childnode refid="3244" relation="include">
        </childnode>
        <childnode refid="3250" relation="include">
        </childnode>
        <childnode refid="3251" relation="include">
        </childnode>
        <childnode refid="3260" relation="include">
        </childnode>
        <childnode refid="3333" relation="include">
        </childnode>
        <childnode refid="3335" relation="include">
        </childnode>
        <childnode refid="3338" relation="include">
        </childnode>
        <childnode refid="3339" relation="include">
        </childnode>
        <childnode refid="3317" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
        <childnode refid="3327" relation="include">
        </childnode>
        <childnode refid="3248" relation="include">
        </childnode>
        <childnode refid="3249" relation="include">
        </childnode>
        <childnode refid="3319" relation="include">
        </childnode>
      </node>
      <node id="3260">
        <label>hpx/parallel/execution_policy.hpp</label>
        <link refid="execution__policy_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3261" relation="include">
        </childnode>
        <childnode refid="3262" relation="include">
        </childnode>
        <childnode refid="3263" relation="include">
        </childnode>
        <childnode refid="3264" relation="include">
        </childnode>
        <childnode refid="3265" relation="include">
        </childnode>
        <childnode refid="3320" relation="include">
        </childnode>
        <childnode refid="3321" relation="include">
        </childnode>
        <childnode refid="3271" relation="include">
        </childnode>
        <childnode refid="3328" relation="include">
        </childnode>
        <childnode refid="3329" relation="include">
        </childnode>
        <childnode refid="3313" relation="include">
        </childnode>
        <childnode refid="3272" relation="include">
        </childnode>
        <childnode refid="3331" relation="include">
        </childnode>
        <childnode refid="3330" relation="include">
        </childnode>
        <childnode refid="3306" relation="include">
        </childnode>
        <childnode refid="3248" relation="include">
        </childnode>
        <childnode refid="3249" relation="include">
        </childnode>
      </node>
      <node id="3286">
        <label>exception</label>
      </node>
      <node id="3265">
        <label>hpx/parallel/executors/parallel_executor.hpp</label>
        <link refid="parallel__executor_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3266" relation="include">
        </childnode>
        <childnode refid="3267" relation="include">
        </childnode>
        <childnode refid="3268" relation="include">
        </childnode>
        <childnode refid="3251" relation="include">
        </childnode>
        <childnode refid="3269" relation="include">
        </childnode>
        <childnode refid="3270" relation="include">
        </childnode>
        <childnode refid="3275" relation="include">
        </childnode>
        <childnode refid="3290" relation="include">
        </childnode>
        <childnode refid="3271" relation="include">
        </childnode>
        <childnode refid="3295" relation="include">
        </childnode>
        <childnode refid="3312" relation="include">
        </childnode>
        <childnode refid="3313" relation="include">
        </childnode>
        <childnode refid="3314" relation="include">
        </childnode>
        <childnode refid="3315" relation="include">
        </childnode>
        <childnode refid="3316" relation="include">
        </childnode>
        <childnode refid="3317" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
        <childnode refid="3318" relation="include">
        </childnode>
        <childnode refid="3248" relation="include">
        </childnode>
        <childnode refid="3249" relation="include">
        </childnode>
        <childnode refid="3319" relation="include">
        </childnode>
      </node>
      <node id="3243">
        <label>hpx/traits/is_iterator.hpp</label>
      </node>
      <node id="3303">
        <label>hpx/util_fwd.hpp</label>
      </node>
      <node id="3334">
        <label>hpx/parallel/util/foreach_partitioner.hpp</label>
      </node>
      <node id="3305">
        <label>hpx/util/unique_function.hpp</label>
      </node>
      <node id="3321">
        <label>hpx/parallel/executors/sequenced_executor.hpp</label>
        <link refid="sequenced__executor_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3266" relation="include">
        </childnode>
        <childnode refid="3267" relation="include">
        </childnode>
        <childnode refid="3322" relation="include">
        </childnode>
        <childnode refid="3313" relation="include">
        </childnode>
        <childnode refid="3323" relation="include">
        </childnode>
        <childnode refid="3244" relation="include">
        </childnode>
        <childnode refid="3324" relation="include">
        </childnode>
        <childnode refid="3326" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
        <childnode refid="3327" relation="include">
        </childnode>
        <childnode refid="3248" relation="include">
        </childnode>
        <childnode refid="3249" relation="include">
        </childnode>
        <childnode refid="3319" relation="include">
        </childnode>
      </node>
      <node id="3285">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="3312">
        <label>hpx/traits/future_traits.hpp</label>
      </node>
      <node id="3323">
        <label>hpx/util/deferred_call.hpp</label>
      </node>
      <node id="3291">
        <label>hpx/runtime/threads/thread_enums.hpp</label>
        <link refid="thread__enums_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3292" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
        <childnode refid="3293" relation="include">
        </childnode>
      </node>
      <node id="3270">
        <label>hpx/parallel/executors/static_chunk_size.hpp</label>
        <link refid="static__chunk__size_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3271" relation="include">
        </childnode>
        <childnode refid="3272" relation="include">
        </childnode>
        <childnode refid="3273" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
        <childnode refid="3248" relation="include">
        </childnode>
      </node>
      <node id="3325">
        <label>hpx/util/detail/unwrap_impl.hpp</label>
      </node>
      <node id="3253">
        <label>hpx/traits/concepts.hpp</label>
      </node>
      <node id="3326">
        <label>hpx/parallel/exception_list.hpp</label>
      </node>
      <node id="3259">
        <label>hpx/parallel/algorithms/detail/is_negative.hpp</label>
      </node>
      <node id="3262">
        <label>hpx/parallel/execution_policy_fwd.hpp</label>
      </node>
      <node id="3322">
        <label>hpx/runtime/threads/thread_executor.hpp</label>
      </node>
      <node id="3313">
        <label>hpx/traits/is_executor.hpp</label>
      </node>
      <node id="3335">
        <label>hpx/parallel/util/loop.hpp</label>
      </node>
      <node id="3251">
        <label>hpx/parallel/algorithms/detail/predicates.hpp</label>
      </node>
      <node id="3263">
        <label>hpx/parallel/executors/execution.hpp</label>
      </node>
      <node id="3278">
        <label>boost/system/error_code.hpp</label>
      </node>
      <node id="3319">
        <label>vector</label>
      </node>
      <node id="3250">
        <label>hpx/parallel/algorithms/detail/dispatch.hpp</label>
      </node>
      <node id="3338">
        <label>hpx/parallel/util/partitioner.hpp</label>
      </node>
      <node id="3241">
        <label>hpx/parallel/algorithms/lexicographical_compare.hpp</label>
        <link refid="lexicographical__compare_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3243" relation="include">
        </childnode>
        <childnode refid="3244" relation="include">
        </childnode>
        <childnode refid="3250" relation="include">
        </childnode>
        <childnode refid="3251" relation="include">
        </childnode>
        <childnode refid="3252" relation="include">
        </childnode>
        <childnode refid="3337" relation="include">
        </childnode>
        <childnode refid="3260" relation="include">
        </childnode>
        <childnode refid="3333" relation="include">
        </childnode>
        <childnode refid="3335" relation="include">
        </childnode>
        <childnode refid="3338" relation="include">
        </childnode>
        <childnode refid="3339" relation="include">
        </childnode>
        <childnode refid="3317" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
        <childnode refid="3327" relation="include">
        </childnode>
        <childnode refid="3248" relation="include">
        </childnode>
        <childnode refid="3249" relation="include">
        </childnode>
        <childnode refid="3319" relation="include">
        </childnode>
      </node>
      <node id="3302">
        <label>hpx/runtime/threads/thread_id_type.hpp</label>
      </node>
      <node id="3252">
        <label>hpx/parallel/algorithms/for_each.hpp</label>
        <link refid="algorithms_2for__each_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3253" relation="include">
        </childnode>
        <childnode refid="3254" relation="include">
        </childnode>
        <childnode refid="3243" relation="include">
        </childnode>
        <childnode refid="3255" relation="include">
        </childnode>
        <childnode refid="3256" relation="include">
        </childnode>
        <childnode refid="3257" relation="include">
        </childnode>
        <childnode refid="3258" relation="include">
        </childnode>
        <childnode refid="3244" relation="include">
        </childnode>
        <childnode refid="3250" relation="include">
        </childnode>
        <childnode refid="3259" relation="include">
        </childnode>
        <childnode refid="3260" relation="include">
        </childnode>
        <childnode refid="3332" relation="include">
        </childnode>
        <childnode refid="3333" relation="include">
        </childnode>
        <childnode refid="3334" relation="include">
        </childnode>
        <childnode refid="3335" relation="include">
        </childnode>
        <childnode refid="3336" relation="include">
        </childnode>
        <childnode refid="3317" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
        <childnode refid="3293" relation="include">
        </childnode>
        <childnode refid="3327" relation="include">
        </childnode>
        <childnode refid="3248" relation="include">
        </childnode>
        <childnode refid="3249" relation="include">
        </childnode>
      </node>
      <node id="3249">
        <label>utility</label>
      </node>
      <node id="3261">
        <label>hpx/parallel/datapar/execution_policy.hpp</label>
      </node>
      <node id="3324">
        <label>hpx/util/unwrap.hpp</label>
        <link refid="unwrap_8hpp_source"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3325" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
        <childnode refid="3249" relation="include">
        </childnode>
      </node>
      <node id="3288">
        <label>hpx/config/warnings_suffix.hpp</label>
      </node>
      <node id="3247">
        <label>boost/ref.hpp</label>
      </node>
      <node id="3292">
        <label>hpx/runtime/threads/detail/combined_tagged_state.hpp</label>
      </node>
      <node id="3316">
        <label>hpx/util/range.hpp</label>
      </node>
      <node id="3273">
        <label>hpx/parallel/executors/execution_parameters_fwd.hpp</label>
      </node>
      <node id="3268">
        <label>hpx/lcos/when_all_fwd.hpp</label>
      </node>
      <node id="3283">
        <label>hpx/util/detail/pp/expand.hpp</label>
      </node>
      <node id="3264">
        <label>hpx/parallel/executors/execution_parameters.hpp</label>
      </node>
      <node id="3274">
        <label>cstddef</label>
      </node>
      <node id="3339">
        <label>hpx/parallel/util/zip_iterator.hpp</label>
      </node>
      <node id="3296">
        <label>hpx/runtime/naming_fwd.hpp</label>
      </node>
      <node id="3311">
        <label>chrono</label>
      </node>
      <node id="3320">
        <label>hpx/parallel/executors/rebind_executor.hpp</label>
      </node>
      <node id="3276">
        <label>hpx/error_code.hpp</label>
        <link refid="error__code_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3277" relation="include">
        </childnode>
        <childnode refid="3280" relation="include">
        </childnode>
        <childnode refid="3278" relation="include">
        </childnode>
        <childnode refid="3286" relation="include">
        </childnode>
        <childnode refid="3289" relation="include">
        </childnode>
        <childnode refid="3279" relation="include">
        </childnode>
        <childnode refid="3281" relation="include">
        </childnode>
      </node>
      <node id="3266">
        <label>hpx/async_launch_policy_dispatch.hpp</label>
      </node>
      <node id="3244">
        <label>hpx/util/invoke.hpp</label>
        <link refid="invoke_8hpp_source"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3245" relation="include">
        </childnode>
        <childnode refid="3246" relation="include">
        </childnode>
        <childnode refid="3247" relation="include">
        </childnode>
        <childnode refid="3248" relation="include">
        </childnode>
        <childnode refid="3249" relation="include">
        </childnode>
      </node>
      <node id="3297">
        <label>hpx/runtime/threads_fwd.hpp</label>
      </node>
      <node id="3294">
        <label>hpx/runtime/serialization/serialization_fwd.hpp</label>
      </node>
      <node id="3330">
        <label>hpx/util/decay.hpp</label>
      </node>
      <node id="3301">
        <label>hpx/runtime/threads/coroutines/coroutine_fwd.hpp</label>
      </node>
      <node id="3300">
        <label>hpx/runtime/threads/thread_data_fwd.hpp</label>
        <link refid="thread__data__fwd_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3280" relation="include">
        </childnode>
        <childnode refid="3301" relation="include">
        </childnode>
        <childnode refid="3291" relation="include">
        </childnode>
        <childnode refid="3302" relation="include">
        </childnode>
        <childnode refid="3303" relation="include">
        </childnode>
        <childnode refid="3304" relation="include">
        </childnode>
        <childnode refid="3305" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
        <childnode refid="3293" relation="include">
        </childnode>
        <childnode refid="3249" relation="include">
        </childnode>
        <childnode refid="3306" relation="include">
        </childnode>
      </node>
      <node id="3267">
        <label>hpx/lcos/future.hpp</label>
      </node>
      <node id="3248">
        <label>type_traits</label>
      </node>
      <node id="3328">
        <label>hpx/traits/executor_traits.hpp</label>
      </node>
      <node id="3254">
        <label>hpx/traits/is_callable.hpp</label>
      </node>
      <node id="3272">
        <label>hpx/traits/is_executor_parameters.hpp</label>
      </node>
      <node id="3317">
        <label>algorithm</label>
      </node>
      <node id="3271">
        <label>hpx/runtime/serialization/serialize.hpp</label>
      </node>
      <node id="3333">
        <label>hpx/parallel/util/detail/algorithm_result.hpp</label>
      </node>
      <node id="3315">
        <label>hpx/util/bind.hpp</label>
      </node>
      <node id="3314">
        <label>hpx/util/assert.hpp</label>
      </node>
      <node id="3336">
        <label>hpx/parallel/util/projection_identity.hpp</label>
      </node>
      <node id="3275">
        <label>hpx/runtime/get_worker_thread_num.hpp</label>
        <link refid="get__worker__thread__num_8hpp"/>
        <childnode refid="3242" relation="include">
        </childnode>
        <childnode refid="3276" relation="include">
        </childnode>
        <childnode refid="3274" relation="include">
        </childnode>
      </node>
      <node id="3306">
        <label>memory</label>
      </node>
      <node id="3298">
        <label>hpx/runtime/thread_pool_helpers.hpp</label>
      </node>
      <node id="3282">
        <label>hpx/util/detail/pp/cat.hpp</label>
      </node>
      <node id="3309">
        <label>hpx/util/thread_description.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3341">
        <label>hpx/parallel/algorithm.hpp</label>
        <link refid="algorithm_8hpp_source"/>
      </node>
      <node id="3340">
        <label>hpx/parallel/algorithms/lexicographical_compare.hpp</label>
        <link refid="lexicographical__compare_8hpp"/>
        <childnode refid="3341" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacehpx">hpx</innernamespace>
    <innernamespace refid="namespacehpx_1_1parallel">hpx::parallel</innernamespace>
    <innernamespace refid="namespacehpx_1_1parallel_1_1v1">hpx::parallel::v1</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2014<sp/>Grant<sp/>Mercer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2017<sp/>Hartmut<sp/>Kaiser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(HPX_PARALLEL_DETAIL_LEXI_COMPARE_DEC_30_2014_0312PM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_PARALLEL_DETAIL_LEXI_COMPARE_DEC_30_2014_0312PM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/config.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/traits/is_iterator.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/util/invoke.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/parallel/algorithms/detail/dispatch.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/parallel/algorithms/detail/predicates.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="algorithms_2for__each_8hpp" kindref="compound">hpx/parallel/algorithms/for_each.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="mismatch_8hpp" kindref="compound">hpx/parallel/algorithms/mismatch.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="execution__policy_8hpp" kindref="compound">hpx/parallel/execution_policy.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/parallel/util/detail/algorithm_result.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/parallel/util/loop.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/parallel/util/partitioner.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/parallel/util/zip_iterator.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehpx" kindref="compound">hpx</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">parallel<sp/>{<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v1</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lexicographical_compare</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="lexicographical__compare_8hpp_1a6a8e24d8e68f80b9692b010b7d0199a4" kindref="member">lexicographical_compare</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>detail::algorithm&lt;lexicographical_compare,<sp/>bool&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lexicographical__compare_8hpp_1a6a8e24d8e68f80b9692b010b7d0199a4" kindref="member">lexicographical_compare</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="lexicographical__compare_8hpp_1a6a8e24d8e68f80b9692b010b7d0199a4" kindref="member">lexicographical_compare</ref>::algorithm(</highlight><highlight class="stringliteral">&quot;lexicographical_compare&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExPolicy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InIter1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InIter2,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sequential(ExPolicy,<sp/>InIter1<sp/>first1,<sp/>InIter1<sp/>last1,<sp/>InIter2<sp/>first2,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>InIter2<sp/>last2,<sp/>Pred<sp/>&amp;&amp;<sp/>pred)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::lexicographical_compare(first1,<sp/>last1,<sp/>first2,<sp/>last2,<sp/>pred);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExPolicy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FwdIter1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FwdIter2,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred&gt;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>util::detail::algorithm_result&lt;ExPolicy,<sp/>bool&gt;::type</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallel(ExPolicy<sp/>&amp;&amp;<sp/>policy,<sp/>FwdIter1<sp/>first1,<sp/>FwdIter1<sp/>last1,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FwdIter2<sp/>first2,<sp/>FwdIter2<sp/>last2,<sp/>Pred<sp/>&amp;&amp;<sp/>pred)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>hpx::util::zip_iterator&lt;FwdIter1,<sp/>FwdIter2&gt;<sp/>zip_iterator;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>zip_iterator::reference<sp/>reference;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>count1<sp/>=<sp/>std::distance(first1,<sp/>last1);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>count2<sp/>=<sp/>std::distance(first2,<sp/>last2);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>empty<sp/>range<sp/>is<sp/>lexicographically<sp/>less<sp/>than<sp/>any<sp/>non-empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count1<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>count2<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>util::detail::algorithm_result&lt;ExPolicy,<sp/>bool&gt;::get(</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count2<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>count1<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>util::detail::algorithm_result&lt;ExPolicy,<sp/>bool&gt;::get(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/><ref refid="algorithms_2count_8hpp_1ae258fb726908a80a6bd50479416d9605" kindref="member">count</ref><sp/>=<sp/>(std::min)(count1,<sp/>count2);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util::cancellation_token&lt;std::size_t&gt;<sp/>tok(count);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>hpx::util::make_zip_iterator;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>util::partitioner&lt;ExPolicy,<sp/>bool,<sp/>void&gt;::</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call_with_index(</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;ExPolicy&gt;(policy),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_zip_iterator(first1,<sp/>first2),<sp/>count,<sp/>1,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[tok,<sp/>pred](</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zip_iterator<sp/>it,<sp/>std::size_t<sp/>part_count,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>base_idx</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>-&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>util::loop_idx_n(</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_idx,<sp/>it,<sp/>part_count,<sp/>tok,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;pred,<sp/>&amp;tok](reference<sp/>t,<sp/>std::size_t<sp/>i)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>hpx::util::get;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>hpx::util::invoke;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(invoke(pred,<sp/>get&lt;0&gt;(t),<sp/>get&lt;1&gt;(t))<sp/>||</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invoke(pred,<sp/>get&lt;1&gt;(t),<sp/>get&lt;0&gt;(t)))</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tok.cancel(i);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[=](std::vector&lt;hpx::future&lt;void&gt;<sp/>&gt;<sp/>&amp;&amp;)<sp/></highlight><highlight class="keyword">mutable</highlight><highlight class="normal"><sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>mismatched<sp/>=<sp/>tok.get_data();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(first1,<sp/>mismatched);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::advance(first2,<sp/>mismatched);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first1<sp/>!=<sp/>last1<sp/>&amp;&amp;<sp/>first2<sp/>!=<sp/>last2)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::util::invoke(pred,<sp/>*first1,<sp/>*first2);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>first2<sp/>!=<sp/>last2;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExPolicy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FwdIter1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FwdIter2,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred<sp/>=<sp/>detail::less&gt;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::enable_if&lt;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execution::is_execution_policy&lt;ExPolicy&gt;::value,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>util::detail::algorithm_result&lt;ExPolicy,<sp/>bool&gt;::type</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="206" refid="lexicographical__compare_8hpp_1a6a8e24d8e68f80b9692b010b7d0199a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lexicographical__compare_8hpp_1a6a8e24d8e68f80b9692b010b7d0199a4" kindref="member">lexicographical_compare</ref>(ExPolicy<sp/>&amp;&amp;<sp/>policy,<sp/>FwdIter1<sp/>first1,<sp/>FwdIter1<sp/>last1,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FwdIter2<sp/>first2,<sp/>FwdIter2<sp/>last2,<sp/>Pred<sp/>&amp;&amp;<sp/>pred<sp/>=<sp/>Pred())</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPX_HAVE_ALGORITHM_INPUT_ITERATOR_SUPPORT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hpx::traits::is_input_iterator&lt;FwdIter1&gt;::value),</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Requires<sp/>at<sp/>least<sp/>input<sp/>iterator.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hpx::traits::is_input_iterator&lt;FwdIter2&gt;::value),</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Requires<sp/>at<sp/>least<sp/>input<sp/>iterator.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::integral_constant&lt;bool,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1is__sequenced__execution__policy" kindref="compound">execution::is_sequenced_execution_policy&lt;ExPolicy&gt;::value</ref><sp/>||</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!hpx::traits::is_forward_iterator&lt;FwdIter1&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!hpx::traits::is_forward_iterator&lt;FwdIter2&gt;::value</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>is_seq;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hpx::traits::is_forward_iterator&lt;FwdIter1&gt;::value),</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Requires<sp/>at<sp/>least<sp/>forward<sp/>iterator.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hpx::traits::is_forward_iterator&lt;FwdIter2&gt;::value),</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Requires<sp/>at<sp/>least<sp/>forward<sp/>iterator.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1is__sequenced__execution__policy" kindref="compound">execution::is_sequenced_execution_policy&lt;ExPolicy&gt;</ref><sp/>is_seq;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::lexicographical_compare().call(</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;ExPolicy&gt;(policy),<sp/>is_seq(),</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first1,<sp/>last1,<sp/>first2,<sp/>last2,<sp/>std::forward&lt;Pred&gt;(pred));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}}}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="hpx/parallel/algorithms/lexicographical_compare.hpp"/>
  </compounddef>
</doxygen>
