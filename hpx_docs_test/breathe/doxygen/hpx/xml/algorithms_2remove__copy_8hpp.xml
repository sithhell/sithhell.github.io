<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="algorithms_2remove__copy_8hpp" kind="file" language="C++">
    <compoundname>remove_copy.hpp</compoundname>
    <includes local="no">hpx/config.hpp</includes>
    <includes local="no">hpx/traits/concepts.hpp</includes>
    <includes local="no">hpx/traits/is_iterator.hpp</includes>
    <includes refid="invoke_8hpp" local="no">hpx/util/invoke.hpp</includes>
    <includes local="no">hpx/util/tagged_pair.hpp</includes>
    <includes refid="algorithms_2copy_8hpp" local="no">hpx/parallel/algorithms/copy.hpp</includes>
    <includes local="no">hpx/parallel/algorithms/detail/dispatch.hpp</includes>
    <includes refid="execution__policy_8hpp" local="no">hpx/parallel/execution_policy.hpp</includes>
    <includes local="no">hpx/parallel/tagspec.hpp</includes>
    <includes local="no">hpx/parallel/util/detail/algorithm_result.hpp</includes>
    <includes local="no">hpx/parallel/util/projection_identity.hpp</includes>
    <includes local="no">hpx/util/unused.hpp</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">iterator</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includedby refid="algorithm_8hpp" local="no">hpx/parallel/algorithm.hpp</includedby>
    <includedby refid="container__algorithms_2remove__copy_8hpp" local="no">hpx/parallel/container_algorithms/remove_copy.hpp</includedby>
    <incdepgraph>
      <node id="4625">
        <label>hpx/traits/is_execution_policy.hpp</label>
        <link refid="is__execution__policy_8hpp"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4626" relation="include">
        </childnode>
        <childnode refid="4548" relation="include">
        </childnode>
      </node>
      <node id="4606">
        <label>atomic</label>
      </node>
      <node id="4614">
        <label>functional</label>
      </node>
      <node id="4603">
        <label>hpx/util/register_locks.hpp</label>
      </node>
      <node id="4565">
        <label>hpx/parallel/executors/post_policy_dispatch.hpp</label>
      </node>
      <node id="4550">
        <label>hpx/util/tagged_pair.hpp</label>
      </node>
      <node id="4604">
        <label>hpx/util/steady_clock.hpp</label>
      </node>
      <node id="4623">
        <label>iterator</label>
      </node>
      <node id="4589">
        <label>cstdint</label>
      </node>
      <node id="4577">
        <label>hpx/throw_exception.hpp</label>
        <link refid="throw__exception_8hpp"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4573" relation="include">
        </childnode>
        <childnode refid="4576" relation="include">
        </childnode>
        <childnode refid="4578" relation="include">
        </childnode>
        <childnode refid="4579" relation="include">
        </childnode>
        <childnode refid="4580" relation="include">
        </childnode>
        <childnode refid="4581" relation="include">
        </childnode>
        <childnode refid="4574" relation="include">
        </childnode>
        <childnode refid="4582" relation="include">
        </childnode>
        <childnode refid="4575" relation="include">
        </childnode>
        <childnode refid="4583" relation="include">
        </childnode>
        <childnode refid="4584" relation="include">
        </childnode>
      </node>
      <node id="4595">
        <label>hpx/runtime/threads/policies/scheduler_mode.hpp</label>
        <link refid="scheduler__mode_8hpp_source"/>
      </node>
      <node id="4600">
        <label>hpx/util/function.hpp</label>
      </node>
      <node id="4576">
        <label>hpx/exception_fwd.hpp</label>
        <link refid="exception__fwd_8hpp"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4573" relation="include">
        </childnode>
        <childnode refid="4577" relation="include">
        </childnode>
      </node>
      <node id="4629">
        <label>hpx/parallel/traits/projected.hpp</label>
      </node>
      <node id="4546">
        <label>hpx/util/void_guard.hpp</label>
      </node>
      <node id="4545">
        <label>hpx/util/result_of.hpp</label>
      </node>
      <node id="4585">
        <label>stdexcept</label>
      </node>
      <node id="4586">
        <label>hpx/runtime/launch_policy.hpp</label>
        <link refid="launch__policy_8hpp"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4587" relation="include">
        </childnode>
        <childnode refid="4590" relation="include">
        </childnode>
        <childnode refid="4548" relation="include">
        </childnode>
        <childnode refid="4549" relation="include">
        </childnode>
      </node>
      <node id="4575">
        <label>string</label>
      </node>
      <node id="4628">
        <label>hpx/parallel/tagspec.hpp</label>
      </node>
      <node id="4580">
        <label>hpx/util/detail/pp/nargs.hpp</label>
      </node>
      <node id="4627">
        <label>hpx/traits/is_launch_policy.hpp</label>
      </node>
      <node id="4591">
        <label>hpx/runtime/threads/thread_helpers.hpp</label>
        <link refid="thread__helpers_8hpp_source"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4576" relation="include">
        </childnode>
        <childnode refid="4592" relation="include">
        </childnode>
        <childnode refid="4593" relation="include">
        </childnode>
        <childnode refid="4594" relation="include">
        </childnode>
        <childnode refid="4595" relation="include">
        </childnode>
        <childnode refid="4596" relation="include">
        </childnode>
        <childnode refid="4587" relation="include">
        </childnode>
        <childnode refid="4599" relation="include">
        </childnode>
        <childnode refid="4601" relation="include">
        </childnode>
        <childnode refid="4603" relation="include">
        </childnode>
        <childnode refid="4604" relation="include">
        </childnode>
        <childnode refid="4605" relation="include">
        </childnode>
        <childnode refid="4606" relation="include">
        </childnode>
        <childnode refid="4607" relation="include">
        </childnode>
        <childnode refid="4570" relation="include">
        </childnode>
        <childnode refid="4589" relation="include">
        </childnode>
        <childnode refid="4548" relation="include">
        </childnode>
        <childnode refid="4549" relation="include">
        </childnode>
      </node>
      <node id="4573">
        <label>hpx/error.hpp</label>
        <link refid="error_8hpp"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4574" relation="include">
        </childnode>
        <childnode refid="4575" relation="include">
        </childnode>
      </node>
      <node id="4583">
        <label>hpx/config/warnings_prefix.hpp</label>
      </node>
      <node id="4541">
        <label>hpx/config.hpp</label>
      </node>
      <node id="4639">
        <label>boost/shared_array.hpp</label>
      </node>
      <node id="4556">
        <label>hpx/parallel/execution_policy.hpp</label>
        <link refid="execution__policy_8hpp"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4557" relation="include">
        </childnode>
        <childnode refid="4558" relation="include">
        </childnode>
        <childnode refid="4559" relation="include">
        </childnode>
        <childnode refid="4560" relation="include">
        </childnode>
        <childnode refid="4561" relation="include">
        </childnode>
        <childnode refid="4616" relation="include">
        </childnode>
        <childnode refid="4617" relation="include">
        </childnode>
        <childnode refid="4567" relation="include">
        </childnode>
        <childnode refid="4624" relation="include">
        </childnode>
        <childnode refid="4625" relation="include">
        </childnode>
        <childnode refid="4609" relation="include">
        </childnode>
        <childnode refid="4568" relation="include">
        </childnode>
        <childnode refid="4627" relation="include">
        </childnode>
        <childnode refid="4626" relation="include">
        </childnode>
        <childnode refid="4602" relation="include">
        </childnode>
        <childnode refid="4548" relation="include">
        </childnode>
        <childnode refid="4549" relation="include">
        </childnode>
      </node>
      <node id="4582">
        <label>exception</label>
      </node>
      <node id="4561">
        <label>hpx/parallel/executors/parallel_executor.hpp</label>
        <link refid="parallel__executor_8hpp"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4562" relation="include">
        </childnode>
        <childnode refid="4563" relation="include">
        </childnode>
        <childnode refid="4564" relation="include">
        </childnode>
        <childnode refid="4554" relation="include">
        </childnode>
        <childnode refid="4565" relation="include">
        </childnode>
        <childnode refid="4566" relation="include">
        </childnode>
        <childnode refid="4571" relation="include">
        </childnode>
        <childnode refid="4586" relation="include">
        </childnode>
        <childnode refid="4567" relation="include">
        </childnode>
        <childnode refid="4591" relation="include">
        </childnode>
        <childnode refid="4608" relation="include">
        </childnode>
        <childnode refid="4609" relation="include">
        </childnode>
        <childnode refid="4610" relation="include">
        </childnode>
        <childnode refid="4611" relation="include">
        </childnode>
        <childnode refid="4612" relation="include">
        </childnode>
        <childnode refid="4613" relation="include">
        </childnode>
        <childnode refid="4570" relation="include">
        </childnode>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4548" relation="include">
        </childnode>
        <childnode refid="4549" relation="include">
        </childnode>
        <childnode refid="4615" relation="include">
        </childnode>
      </node>
      <node id="4543">
        <label>hpx/traits/is_iterator.hpp</label>
      </node>
      <node id="4599">
        <label>hpx/util_fwd.hpp</label>
      </node>
      <node id="4631">
        <label>hpx/parallel/util/foreach_partitioner.hpp</label>
      </node>
      <node id="4601">
        <label>hpx/util/unique_function.hpp</label>
      </node>
      <node id="4617">
        <label>hpx/parallel/executors/sequenced_executor.hpp</label>
        <link refid="sequenced__executor_8hpp"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4562" relation="include">
        </childnode>
        <childnode refid="4563" relation="include">
        </childnode>
        <childnode refid="4618" relation="include">
        </childnode>
        <childnode refid="4609" relation="include">
        </childnode>
        <childnode refid="4619" relation="include">
        </childnode>
        <childnode refid="4544" relation="include">
        </childnode>
        <childnode refid="4620" relation="include">
        </childnode>
        <childnode refid="4622" relation="include">
        </childnode>
        <childnode refid="4570" relation="include">
        </childnode>
        <childnode refid="4623" relation="include">
        </childnode>
        <childnode refid="4548" relation="include">
        </childnode>
        <childnode refid="4549" relation="include">
        </childnode>
        <childnode refid="4615" relation="include">
        </childnode>
      </node>
      <node id="4581">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="4608">
        <label>hpx/traits/future_traits.hpp</label>
      </node>
      <node id="4619">
        <label>hpx/util/deferred_call.hpp</label>
      </node>
      <node id="4587">
        <label>hpx/runtime/threads/thread_enums.hpp</label>
        <link refid="thread__enums_8hpp"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4588" relation="include">
        </childnode>
        <childnode refid="4570" relation="include">
        </childnode>
        <childnode refid="4589" relation="include">
        </childnode>
      </node>
      <node id="4566">
        <label>hpx/parallel/executors/static_chunk_size.hpp</label>
        <link refid="static__chunk__size_8hpp"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4567" relation="include">
        </childnode>
        <childnode refid="4568" relation="include">
        </childnode>
        <childnode refid="4569" relation="include">
        </childnode>
        <childnode refid="4570" relation="include">
        </childnode>
        <childnode refid="4548" relation="include">
        </childnode>
      </node>
      <node id="4634">
        <label>hpx/parallel/util/scan_partitioner.hpp</label>
      </node>
      <node id="4621">
        <label>hpx/util/detail/unwrap_impl.hpp</label>
      </node>
      <node id="4542">
        <label>hpx/traits/concepts.hpp</label>
      </node>
      <node id="4622">
        <label>hpx/parallel/exception_list.hpp</label>
      </node>
      <node id="4553">
        <label>hpx/parallel/algorithms/detail/is_negative.hpp</label>
      </node>
      <node id="4558">
        <label>hpx/parallel/execution_policy_fwd.hpp</label>
      </node>
      <node id="4618">
        <label>hpx/runtime/threads/thread_executor.hpp</label>
      </node>
      <node id="4609">
        <label>hpx/traits/is_executor.hpp</label>
      </node>
      <node id="4632">
        <label>hpx/parallel/util/loop.hpp</label>
      </node>
      <node id="4540">
        <label>hpx/parallel/algorithms/remove_copy.hpp</label>
        <link refid="algorithms_2remove__copy_8hpp"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4542" relation="include">
        </childnode>
        <childnode refid="4543" relation="include">
        </childnode>
        <childnode refid="4544" relation="include">
        </childnode>
        <childnode refid="4550" relation="include">
        </childnode>
        <childnode refid="4551" relation="include">
        </childnode>
        <childnode refid="4552" relation="include">
        </childnode>
        <childnode refid="4556" relation="include">
        </childnode>
        <childnode refid="4628" relation="include">
        </childnode>
        <childnode refid="4630" relation="include">
        </childnode>
        <childnode refid="4633" relation="include">
        </childnode>
        <childnode refid="4637" relation="include">
        </childnode>
        <childnode refid="4613" relation="include">
        </childnode>
        <childnode refid="4623" relation="include">
        </childnode>
        <childnode refid="4548" relation="include">
        </childnode>
        <childnode refid="4549" relation="include">
        </childnode>
      </node>
      <node id="4554">
        <label>hpx/parallel/algorithms/detail/predicates.hpp</label>
      </node>
      <node id="4559">
        <label>hpx/parallel/executors/execution.hpp</label>
      </node>
      <node id="4574">
        <label>boost/system/error_code.hpp</label>
      </node>
      <node id="4615">
        <label>vector</label>
      </node>
      <node id="4552">
        <label>hpx/parallel/algorithms/detail/dispatch.hpp</label>
      </node>
      <node id="4635">
        <label>hpx/parallel/util/transfer.hpp</label>
      </node>
      <node id="4598">
        <label>hpx/runtime/threads/thread_id_type.hpp</label>
      </node>
      <node id="4549">
        <label>utility</label>
      </node>
      <node id="4557">
        <label>hpx/parallel/datapar/execution_policy.hpp</label>
      </node>
      <node id="4620">
        <label>hpx/util/unwrap.hpp</label>
        <link refid="unwrap_8hpp_source"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4621" relation="include">
        </childnode>
        <childnode refid="4570" relation="include">
        </childnode>
        <childnode refid="4549" relation="include">
        </childnode>
      </node>
      <node id="4584">
        <label>hpx/config/warnings_suffix.hpp</label>
      </node>
      <node id="4547">
        <label>boost/ref.hpp</label>
      </node>
      <node id="4588">
        <label>hpx/runtime/threads/detail/combined_tagged_state.hpp</label>
      </node>
      <node id="4612">
        <label>hpx/util/range.hpp</label>
      </node>
      <node id="4569">
        <label>hpx/parallel/executors/execution_parameters_fwd.hpp</label>
      </node>
      <node id="4564">
        <label>hpx/lcos/when_all_fwd.hpp</label>
      </node>
      <node id="4579">
        <label>hpx/util/detail/pp/expand.hpp</label>
      </node>
      <node id="4555">
        <label>hpx/parallel/algorithms/detail/transfer.hpp</label>
      </node>
      <node id="4560">
        <label>hpx/parallel/executors/execution_parameters.hpp</label>
      </node>
      <node id="4570">
        <label>cstddef</label>
      </node>
      <node id="4636">
        <label>hpx/parallel/util/zip_iterator.hpp</label>
      </node>
      <node id="4592">
        <label>hpx/runtime/naming_fwd.hpp</label>
      </node>
      <node id="4607">
        <label>chrono</label>
      </node>
      <node id="4616">
        <label>hpx/parallel/executors/rebind_executor.hpp</label>
      </node>
      <node id="4572">
        <label>hpx/error_code.hpp</label>
        <link refid="error__code_8hpp"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4573" relation="include">
        </childnode>
        <childnode refid="4576" relation="include">
        </childnode>
        <childnode refid="4574" relation="include">
        </childnode>
        <childnode refid="4582" relation="include">
        </childnode>
        <childnode refid="4585" relation="include">
        </childnode>
        <childnode refid="4575" relation="include">
        </childnode>
        <childnode refid="4577" relation="include">
        </childnode>
      </node>
      <node id="4562">
        <label>hpx/async_launch_policy_dispatch.hpp</label>
      </node>
      <node id="4544">
        <label>hpx/util/invoke.hpp</label>
        <link refid="invoke_8hpp_source"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4545" relation="include">
        </childnode>
        <childnode refid="4546" relation="include">
        </childnode>
        <childnode refid="4547" relation="include">
        </childnode>
        <childnode refid="4548" relation="include">
        </childnode>
        <childnode refid="4549" relation="include">
        </childnode>
      </node>
      <node id="4593">
        <label>hpx/runtime/threads_fwd.hpp</label>
      </node>
      <node id="4590">
        <label>hpx/runtime/serialization/serialization_fwd.hpp</label>
      </node>
      <node id="4626">
        <label>hpx/util/decay.hpp</label>
      </node>
      <node id="4597">
        <label>hpx/runtime/threads/coroutines/coroutine_fwd.hpp</label>
      </node>
      <node id="4596">
        <label>hpx/runtime/threads/thread_data_fwd.hpp</label>
        <link refid="thread__data__fwd_8hpp"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4576" relation="include">
        </childnode>
        <childnode refid="4597" relation="include">
        </childnode>
        <childnode refid="4587" relation="include">
        </childnode>
        <childnode refid="4598" relation="include">
        </childnode>
        <childnode refid="4599" relation="include">
        </childnode>
        <childnode refid="4600" relation="include">
        </childnode>
        <childnode refid="4601" relation="include">
        </childnode>
        <childnode refid="4570" relation="include">
        </childnode>
        <childnode refid="4589" relation="include">
        </childnode>
        <childnode refid="4549" relation="include">
        </childnode>
        <childnode refid="4602" relation="include">
        </childnode>
      </node>
      <node id="4563">
        <label>hpx/lcos/future.hpp</label>
      </node>
      <node id="4548">
        <label>type_traits</label>
      </node>
      <node id="4624">
        <label>hpx/traits/executor_traits.hpp</label>
      </node>
      <node id="4568">
        <label>hpx/traits/is_executor_parameters.hpp</label>
      </node>
      <node id="4613">
        <label>algorithm</label>
      </node>
      <node id="4567">
        <label>hpx/runtime/serialization/serialize.hpp</label>
      </node>
      <node id="4630">
        <label>hpx/parallel/util/detail/algorithm_result.hpp</label>
      </node>
      <node id="4611">
        <label>hpx/util/bind.hpp</label>
      </node>
      <node id="4638">
        <label>cstring</label>
      </node>
      <node id="4551">
        <label>hpx/parallel/algorithms/copy.hpp</label>
        <link refid="algorithms_2copy_8hpp"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4542" relation="include">
        </childnode>
        <childnode refid="4543" relation="include">
        </childnode>
        <childnode refid="4544" relation="include">
        </childnode>
        <childnode refid="4550" relation="include">
        </childnode>
        <childnode refid="4552" relation="include">
        </childnode>
        <childnode refid="4553" relation="include">
        </childnode>
        <childnode refid="4554" relation="include">
        </childnode>
        <childnode refid="4555" relation="include">
        </childnode>
        <childnode refid="4556" relation="include">
        </childnode>
        <childnode refid="4628" relation="include">
        </childnode>
        <childnode refid="4629" relation="include">
        </childnode>
        <childnode refid="4630" relation="include">
        </childnode>
        <childnode refid="4631" relation="include">
        </childnode>
        <childnode refid="4632" relation="include">
        </childnode>
        <childnode refid="4633" relation="include">
        </childnode>
        <childnode refid="4634" relation="include">
        </childnode>
        <childnode refid="4635" relation="include">
        </childnode>
        <childnode refid="4636" relation="include">
        </childnode>
        <childnode refid="4637" relation="include">
        </childnode>
        <childnode refid="4613" relation="include">
        </childnode>
        <childnode refid="4570" relation="include">
        </childnode>
        <childnode refid="4638" relation="include">
        </childnode>
        <childnode refid="4623" relation="include">
        </childnode>
        <childnode refid="4602" relation="include">
        </childnode>
        <childnode refid="4548" relation="include">
        </childnode>
        <childnode refid="4549" relation="include">
        </childnode>
        <childnode refid="4615" relation="include">
        </childnode>
        <childnode refid="4639" relation="include">
        </childnode>
      </node>
      <node id="4610">
        <label>hpx/util/assert.hpp</label>
      </node>
      <node id="4633">
        <label>hpx/parallel/util/projection_identity.hpp</label>
      </node>
      <node id="4571">
        <label>hpx/runtime/get_worker_thread_num.hpp</label>
        <link refid="get__worker__thread__num_8hpp"/>
        <childnode refid="4541" relation="include">
        </childnode>
        <childnode refid="4572" relation="include">
        </childnode>
        <childnode refid="4570" relation="include">
        </childnode>
      </node>
      <node id="4602">
        <label>memory</label>
      </node>
      <node id="4594">
        <label>hpx/runtime/thread_pool_helpers.hpp</label>
      </node>
      <node id="4637">
        <label>hpx/util/unused.hpp</label>
      </node>
      <node id="4578">
        <label>hpx/util/detail/pp/cat.hpp</label>
      </node>
      <node id="4605">
        <label>hpx/util/thread_description.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4641">
        <label>hpx/parallel/algorithm.hpp</label>
        <link refid="algorithm_8hpp_source"/>
      </node>
      <node id="4642">
        <label>hpx/parallel/container_algorithms/remove_copy.hpp</label>
        <link refid="container__algorithms_2remove__copy_8hpp"/>
      </node>
      <node id="4640">
        <label>hpx/parallel/algorithms/remove_copy.hpp</label>
        <link refid="algorithms_2remove__copy_8hpp"/>
        <childnode refid="4641" relation="include">
        </childnode>
        <childnode refid="4642" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacehpx">hpx</innernamespace>
    <innernamespace refid="namespacehpx_1_1parallel">hpx::parallel</innernamespace>
    <innernamespace refid="namespacehpx_1_1parallel_1_1v1">hpx::parallel::v1</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2015<sp/>Daniel<sp/>Bourgeois</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(HPX_PARALLEL_DETAIL_REMOVE_COPY_FEB_25_2015_0137PM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_PARALLEL_DETAIL_REMOVE_COPY_FEB_25_2015_0137PM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/config.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/traits/concepts.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/traits/is_iterator.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/util/invoke.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/util/tagged_pair.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="algorithms_2copy_8hpp" kindref="compound">hpx/parallel/algorithms/copy.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/parallel/algorithms/detail/dispatch.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="execution__policy_8hpp" kindref="compound">hpx/parallel/execution_policy.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/parallel/tagspec.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/parallel/util/detail/algorithm_result.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/parallel/util/projection_identity.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/util/unused.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehpx" kindref="compound">hpx</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">parallel<sp/>{<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">v1</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove_copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sequential<sp/>remove_copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InIter,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutIter,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj&gt;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::pair&lt;InIter,<sp/>OutIter&gt;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sequential_remove_copy(InIter<sp/>first,<sp/>InIter<sp/>last,<sp/>OutIter<sp/>dest,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>value,<sp/>Proj<sp/>&amp;&amp;<sp/>proj)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal">;<sp/>first<sp/>!=<sp/>last;<sp/>++first)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(hpx::util::invoke(proj,<sp/>*first)<sp/>==<sp/>value))</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dest++<sp/>=<sp/>*first;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(first,<sp/>dest);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IterPair&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="algorithms_2remove__copy_8hpp_1adb30c2cd504c8d1860eac328ebdab75f" kindref="member">remove_copy</ref></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>detail::algorithm&lt;remove_copy&lt;IterPair&gt;,<sp/>IterPair&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="algorithms_2remove__copy_8hpp_1adb30c2cd504c8d1860eac328ebdab75f" kindref="member">remove_copy</ref>()</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="algorithms_2remove__copy_8hpp_1adb30c2cd504c8d1860eac328ebdab75f" kindref="member">remove_copy</ref>::algorithm(</highlight><highlight class="stringliteral">&quot;remove_copy&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExPolicy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InIter,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutIter,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj&gt;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::pair&lt;InIter,<sp/>OutIter&gt;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sequential(ExPolicy,<sp/>InIter<sp/>first,<sp/>InIter<sp/>last,<sp/>OutIter<sp/>dest,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>val,<sp/>Proj<sp/>&amp;&amp;<sp/>proj)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sequential_remove_copy(first,<sp/>last,<sp/>dest,<sp/>val,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;Proj&gt;(proj));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExPolicy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FwdIter1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FwdIter2,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>util::detail::algorithm_result&lt;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExPolicy,<sp/>std::pair&lt;FwdIter1,<sp/>FwdIter2&gt;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallel(ExPolicy<sp/>&amp;&amp;<sp/>policy,<sp/>FwdIter1<sp/>first,<sp/>FwdIter1<sp/>last,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FwdIter2<sp/>dest,<sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>val,<sp/>Proj<sp/>&amp;&amp;<sp/>proj)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy_if&lt;IterPair&gt;().call(</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;ExPolicy&gt;(policy),<sp/>std::false_type(),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first,<sp/>last,<sp/>dest,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[val](T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(a<sp/>==<sp/>val);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;Proj&gt;(proj));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExPolicy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FwdIter1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FwdIter2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj<sp/>=<sp/>util::projection_identity,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_CONCEPT_REQUIRES_(</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execution::is_execution_policy&lt;ExPolicy&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::traits::is_iterator&lt;FwdIter1&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::traits::is_iterator&lt;FwdIter2&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traits::is_projected&lt;Proj,<sp/>FwdIter1&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traits::is_indirect_callable&lt;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExPolicy,<sp/>std::equal_to&lt;T&gt;,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traits::projected&lt;Proj,<sp/>FwdIter1&gt;,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traits::projected&lt;Proj,<sp/>T<sp/>const*&gt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::value)&gt;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>util::detail::algorithm_result&lt;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExPolicy,<sp/>hpx::util::tagged_pair&lt;tag::in(FwdIter1),<sp/>tag::out(FwdIter2)&gt;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="173" refid="algorithms_2remove__copy_8hpp_1adb30c2cd504c8d1860eac328ebdab75f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="algorithms_2remove__copy_8hpp_1adb30c2cd504c8d1860eac328ebdab75f" kindref="member">remove_copy</ref>(ExPolicy<sp/>&amp;&amp;<sp/>policy,<sp/>FwdIter1<sp/>first,<sp/>FwdIter1<sp/>last,<sp/>FwdIter2<sp/>dest,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>val,<sp/>Proj<sp/>&amp;&amp;<sp/>proj<sp/>=<sp/>Proj())</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPX_HAVE_ALGORITHM_INPUT_ITERATOR_SUPPORT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hpx::traits::is_input_iterator&lt;FwdIter1&gt;::value),</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Requires<sp/>at<sp/>least<sp/>input<sp/>iterator.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hpx::traits::is_output_iterator&lt;FwdIter2&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::traits::is_forward_iterator&lt;FwdIter2&gt;::value),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Requires<sp/>at<sp/>least<sp/>output<sp/>iterator.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::integral_constant&lt;bool,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1is__sequenced__execution__policy" kindref="compound">execution::is_sequenced_execution_policy&lt;ExPolicy&gt;::value</ref><sp/>||</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!hpx::traits::is_forward_iterator&lt;FwdIter1&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!hpx::traits::is_forward_iterator&lt;FwdIter2&gt;::value</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>is_seq;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hpx::traits::is_forward_iterator&lt;FwdIter1&gt;::value),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Requires<sp/>at<sp/>least<sp/>forward<sp/>iterator.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hpx::traits::is_forward_iterator&lt;FwdIter2&gt;::value),</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Requires<sp/>at<sp/>least<sp/>forward<sp/>iterator.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1is__sequenced__execution__policy" kindref="compound">execution::is_sequenced_execution_policy&lt;ExPolicy&gt;</ref><sp/>is_seq;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::util::make_tagged_pair&lt;tag::in,<sp/>tag::out&gt;(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::remove_copy&lt;std::pair&lt;FwdIter1,<sp/>FwdIter2&gt;<sp/>&gt;().call(</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;ExPolicy&gt;(policy),<sp/>is_seq(),</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first,<sp/>last,<sp/>dest,<sp/>val,<sp/>std::forward&lt;Proj&gt;(proj)));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove_copy_if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sequential<sp/>remove_copy_if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InIter,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutIter,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj&gt;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::pair&lt;InIter,<sp/>OutIter&gt;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sequential_remove_copy_if(InIter<sp/>first,<sp/>InIter<sp/>last,<sp/>OutIter<sp/>dest,<sp/>F<sp/>p,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proj<sp/>&amp;&amp;<sp/>proj)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal">;<sp/>first<sp/>!=<sp/>last;<sp/>++first)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>hpx::util::invoke;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!invoke(p,<sp/>invoke(proj,<sp/>*first)))</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dest++<sp/>=<sp/>*first;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(first,<sp/>dest);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IterPair&gt;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="algorithms_2remove__copy_8hpp_1a5423d1998cd9627340234b1dc4d59aa5" kindref="member">remove_copy_if</ref></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>detail::algorithm&lt;remove_copy_if&lt;IterPair&gt;,<sp/>IterPair&gt;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="algorithms_2remove__copy_8hpp_1a5423d1998cd9627340234b1dc4d59aa5" kindref="member">remove_copy_if</ref>()</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>remove_copy_if::algorithm(</highlight><highlight class="stringliteral">&quot;remove_copy_if&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExPolicy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>InIter,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>OutIter,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj&gt;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::pair&lt;InIter,<sp/>OutIter&gt;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sequential(ExPolicy,<sp/>InIter<sp/>first,<sp/>InIter<sp/>last,<sp/>OutIter<sp/>dest,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F<sp/>&amp;&amp;<sp/>f,<sp/>Proj<sp/>&amp;&amp;<sp/>proj)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sequential_remove_copy_if(first,<sp/>last,<sp/>dest,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;F&gt;(f),<sp/>std::forward&lt;Proj&gt;(proj));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExPolicy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FwdIter1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FwdIter2,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj&gt;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>util::detail::algorithm_result&lt;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExPolicy,<sp/>std::pair&lt;FwdIter1,<sp/>FwdIter2&gt;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallel(ExPolicy<sp/>&amp;&amp;<sp/>policy,<sp/>FwdIter1<sp/>first,<sp/>FwdIter1<sp/>last,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FwdIter2<sp/>dest,<sp/>F<sp/>&amp;&amp;<sp/>f,<sp/>Proj<sp/>&amp;&amp;<sp/>proj)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;FwdIter1&gt;::value_type</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value_type;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy_if&lt;IterPair&gt;().call(</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;ExPolicy&gt;(policy),<sp/>std::false_type(),</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first,<sp/>last,<sp/>dest,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[HPX_CAPTURE_FORWARD(f)](value_type<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>a)<sp/>-&gt;<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!hpx::util::invoke(f,<sp/>a);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;Proj&gt;(proj));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ExPolicy,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FwdIter1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FwdIter2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj<sp/>=<sp/>util::projection_identity,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>HPX_CONCEPT_REQUIRES_(</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1is__execution__policy" kindref="compound">execution::is_execution_policy&lt;ExPolicy&gt;::value</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::traits::is_iterator&lt;FwdIter1&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traits::is_projected&lt;Proj,<sp/>FwdIter1&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>traits::is_indirect_callable&lt;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExPolicy,<sp/>F,<sp/>traits::projected&lt;Proj,<sp/>FwdIter1&gt;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::value<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::traits::is_iterator&lt;FwdIter2&gt;::value)&gt;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>util::detail::algorithm_result&lt;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ExPolicy,<sp/>hpx::util::tagged_pair&lt;tag::in(FwdIter1),<sp/>tag::out(FwdIter2)&gt;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="366" refid="algorithms_2remove__copy_8hpp_1a5423d1998cd9627340234b1dc4d59aa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="algorithms_2remove__copy_8hpp_1a5423d1998cd9627340234b1dc4d59aa5" kindref="member">remove_copy_if</ref>(ExPolicy<sp/>&amp;&amp;<sp/>policy,<sp/>FwdIter1<sp/>first,<sp/>FwdIter1<sp/>last,<sp/>FwdIter2<sp/>dest,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F<sp/>&amp;&amp;<sp/>f,<sp/>Proj<sp/>&amp;&amp;<sp/>proj<sp/>=<sp/>Proj())</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPX_HAVE_ALGORITHM_INPUT_ITERATOR_SUPPORT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hpx::traits::is_input_iterator&lt;FwdIter1&gt;::value),</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Requires<sp/>at<sp/>least<sp/>input<sp/>iterator.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hpx::traits::is_output_iterator&lt;FwdIter2&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::traits::is_forward_iterator&lt;FwdIter2&gt;::value),</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Requires<sp/>at<sp/>least<sp/>output<sp/>iterator.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::integral_constant&lt;bool,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1is__sequenced__execution__policy" kindref="compound">execution::is_sequenced_execution_policy&lt;ExPolicy&gt;::value</ref><sp/>||</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!hpx::traits::is_forward_iterator&lt;FwdIter1&gt;::value<sp/>||</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!hpx::traits::is_forward_iterator&lt;FwdIter2&gt;::value</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>is_seq;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hpx::traits::is_forward_iterator&lt;FwdIter1&gt;::value),</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Requires<sp/>at<sp/>least<sp/>forward<sp/>iterator.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(hpx::traits::is_forward_iterator&lt;FwdIter2&gt;::value),</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Requires<sp/>at<sp/>least<sp/>forward<sp/>iterator.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1is__sequenced__execution__policy" kindref="compound">execution::is_sequenced_execution_policy&lt;ExPolicy&gt;</ref><sp/>is_seq;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::util::make_tagged_pair&lt;tag::in,<sp/>tag::out&gt;(</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::remove_copy_if&lt;std::pair&lt;FwdIter1,<sp/>FwdIter2&gt;<sp/>&gt;().call(</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;ExPolicy&gt;(policy),<sp/>is_seq(),</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first,<sp/>last,<sp/>dest,<sp/>std::forward&lt;F&gt;(f),</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;Proj&gt;(proj)));</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}}}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="hpx/parallel/algorithms/remove_copy.hpp"/>
  </compounddef>
</doxygen>
