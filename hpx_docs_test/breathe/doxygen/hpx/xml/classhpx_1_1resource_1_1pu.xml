<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classhpx_1_1resource_1_1pu" kind="class" language="C++" prot="public">
    <compoundname>hpx::resource::pu</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classhpx_1_1resource_1_1pu_1aea1c75ef951ef3603fb488d78f23d19a" prot="private" static="yes" mutable="no">
        <type>const std::size_t</type>
        <definition>const std::size_t hpx::resource::pu::invalid_pu_id</definition>
        <argsstring></argsstring>
        <name>invalid_pu_id</name>
        <initializer>= std::size_t(-1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/resource/partitioner.hpp" line="28" column="1" bodyfile="hpx/runtime/resource/partitioner.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classhpx_1_1resource_1_1pu_1af764561c544bacc1b90b526ee8d3c708" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class core</definition>
        <argsstring></argsstring>
        <name>core</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/resource/partitioner.hpp" line="46" column="1" bodyfile="hpx/runtime/resource/partitioner.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classhpx_1_1resource_1_1pu_1a2cd848189ba1a47ca3c3150ad45e974c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class numa_domain</definition>
        <argsstring></argsstring>
        <name>numa_domain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/resource/partitioner.hpp" line="47" column="1" bodyfile="hpx/runtime/resource/partitioner.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhpx_1_1resource_1_1pu_1aef608faedbbedb5363ce8b2fa3459902" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t hpx::resource::pu::id_</definition>
        <argsstring></argsstring>
        <name>id_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/resource/partitioner.hpp" line="53" column="1" bodyfile="hpx/runtime/resource/partitioner.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhpx_1_1resource_1_1pu_1a60cce22f6aa567e2b4a5ed0be8fe4595" prot="private" static="no" mutable="no">
        <type><ref refid="classhpx_1_1resource_1_1core" kindref="compound">core</ref> *</type>
        <definition>core* hpx::resource::pu::core_</definition>
        <argsstring></argsstring>
        <name>core_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/resource/partitioner.hpp" line="54" column="1" bodyfile="hpx/runtime/resource/partitioner.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhpx_1_1resource_1_1pu_1ab803fb8ed0c174879646f06d4150e0f1" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t hpx::resource::pu::thread_occupancy_</definition>
        <argsstring></argsstring>
        <name>thread_occupancy_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/resource/partitioner.hpp" line="60" column="1" bodyfile="hpx/runtime/resource/partitioner.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhpx_1_1resource_1_1pu_1a857b41b2c93d17256d46632ba31362ea" prot="private" static="no" mutable="yes">
        <type>std::size_t</type>
        <definition>std::size_t hpx::resource::pu::thread_occupancy_count_</definition>
        <argsstring></argsstring>
        <name>thread_occupancy_count_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/resource/partitioner.hpp" line="63" column="1" bodyfile="hpx/runtime/resource/partitioner.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhpx_1_1resource_1_1pu_1a537ffb359aa977fbdb2f42f3515fc8bf" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::resource::pu::pu</definition>
        <argsstring>(std::size_t id=invalid_pu_id, core *core=nullptr, std::size_t thread_occupancy=0)</argsstring>
        <name>pu</name>
        <param>
          <type>std::size_t</type>
          <declname>id</declname>
          <defval>invalid_pu_id</defval>
        </param>
        <param>
          <type><ref refid="classhpx_1_1resource_1_1core" kindref="compound">core</ref> *</type>
          <declname>core</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>thread_occupancy</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/resource/partitioner.hpp" line="31" column="1" bodyfile="hpx/runtime/resource/partitioner.hpp" bodystart="31" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1resource_1_1pu_1a2e55d79cc3b4e94e3295e9590197a6bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hpx::resource::pu::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/resource/partitioner.hpp" line="40" column="1" bodyfile="hpx/runtime/resource/partitioner.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhpx_1_1resource_1_1pu_1a65a6facef703935b9f73b467ff50ad3c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classhpx_1_1resource_1_1pu" kindref="compound">pu</ref> &gt;</type>
        <definition>std::vector&lt;pu&gt; hpx::resource::pu::pus_sharing_core</definition>
        <argsstring>()</argsstring>
        <name>pus_sharing_core</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/resource/partitioner.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1resource_1_1pu_1a4151c464568440e038fa3ae5fb020f36" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classhpx_1_1resource_1_1pu" kindref="compound">pu</ref> &gt;</type>
        <definition>std::vector&lt;pu&gt; hpx::resource::pu::pus_sharing_numa_domain</definition>
        <argsstring>()</argsstring>
        <name>pus_sharing_numa_domain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/resource/partitioner.hpp" line="51" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="hpx/runtime/resource/partitioner.hpp" line="27" column="1" bodyfile="hpx/runtime/resource/partitioner.hpp" bodystart="26" bodyend="64"/>
    <listofallmembers>
      <member refid="classhpx_1_1resource_1_1pu_1af764561c544bacc1b90b526ee8d3c708" prot="private" virt="non-virtual"><scope>hpx::resource::pu</scope><name>core</name></member>
      <member refid="classhpx_1_1resource_1_1pu_1a60cce22f6aa567e2b4a5ed0be8fe4595" prot="private" virt="non-virtual"><scope>hpx::resource::pu</scope><name>core_</name></member>
      <member refid="classhpx_1_1resource_1_1pu_1a2e55d79cc3b4e94e3295e9590197a6bf" prot="public" virt="non-virtual"><scope>hpx::resource::pu</scope><name>id</name></member>
      <member refid="classhpx_1_1resource_1_1pu_1aef608faedbbedb5363ce8b2fa3459902" prot="private" virt="non-virtual"><scope>hpx::resource::pu</scope><name>id_</name></member>
      <member refid="classhpx_1_1resource_1_1pu_1aea1c75ef951ef3603fb488d78f23d19a" prot="private" virt="non-virtual"><scope>hpx::resource::pu</scope><name>invalid_pu_id</name></member>
      <member refid="classhpx_1_1resource_1_1pu_1a2cd848189ba1a47ca3c3150ad45e974c" prot="private" virt="non-virtual"><scope>hpx::resource::pu</scope><name>numa_domain</name></member>
      <member refid="classhpx_1_1resource_1_1pu_1a537ffb359aa977fbdb2f42f3515fc8bf" prot="public" virt="non-virtual"><scope>hpx::resource::pu</scope><name>pu</name></member>
      <member refid="classhpx_1_1resource_1_1pu_1a65a6facef703935b9f73b467ff50ad3c" prot="private" virt="non-virtual"><scope>hpx::resource::pu</scope><name>pus_sharing_core</name></member>
      <member refid="classhpx_1_1resource_1_1pu_1a4151c464568440e038fa3ae5fb020f36" prot="private" virt="non-virtual"><scope>hpx::resource::pu</scope><name>pus_sharing_numa_domain</name></member>
      <member refid="classhpx_1_1resource_1_1pu_1ab803fb8ed0c174879646f06d4150e0f1" prot="private" virt="non-virtual"><scope>hpx::resource::pu</scope><name>thread_occupancy_</name></member>
      <member refid="classhpx_1_1resource_1_1pu_1a857b41b2c93d17256d46632ba31362ea" prot="private" virt="non-virtual"><scope>hpx::resource::pu</scope><name>thread_occupancy_count_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
