<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="parallel__executor_8hpp" kind="file" language="C++">
    <compoundname>parallel_executor.hpp</compoundname>
    <includes local="no">hpx/config.hpp</includes>
    <includes local="no">hpx/async_launch_policy_dispatch.hpp</includes>
    <includes local="no">hpx/lcos/future.hpp</includes>
    <includes local="no">hpx/lcos/when_all_fwd.hpp</includes>
    <includes local="no">hpx/parallel/algorithms/detail/predicates.hpp</includes>
    <includes local="no">hpx/parallel/executors/post_policy_dispatch.hpp</includes>
    <includes refid="static__chunk__size_8hpp" local="no">hpx/parallel/executors/static_chunk_size.hpp</includes>
    <includes refid="get__worker__thread__num_8hpp" local="no">hpx/runtime/get_worker_thread_num.hpp</includes>
    <includes refid="launch__policy_8hpp" local="no">hpx/runtime/launch_policy.hpp</includes>
    <includes local="no">hpx/runtime/serialization/serialize.hpp</includes>
    <includes refid="thread__helpers_8hpp" local="no">hpx/runtime/threads/thread_helpers.hpp</includes>
    <includes local="no">hpx/traits/future_traits.hpp</includes>
    <includes local="no">hpx/traits/is_executor.hpp</includes>
    <includes local="no">hpx/util/assert.hpp</includes>
    <includes local="no">hpx/util/bind.hpp</includes>
    <includes local="no">hpx/util/range.hpp</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">functional</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includedby refid="execution__policy_8hpp" local="no">hpx/parallel/execution_policy.hpp</includedby>
    <incdepgraph>
      <node id="7895">
        <label>atomic</label>
      </node>
      <node id="7903">
        <label>functional</label>
      </node>
      <node id="7892">
        <label>hpx/util/register_locks.hpp</label>
      </node>
      <node id="7852">
        <label>hpx/parallel/executors/post_policy_dispatch.hpp</label>
      </node>
      <node id="7893">
        <label>hpx/util/steady_clock.hpp</label>
      </node>
      <node id="7877">
        <label>cstdint</label>
      </node>
      <node id="7865">
        <label>hpx/throw_exception.hpp</label>
        <link refid="throw__exception_8hpp"/>
        <childnode refid="7847" relation="include">
        </childnode>
        <childnode refid="7861" relation="include">
        </childnode>
        <childnode refid="7864" relation="include">
        </childnode>
        <childnode refid="7866" relation="include">
        </childnode>
        <childnode refid="7867" relation="include">
        </childnode>
        <childnode refid="7868" relation="include">
        </childnode>
        <childnode refid="7869" relation="include">
        </childnode>
        <childnode refid="7862" relation="include">
        </childnode>
        <childnode refid="7870" relation="include">
        </childnode>
        <childnode refid="7863" relation="include">
        </childnode>
        <childnode refid="7871" relation="include">
        </childnode>
        <childnode refid="7872" relation="include">
        </childnode>
      </node>
      <node id="7884">
        <label>hpx/runtime/threads/policies/scheduler_mode.hpp</label>
        <link refid="scheduler__mode_8hpp_source"/>
      </node>
      <node id="7889">
        <label>hpx/util/function.hpp</label>
      </node>
      <node id="7864">
        <label>hpx/exception_fwd.hpp</label>
        <link refid="exception__fwd_8hpp"/>
        <childnode refid="7847" relation="include">
        </childnode>
        <childnode refid="7861" relation="include">
        </childnode>
        <childnode refid="7865" relation="include">
        </childnode>
      </node>
      <node id="7873">
        <label>stdexcept</label>
      </node>
      <node id="7874">
        <label>hpx/runtime/launch_policy.hpp</label>
        <link refid="launch__policy_8hpp"/>
        <childnode refid="7847" relation="include">
        </childnode>
        <childnode refid="7875" relation="include">
        </childnode>
        <childnode refid="7878" relation="include">
        </childnode>
        <childnode refid="7858" relation="include">
        </childnode>
        <childnode refid="7879" relation="include">
        </childnode>
      </node>
      <node id="7863">
        <label>string</label>
      </node>
      <node id="7868">
        <label>hpx/util/detail/pp/nargs.hpp</label>
      </node>
      <node id="7880">
        <label>hpx/runtime/threads/thread_helpers.hpp</label>
        <link refid="thread__helpers_8hpp_source"/>
        <childnode refid="7847" relation="include">
        </childnode>
        <childnode refid="7864" relation="include">
        </childnode>
        <childnode refid="7881" relation="include">
        </childnode>
        <childnode refid="7882" relation="include">
        </childnode>
        <childnode refid="7883" relation="include">
        </childnode>
        <childnode refid="7884" relation="include">
        </childnode>
        <childnode refid="7885" relation="include">
        </childnode>
        <childnode refid="7875" relation="include">
        </childnode>
        <childnode refid="7888" relation="include">
        </childnode>
        <childnode refid="7890" relation="include">
        </childnode>
        <childnode refid="7892" relation="include">
        </childnode>
        <childnode refid="7893" relation="include">
        </childnode>
        <childnode refid="7894" relation="include">
        </childnode>
        <childnode refid="7895" relation="include">
        </childnode>
        <childnode refid="7896" relation="include">
        </childnode>
        <childnode refid="7857" relation="include">
        </childnode>
        <childnode refid="7877" relation="include">
        </childnode>
        <childnode refid="7858" relation="include">
        </childnode>
        <childnode refid="7879" relation="include">
        </childnode>
      </node>
      <node id="7861">
        <label>hpx/error.hpp</label>
        <link refid="error_8hpp"/>
        <childnode refid="7847" relation="include">
        </childnode>
        <childnode refid="7862" relation="include">
        </childnode>
        <childnode refid="7863" relation="include">
        </childnode>
      </node>
      <node id="7871">
        <label>hpx/config/warnings_prefix.hpp</label>
      </node>
      <node id="7847">
        <label>hpx/config.hpp</label>
      </node>
      <node id="7870">
        <label>exception</label>
      </node>
      <node id="7846">
        <label>hpx/parallel/executors/parallel_executor.hpp</label>
        <link refid="parallel__executor_8hpp"/>
        <childnode refid="7847" relation="include">
        </childnode>
        <childnode refid="7848" relation="include">
        </childnode>
        <childnode refid="7849" relation="include">
        </childnode>
        <childnode refid="7850" relation="include">
        </childnode>
        <childnode refid="7851" relation="include">
        </childnode>
        <childnode refid="7852" relation="include">
        </childnode>
        <childnode refid="7853" relation="include">
        </childnode>
        <childnode refid="7859" relation="include">
        </childnode>
        <childnode refid="7874" relation="include">
        </childnode>
        <childnode refid="7854" relation="include">
        </childnode>
        <childnode refid="7880" relation="include">
        </childnode>
        <childnode refid="7897" relation="include">
        </childnode>
        <childnode refid="7898" relation="include">
        </childnode>
        <childnode refid="7899" relation="include">
        </childnode>
        <childnode refid="7900" relation="include">
        </childnode>
        <childnode refid="7901" relation="include">
        </childnode>
        <childnode refid="7902" relation="include">
        </childnode>
        <childnode refid="7857" relation="include">
        </childnode>
        <childnode refid="7903" relation="include">
        </childnode>
        <childnode refid="7858" relation="include">
        </childnode>
        <childnode refid="7879" relation="include">
        </childnode>
        <childnode refid="7904" relation="include">
        </childnode>
      </node>
      <node id="7888">
        <label>hpx/util_fwd.hpp</label>
      </node>
      <node id="7890">
        <label>hpx/util/unique_function.hpp</label>
      </node>
      <node id="7869">
        <label>boost/current_function.hpp</label>
      </node>
      <node id="7897">
        <label>hpx/traits/future_traits.hpp</label>
      </node>
      <node id="7875">
        <label>hpx/runtime/threads/thread_enums.hpp</label>
        <link refid="thread__enums_8hpp"/>
        <childnode refid="7847" relation="include">
        </childnode>
        <childnode refid="7876" relation="include">
        </childnode>
        <childnode refid="7857" relation="include">
        </childnode>
        <childnode refid="7877" relation="include">
        </childnode>
      </node>
      <node id="7853">
        <label>hpx/parallel/executors/static_chunk_size.hpp</label>
        <link refid="static__chunk__size_8hpp"/>
        <childnode refid="7847" relation="include">
        </childnode>
        <childnode refid="7854" relation="include">
        </childnode>
        <childnode refid="7855" relation="include">
        </childnode>
        <childnode refid="7856" relation="include">
        </childnode>
        <childnode refid="7857" relation="include">
        </childnode>
        <childnode refid="7858" relation="include">
        </childnode>
      </node>
      <node id="7898">
        <label>hpx/traits/is_executor.hpp</label>
      </node>
      <node id="7851">
        <label>hpx/parallel/algorithms/detail/predicates.hpp</label>
      </node>
      <node id="7862">
        <label>boost/system/error_code.hpp</label>
      </node>
      <node id="7904">
        <label>vector</label>
      </node>
      <node id="7887">
        <label>hpx/runtime/threads/thread_id_type.hpp</label>
      </node>
      <node id="7879">
        <label>utility</label>
      </node>
      <node id="7872">
        <label>hpx/config/warnings_suffix.hpp</label>
      </node>
      <node id="7876">
        <label>hpx/runtime/threads/detail/combined_tagged_state.hpp</label>
      </node>
      <node id="7901">
        <label>hpx/util/range.hpp</label>
      </node>
      <node id="7856">
        <label>hpx/parallel/executors/execution_parameters_fwd.hpp</label>
      </node>
      <node id="7850">
        <label>hpx/lcos/when_all_fwd.hpp</label>
      </node>
      <node id="7867">
        <label>hpx/util/detail/pp/expand.hpp</label>
      </node>
      <node id="7857">
        <label>cstddef</label>
      </node>
      <node id="7881">
        <label>hpx/runtime/naming_fwd.hpp</label>
      </node>
      <node id="7896">
        <label>chrono</label>
      </node>
      <node id="7860">
        <label>hpx/error_code.hpp</label>
        <link refid="error__code_8hpp"/>
        <childnode refid="7847" relation="include">
        </childnode>
        <childnode refid="7861" relation="include">
        </childnode>
        <childnode refid="7864" relation="include">
        </childnode>
        <childnode refid="7862" relation="include">
        </childnode>
        <childnode refid="7870" relation="include">
        </childnode>
        <childnode refid="7873" relation="include">
        </childnode>
        <childnode refid="7863" relation="include">
        </childnode>
        <childnode refid="7865" relation="include">
        </childnode>
      </node>
      <node id="7848">
        <label>hpx/async_launch_policy_dispatch.hpp</label>
      </node>
      <node id="7882">
        <label>hpx/runtime/threads_fwd.hpp</label>
      </node>
      <node id="7878">
        <label>hpx/runtime/serialization/serialization_fwd.hpp</label>
      </node>
      <node id="7886">
        <label>hpx/runtime/threads/coroutines/coroutine_fwd.hpp</label>
      </node>
      <node id="7885">
        <label>hpx/runtime/threads/thread_data_fwd.hpp</label>
        <link refid="thread__data__fwd_8hpp"/>
        <childnode refid="7847" relation="include">
        </childnode>
        <childnode refid="7864" relation="include">
        </childnode>
        <childnode refid="7886" relation="include">
        </childnode>
        <childnode refid="7875" relation="include">
        </childnode>
        <childnode refid="7887" relation="include">
        </childnode>
        <childnode refid="7888" relation="include">
        </childnode>
        <childnode refid="7889" relation="include">
        </childnode>
        <childnode refid="7890" relation="include">
        </childnode>
        <childnode refid="7857" relation="include">
        </childnode>
        <childnode refid="7877" relation="include">
        </childnode>
        <childnode refid="7879" relation="include">
        </childnode>
        <childnode refid="7891" relation="include">
        </childnode>
      </node>
      <node id="7849">
        <label>hpx/lcos/future.hpp</label>
      </node>
      <node id="7858">
        <label>type_traits</label>
      </node>
      <node id="7855">
        <label>hpx/traits/is_executor_parameters.hpp</label>
      </node>
      <node id="7902">
        <label>algorithm</label>
      </node>
      <node id="7854">
        <label>hpx/runtime/serialization/serialize.hpp</label>
      </node>
      <node id="7900">
        <label>hpx/util/bind.hpp</label>
      </node>
      <node id="7899">
        <label>hpx/util/assert.hpp</label>
      </node>
      <node id="7859">
        <label>hpx/runtime/get_worker_thread_num.hpp</label>
        <link refid="get__worker__thread__num_8hpp"/>
        <childnode refid="7847" relation="include">
        </childnode>
        <childnode refid="7860" relation="include">
        </childnode>
        <childnode refid="7857" relation="include">
        </childnode>
      </node>
      <node id="7891">
        <label>memory</label>
      </node>
      <node id="7883">
        <label>hpx/runtime/thread_pool_helpers.hpp</label>
      </node>
      <node id="7866">
        <label>hpx/util/detail/pp/cat.hpp</label>
      </node>
      <node id="7894">
        <label>hpx/util/thread_description.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7933">
        <label>hpx/parallel/algorithms/find.hpp</label>
        <link refid="algorithms_2find_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7934" relation="include">
        </childnode>
      </node>
      <node id="7957">
        <label>hpx/parallel/container_algorithms/minmax.hpp</label>
        <link refid="container__algorithms_2minmax_8hpp"/>
      </node>
      <node id="7954">
        <label>hpx/parallel/algorithms/merge.hpp</label>
        <link refid="algorithms_2merge_8hpp_source"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7955" relation="include">
        </childnode>
      </node>
      <node id="7929">
        <label>hpx/parallel/algorithms/equal.hpp</label>
        <link refid="equal_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
      </node>
      <node id="7974">
        <label>hpx/parallel/algorithms/uninitialized_fill.hpp</label>
        <link refid="uninitialized__fill_8hpp"/>
      </node>
      <node id="7922">
        <label>hpx/parallel/algorithms/set_intersection.hpp</label>
        <link refid="set__intersection_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
      </node>
      <node id="7934">
        <label>hpx/parallel/container_algorithms/find.hpp</label>
        <link refid="container__algorithms_2find_8hpp"/>
      </node>
      <node id="7947">
        <label>hpx/parallel/container_algorithms/is_heap.hpp</label>
        <link refid="container__algorithms_2is__heap_8hpp"/>
      </node>
      <node id="7953">
        <label>hpx/parallel/algorithms/is_sorted.hpp</label>
        <link refid="is__sorted_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
      </node>
      <node id="7939">
        <label>hpx/parallel/algorithms/replace.hpp</label>
        <link refid="algorithms_2replace_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7940" relation="include">
        </childnode>
      </node>
      <node id="7950">
        <label>hpx/parallel/algorithms/transform_inclusive_scan.hpp</label>
        <link refid="transform__inclusive__scan_8hpp"/>
        <childnode refid="7951" relation="include">
        </childnode>
      </node>
      <node id="7931">
        <label>hpx/parallel/algorithms/fill.hpp</label>
        <link refid="algorithms_2fill_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7932" relation="include">
        </childnode>
      </node>
      <node id="7968">
        <label>hpx/parallel/algorithms/transform.hpp</label>
        <link refid="algorithms_2transform_8hpp"/>
        <childnode refid="7969" relation="include">
        </childnode>
      </node>
      <node id="7967">
        <label>hpx/parallel/container_algorithms/sort.hpp</label>
        <link refid="container__algorithms_2sort_8hpp"/>
      </node>
      <node id="7962">
        <label>hpx/parallel/algorithms/reduce.hpp</label>
        <link refid="parallel_2algorithms_2reduce_8hpp"/>
      </node>
      <node id="7941">
        <label>hpx/parallel/algorithms/search.hpp</label>
        <link refid="algorithms_2search_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7942" relation="include">
        </childnode>
      </node>
      <node id="7910">
        <label>hpx/parallel/algorithm.hpp</label>
        <link refid="algorithm_8hpp_source"/>
      </node>
      <node id="7959">
        <label>hpx/parallel/algorithms/move.hpp</label>
        <link refid="move_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
      </node>
      <node id="7912">
        <label>hpx/parallel/container_algorithms/all_any_none.hpp</label>
        <link refid="container__algorithms_2all__any__none_8hpp"/>
      </node>
      <node id="7924">
        <label>hpx/parallel/algorithms/set_union.hpp</label>
        <link refid="set__union_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
      </node>
      <node id="7975">
        <label>hpx/parallel/algorithms/uninitialized_move.hpp</label>
        <link refid="uninitialized__move_8hpp"/>
      </node>
      <node id="7955">
        <label>hpx/parallel/container_algorithms/merge.hpp</label>
        <link refid="container__algorithms_2merge_8hpp"/>
      </node>
      <node id="7965">
        <label>hpx/parallel/algorithms/sort.hpp</label>
        <link refid="algorithms_2sort_8hpp_source"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7914" relation="include">
        </childnode>
        <childnode refid="7966" relation="include">
        </childnode>
        <childnode refid="7967" relation="include">
        </childnode>
      </node>
      <node id="7977">
        <label>hpx/parallel/algorithms/unique.hpp</label>
        <link refid="algorithms_2unique_8hpp_source"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7978" relation="include">
        </childnode>
      </node>
      <node id="7958">
        <label>hpx/parallel/algorithms/mismatch.hpp</label>
        <link refid="mismatch_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7938" relation="include">
        </childnode>
      </node>
      <node id="7906">
        <label>hpx/parallel/execution_policy.hpp</label>
        <link refid="execution__policy_8hpp"/>
        <childnode refid="7907" relation="include">
        </childnode>
        <childnode refid="7908" relation="include">
        </childnode>
        <childnode refid="7909" relation="include">
        </childnode>
        <childnode refid="7911" relation="include">
        </childnode>
        <childnode refid="7913" relation="include">
        </childnode>
        <childnode refid="7926" relation="include">
        </childnode>
        <childnode refid="7928" relation="include">
        </childnode>
        <childnode refid="7929" relation="include">
        </childnode>
        <childnode refid="7930" relation="include">
        </childnode>
        <childnode refid="7931" relation="include">
        </childnode>
        <childnode refid="7933" relation="include">
        </childnode>
        <childnode refid="7935" relation="include">
        </childnode>
        <childnode refid="7945" relation="include">
        </childnode>
        <childnode refid="7936" relation="include">
        </childnode>
        <childnode refid="7946" relation="include">
        </childnode>
        <childnode refid="7948" relation="include">
        </childnode>
        <childnode refid="7949" relation="include">
        </childnode>
        <childnode refid="7952" relation="include">
        </childnode>
        <childnode refid="7953" relation="include">
        </childnode>
        <childnode refid="7938" relation="include">
        </childnode>
        <childnode refid="7954" relation="include">
        </childnode>
        <childnode refid="7956" relation="include">
        </childnode>
        <childnode refid="7958" relation="include">
        </childnode>
        <childnode refid="7959" relation="include">
        </childnode>
        <childnode refid="7960" relation="include">
        </childnode>
        <childnode refid="7962" relation="include">
        </childnode>
        <childnode refid="7963" relation="include">
        </childnode>
        <childnode refid="7915" relation="include">
        </childnode>
        <childnode refid="7939" relation="include">
        </childnode>
        <childnode refid="7917" relation="include">
        </childnode>
        <childnode refid="7918" relation="include">
        </childnode>
        <childnode refid="7941" relation="include">
        </childnode>
        <childnode refid="7921" relation="include">
        </childnode>
        <childnode refid="7922" relation="include">
        </childnode>
        <childnode refid="7923" relation="include">
        </childnode>
        <childnode refid="7924" relation="include">
        </childnode>
        <childnode refid="7965" relation="include">
        </childnode>
        <childnode refid="7943" relation="include">
        </childnode>
        <childnode refid="7968" relation="include">
        </childnode>
        <childnode refid="7951" relation="include">
        </childnode>
        <childnode refid="7950" relation="include">
        </childnode>
        <childnode refid="7970" relation="include">
        </childnode>
        <childnode refid="7971" relation="include">
        </childnode>
        <childnode refid="7972" relation="include">
        </childnode>
        <childnode refid="7973" relation="include">
        </childnode>
        <childnode refid="7974" relation="include">
        </childnode>
        <childnode refid="7975" relation="include">
        </childnode>
        <childnode refid="7976" relation="include">
        </childnode>
        <childnode refid="7977" relation="include">
        </childnode>
      </node>
      <node id="7970">
        <label>hpx/parallel/algorithms/transform_reduce.hpp</label>
        <link refid="transform__reduce_8hpp"/>
      </node>
      <node id="7917">
        <label>hpx/parallel/algorithms/reverse.hpp</label>
        <link refid="algorithms_2reverse_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7918" relation="include">
        </childnode>
        <childnode refid="7920" relation="include">
        </childnode>
      </node>
      <node id="7905">
        <label>hpx/parallel/executors/parallel_executor.hpp</label>
        <link refid="parallel__executor_8hpp"/>
        <childnode refid="7906" relation="include">
        </childnode>
      </node>
      <node id="7914">
        <label>hpx/parallel/algorithms/reduce_by_key.hpp</label>
        <link refid="reduce__by__key_8hpp"/>
      </node>
      <node id="7907">
        <label>hpx/parallel/task_block.hpp</label>
        <link refid="task__block_8hpp"/>
      </node>
      <node id="7951">
        <label>hpx/parallel/algorithms/transform_exclusive_scan.hpp</label>
        <link refid="transform__exclusive__scan_8hpp"/>
      </node>
      <node id="7952">
        <label>hpx/parallel/algorithms/is_partitioned.hpp</label>
        <link refid="is__partitioned_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
      </node>
      <node id="7911">
        <label>hpx/parallel/algorithms/all_any_none.hpp</label>
        <link refid="algorithms_2all__any__none_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7912" relation="include">
        </childnode>
      </node>
      <node id="7916">
        <label>hpx/parallel/container_algorithms/remove_copy.hpp</label>
        <link refid="container__algorithms_2remove__copy_8hpp"/>
      </node>
      <node id="7978">
        <label>hpx/parallel/container_algorithms/unique.hpp</label>
        <link refid="container__algorithms_2unique_8hpp"/>
      </node>
      <node id="7919">
        <label>hpx/parallel/container_algorithms/rotate.hpp</label>
        <link refid="container__algorithms_2rotate_8hpp"/>
      </node>
      <node id="7915">
        <label>hpx/parallel/algorithms/remove_copy.hpp</label>
        <link refid="algorithms_2remove__copy_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7916" relation="include">
        </childnode>
      </node>
      <node id="7948">
        <label>hpx/parallel/algorithms/includes.hpp</label>
        <link refid="includes_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
      </node>
      <node id="7920">
        <label>hpx/parallel/container_algorithms/reverse.hpp</label>
        <link refid="container__algorithms_2reverse_8hpp"/>
      </node>
      <node id="7969">
        <label>hpx/parallel/container_algorithms/transform.hpp</label>
        <link refid="container__algorithms_2transform_8hpp"/>
      </node>
      <node id="7936">
        <label>hpx/parallel/algorithms/generate.hpp</label>
        <link refid="algorithms_2generate_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7937" relation="include">
        </childnode>
      </node>
      <node id="7921">
        <label>hpx/parallel/algorithms/set_difference.hpp</label>
        <link refid="set__difference_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
      </node>
      <node id="7943">
        <label>hpx/parallel/algorithms/swap_ranges.hpp</label>
        <link refid="swap__ranges_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
      </node>
      <node id="7938">
        <label>hpx/parallel/algorithms/lexicographical_compare.hpp</label>
        <link refid="lexicographical__compare_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
      </node>
      <node id="7930">
        <label>hpx/parallel/algorithms/exclusive_scan.hpp</label>
        <link refid="exclusive__scan_8hpp"/>
      </node>
      <node id="7935">
        <label>hpx/parallel/algorithms/for_each.hpp</label>
        <link refid="algorithms_2for__each_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7931" relation="include">
        </childnode>
        <childnode refid="7936" relation="include">
        </childnode>
        <childnode refid="7938" relation="include">
        </childnode>
        <childnode refid="7914" relation="include">
        </childnode>
        <childnode refid="7939" relation="include">
        </childnode>
        <childnode refid="7917" relation="include">
        </childnode>
        <childnode refid="7941" relation="include">
        </childnode>
        <childnode refid="7943" relation="include">
        </childnode>
        <childnode refid="7944" relation="include">
        </childnode>
      </node>
      <node id="7918">
        <label>hpx/parallel/algorithms/rotate.hpp</label>
        <link refid="algorithms_2rotate_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7919" relation="include">
        </childnode>
      </node>
      <node id="7964">
        <label>hpx/parallel/container_algorithms/remove.hpp</label>
        <link refid="container__algorithms_2remove_8hpp"/>
      </node>
      <node id="7926">
        <label>hpx/parallel/algorithms/count.hpp</label>
        <link refid="algorithms_2count_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7927" relation="include">
        </childnode>
      </node>
      <node id="7966">
        <label>hpx/parallel/algorithms/sort_by_key.hpp</label>
        <link refid="sort__by__key_8hpp_source"/>
      </node>
      <node id="7956">
        <label>hpx/parallel/algorithms/minmax.hpp</label>
        <link refid="algorithms_2minmax_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7957" relation="include">
        </childnode>
      </node>
      <node id="7928">
        <label>hpx/parallel/algorithms/destroy.hpp</label>
        <link refid="destroy_8hpp"/>
      </node>
      <node id="7949">
        <label>hpx/parallel/algorithms/inclusive_scan.hpp</label>
        <link refid="inclusive__scan_8hpp"/>
        <childnode refid="7930" relation="include">
        </childnode>
        <childnode refid="7914" relation="include">
        </childnode>
        <childnode refid="7950" relation="include">
        </childnode>
      </node>
      <node id="7908">
        <label>hpx/parallel/algorithms/adjacent_difference.hpp</label>
        <link refid="adjacent__difference_8hpp"/>
      </node>
      <node id="7927">
        <label>hpx/parallel/container_algorithms/count.hpp</label>
        <link refid="container__algorithms_2count_8hpp"/>
      </node>
      <node id="7960">
        <label>hpx/parallel/algorithms/partition.hpp</label>
        <link refid="algorithms_2partition_8hpp_source"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7961" relation="include">
        </childnode>
      </node>
      <node id="7937">
        <label>hpx/parallel/container_algorithms/generate.hpp</label>
        <link refid="container__algorithms_2generate_8hpp"/>
      </node>
      <node id="7972">
        <label>hpx/parallel/algorithms/uninitialized_copy.hpp</label>
        <link refid="uninitialized__copy_8hpp"/>
      </node>
      <node id="7971">
        <label>hpx/parallel/algorithms/transform_reduce_binary.hpp</label>
        <link refid="transform__reduce__binary_8hpp"/>
      </node>
      <node id="7973">
        <label>hpx/parallel/algorithms/uninitialized_default_construct.hpp</label>
        <link refid="uninitialized__default__construct_8hpp"/>
      </node>
      <node id="7961">
        <label>hpx/parallel/container_algorithms/partition.hpp</label>
        <link refid="container__algorithms_2partition_8hpp"/>
      </node>
      <node id="7925">
        <label>hpx/parallel/container_algorithms/copy.hpp</label>
        <link refid="container__algorithms_2copy_8hpp"/>
      </node>
      <node id="7945">
        <label>hpx/parallel/algorithms/for_loop.hpp</label>
        <link refid="for__loop_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
      </node>
      <node id="7942">
        <label>hpx/parallel/container_algorithms/search.hpp</label>
        <link refid="container__algorithms_2search_8hpp"/>
      </node>
      <node id="7932">
        <label>hpx/parallel/container_algorithms/fill.hpp</label>
        <link refid="container__algorithms_2fill_8hpp"/>
      </node>
      <node id="7963">
        <label>hpx/parallel/algorithms/remove.hpp</label>
        <link refid="algorithms_2remove_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7964" relation="include">
        </childnode>
      </node>
      <node id="7923">
        <label>hpx/parallel/algorithms/set_symmetric_difference.hpp</label>
        <link refid="set__symmetric__difference_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
      </node>
      <node id="7909">
        <label>hpx/parallel/algorithms/adjacent_find.hpp</label>
        <link refid="adjacent__find_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
      </node>
      <node id="7944">
        <label>hpx/parallel/container_algorithms/for_each.hpp</label>
        <link refid="container__algorithms_2for__each_8hpp"/>
      </node>
      <node id="7940">
        <label>hpx/parallel/container_algorithms/replace.hpp</label>
        <link refid="container__algorithms_2replace_8hpp"/>
      </node>
      <node id="7976">
        <label>hpx/parallel/algorithms/uninitialized_value_construct.hpp</label>
        <link refid="uninitialized__value__construct_8hpp"/>
      </node>
      <node id="7946">
        <label>hpx/parallel/algorithms/is_heap.hpp</label>
        <link refid="algorithms_2is__heap_8hpp_source"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7947" relation="include">
        </childnode>
      </node>
      <node id="7913">
        <label>hpx/parallel/algorithms/copy.hpp</label>
        <link refid="algorithms_2copy_8hpp"/>
        <childnode refid="7910" relation="include">
        </childnode>
        <childnode refid="7914" relation="include">
        </childnode>
        <childnode refid="7915" relation="include">
        </childnode>
        <childnode refid="7917" relation="include">
        </childnode>
        <childnode refid="7918" relation="include">
        </childnode>
        <childnode refid="7921" relation="include">
        </childnode>
        <childnode refid="7922" relation="include">
        </childnode>
        <childnode refid="7923" relation="include">
        </childnode>
        <childnode refid="7924" relation="include">
        </childnode>
        <childnode refid="7925" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor" prot="public">hpx::parallel::execution::parallel_policy_executor</innerclass>
    <innernamespace refid="namespacehpx">hpx</innernamespace>
    <innernamespace refid="namespacehpx_1_1parallel">hpx::parallel</innernamespace>
    <innernamespace refid="namespacehpx_1_1parallel_1_1execution">hpx::parallel::execution</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2007-2017<sp/>Hartmut<sp/>Kaiser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(HPX_PARALLEL_EXECUTORS_PARALLEL_EXECUTOR_MAY_13_2015_1057AM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_PARALLEL_EXECUTORS_PARALLEL_EXECUTOR_MAY_13_2015_1057AM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/config.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/async_launch_policy_dispatch.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/lcos/future.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/lcos/when_all_fwd.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/parallel/algorithms/detail/predicates.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/parallel/executors/post_policy_dispatch.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="static__chunk__size_8hpp" kindref="compound">hpx/parallel/executors/static_chunk_size.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="get__worker__thread__num_8hpp" kindref="compound">hpx/runtime/get_worker_thread_num.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="launch__policy_8hpp" kindref="compound">hpx/runtime/launch_policy.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/runtime/serialization/serialize.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/runtime/threads/thread_helpers.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/traits/future_traits.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/traits/is_executor.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/util/assert.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/util/bind.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/util/range.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehpx" kindref="compound">hpx</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">parallel<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">execution</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Policy&gt;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_default_policy</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HPX_CONSTEXPR<sp/>Policy<sp/>call()</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Policy{};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">get_default_policy&lt;<ref refid="namespacehpx" kindref="compound">hpx</ref>::launch&gt;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>HPX_CONSTEXPR<sp/>hpx::launch::async_policy<sp/>call()</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::launch::async_policy{};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Shape,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bulk_function_result;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Policy&gt;</highlight></codeline>
<codeline lineno="71" refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor" kindref="compound">parallel_policy_executor</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75" refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor_1a8de8e041bdfef63e5a0b41e58eec88dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__execution__tag" kindref="compound">parallel_execution_tag</ref><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor_1a8de8e041bdfef63e5a0b41e58eec88dd" kindref="member">execution_category</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor_1a4853e21889c7df310a9566c629d37493" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1static__chunk__size" kindref="compound">static_chunk_size</ref><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor_1a4853e21889c7df310a9566c629d37493" kindref="member">executor_parameters_type</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor_1adc938640f426a571da7ae35314be0d5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HPX_CONSTEXPR<sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor_1adc938640f426a571da7ae35314be0d5b" kindref="member">parallel_policy_executor</ref>(</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Policy<sp/>l<sp/>=<sp/>detail::get_default_policy&lt;Policy&gt;::call(),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>spread<sp/>=<sp/>4,<sp/>std::size_t<sp/>tasks<sp/>=<sp/>std::size_t(-1))</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>l_(l),<sp/>num_spread_(spread),<sp/>num_tasks_(tasks)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(<ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor" kindref="compound">parallel_policy_executor</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l_<sp/>==<sp/>rhs.l_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_spread_<sp/>==<sp/>rhs.num_spread_<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_tasks_<sp/>==<sp/>rhs.num_tasks_;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(<ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor" kindref="compound">parallel_policy_executor</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>rhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>rhs);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor" kindref="compound">parallel_policy_executor</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>context()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>noexcept</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TwoWayExecutor<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::future&lt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>hpx::util::detail::invoke_deferred_result&lt;F,<sp/>Ts...&gt;::type</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>async_execute(F<sp/>&amp;&amp;<sp/>f,<sp/>Ts<sp/>&amp;&amp;...<sp/>ts)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="115"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::detail::async_launch_policy_dispatch&lt;Policy&gt;::call(</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_,<sp/>std::forward&lt;F&gt;(f),<sp/>std::forward&lt;Ts&gt;(ts)...);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NonBlockingOneWayExecutor<sp/>(adapted)<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>post(F<sp/>&amp;&amp;<sp/>f,<sp/>Ts<sp/>&amp;&amp;...<sp/>ts)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::util::thread_description<sp/>desc(f,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;hpx::parallel::execution::parallel_executor::post&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::post_policy_dispatch&lt;Policy&gt;::call(</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc,<sp/>l_,<sp/>std::forward&lt;F&gt;(f),<sp/>std::forward&lt;Ts&gt;(ts)...);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BulkTwoWayExecutor<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;hpx::future&lt;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::bulk_function_result&lt;F,<sp/>S,<sp/>Ts...&gt;::type</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bulk_async_execute(F<sp/>&amp;&amp;<sp/>f,<sp/>S<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>shape,<sp/>Ts<sp/>&amp;&amp;...<sp/>ts)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="137"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>lazily<sp/>initialize<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::size_t<sp/>global_num_tasks<sp/>=</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::min)(std::size_t(128),<sp/><ref refid="get__os__thread__count_8hpp_1adcb3c8ac96fa1583317926a64a1abd3a" kindref="member">hpx::get_os_thread_count</ref>());</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>num_tasks<sp/>=</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(num_tasks_<sp/>==<sp/>std::size_t(-1))<sp/>?<sp/>global_num_tasks<sp/>:<sp/>num_tasks_;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;hpx::future&lt;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::bulk_function_result&lt;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F,<sp/>S,<sp/>Ts...</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;<sp/>&gt;<sp/>result_type;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_type<sp/>results;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>size<sp/>=<sp/>hpx::util::size(shape);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results.resize(size);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spawn(results,<sp/>0,<sp/>size,<sp/>num_tasks,<sp/>f,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::util::begin(shape),<sp/>ts...).get();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>results;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Result,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>F,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iter,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Ts&gt;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::future&lt;void&gt;<sp/>spawn(std::vector&lt;hpx::future&lt;Result&gt;<sp/>&gt;&amp;<sp/>results,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>base,<sp/>std::size_t<sp/>size,<sp/>std::size_t<sp/>num_tasks,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>func,<sp/>Iter<sp/>it,<sp/>Ts<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;...<sp/>ts)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="168"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>num_tasks)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spawn<sp/>hierarchical<sp/>tasks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>chunk_size<sp/>=<sp/>(size<sp/>+<sp/>num_spread_)<sp/>/<sp/>num_spread_<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunk_size<sp/>=<sp/>(std::max)(chunk_size,<sp/>num_tasks);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;hpx::future&lt;void&gt;<sp/>&gt;<sp/>tasks;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tasks.reserve(num_spread_);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::future&lt;void&gt;<sp/>(<ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor" kindref="compound">parallel_policy_executor</ref>::*spawn_func)(</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;hpx::future&lt;Result&gt;<sp/>&gt;&amp;,<sp/>std::size_t,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t,<sp/>std::size_t,<sp/>F<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;,<sp/>Iter,<sp/>Ts<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;...</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>&amp;parallel_policy_executor::spawn;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(size<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>curr_chunk_size<sp/>=<sp/>(std::min)(chunk_size,<sp/>size);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::future&lt;void&gt;<sp/>f<sp/>=<sp/>async_execute(</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spawn_func,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>std::ref(results),<sp/>base,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curr_chunk_size,<sp/>num_tasks,<sp/>std::ref(func),<sp/>it,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ref(ts)...);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tasks.push_back(std::move(f));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base<sp/>+=<sp/>curr_chunk_size;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>hpx::parallel::v1::detail::next(it,<sp/>curr_chunk_size);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>-=<sp/>curr_chunk_size;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HPX_ASSERT(size<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::lcos::when_all_fwd(std::move(tasks));</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spawn<sp/>all<sp/>tasks<sp/>sequentially</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HPX_ASSERT(base<sp/>+<sp/>size<sp/>&lt;=<sp/>results.size());</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>size;<sp/>++i,<sp/>++it)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>results[base<sp/>+<sp/>i]<sp/>=<sp/>async_execute(func,<sp/>*it,<sp/>ts...);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::make_ready_future();</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">hpx::serialization::access;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Archive&gt;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>serialize(Archive<sp/>&amp;<sp/>ar,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ar<sp/>&amp;<sp/>l_<sp/>&amp;<sp/>num_spread_<sp/>&amp;<sp/>num_tasks_;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Policy<sp/>l_;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>num_spread_;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::size_t<sp/>num_tasks_;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor" kindref="compound">parallel_executor</ref><sp/>=<sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor" kindref="compound">parallel_policy_executor&lt;hpx::launch&gt;</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}}}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehpx" kindref="compound">hpx</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">parallel<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">execution</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Policy&gt;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">is_one_way_executor&lt;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallel::<ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor" kindref="compound">execution::parallel_policy_executor</ref>&lt;Policy&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>std::true_type</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Policy&gt;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">is_two_way_executor&lt;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallel::<ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor" kindref="compound">execution::parallel_policy_executor</ref>&lt;Policy&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>std::true_type</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Policy&gt;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">is_bulk_two_way_executor&lt;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallel::<ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor" kindref="compound">execution::parallel_policy_executor</ref>&lt;Policy&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>std::true_type</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="258"><highlight class="normal">}}}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="hpx/parallel/executors/parallel_executor.hpp"/>
  </compounddef>
</doxygen>
