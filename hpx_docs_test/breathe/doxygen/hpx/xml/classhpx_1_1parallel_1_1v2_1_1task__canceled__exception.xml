<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classhpx_1_1parallel_1_1v2_1_1task__canceled__exception" kind="class" language="C++" prot="public">
    <compoundname>hpx::parallel::v2::task_canceled_exception</compoundname>
    <basecompoundref prot="public" virt="non-virtual">exception</basecompoundref>
    <includes refid="task__block_8hpp" local="no">task_block.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhpx_1_1parallel_1_1v2_1_1task__canceled__exception_1a43819a01d060a4fec05b558537a30db0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::parallel::v2::task_canceled_exception::task_canceled_exception</definition>
        <argsstring>() noexcept</argsstring>
        <name>task_canceled_exception</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/parallel/task_block.hpp" line="65" column="1" bodyfile="hpx/parallel/task_block.hpp" bodystart="65" bodyend="67"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The class <emphasis><ref refid="classhpx_1_1parallel_1_1v2_1_1task__canceled__exception" kindref="compound">task_canceled_exception</ref></emphasis> defines the type of objects thrown by <ref refid="classhpx_1_1parallel_1_1v2_1_1task__block_1a942ef260b49d3bd93b3f63df973b577b" kindref="member">task_block::run</ref> or <ref refid="classhpx_1_1parallel_1_1v2_1_1task__block_1a409b3ac4d95c5f22eaf49a1012d26200" kindref="member">task_block::wait</ref> if they detect that an exception is pending within the current parallel region. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="29">
        <label>hpx::exception</label>
      </node>
      <node id="28">
        <label>hpx::parallel::v2::task_canceled_exception</label>
        <link refid="classhpx_1_1parallel_1_1v2_1_1task__canceled__exception"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="31">
        <label>hpx::exception</label>
      </node>
      <node id="30">
        <label>hpx::parallel::v2::task_canceled_exception</label>
        <link refid="classhpx_1_1parallel_1_1v2_1_1task__canceled__exception"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="hpx/parallel/task_block.hpp" line="63" column="1" bodyfile="hpx/parallel/task_block.hpp" bodystart="62" bodyend="68"/>
    <listofallmembers>
      <member refid="classhpx_1_1parallel_1_1v2_1_1task__canceled__exception_1a43819a01d060a4fec05b558537a30db0" prot="public" virt="non-virtual"><scope>hpx::parallel::v2::task_canceled_exception</scope><name>task_canceled_exception</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
