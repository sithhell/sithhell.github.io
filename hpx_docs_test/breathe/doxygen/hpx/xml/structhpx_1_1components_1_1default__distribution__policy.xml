<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1components_1_1default__distribution__policy" kind="struct" language="C++" prot="public">
    <compoundname>hpx::components::default_distribution_policy</compoundname>
    <includes refid="default__distribution__policy_8hpp" local="no">default_distribution_policy.hpp</includes>
    <innerclass refid="structhpx_1_1components_1_1default__distribution__policy_1_1async__result" prot="public">hpx::components::default_distribution_policy::async_result</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1components_1_1default__distribution__policy_1a617e682eae476590119fde1c17a00b0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hpx::components::default_distribution_policy::default_distribution_policy</definition>
        <argsstring>()=default</argsstring>
        <name>default_distribution_policy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default-construct a new instance of a <emphasis><ref refid="structhpx_1_1components_1_1default__distribution__policy" kindref="compound">default_distribution_policy</ref></emphasis>. This policy will represent one locality (the local locality). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/components/default_distribution_policy.hpp" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1components_1_1default__distribution__policy_1ae03c7be9b5fa863f55f36dcfeb545e4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhpx_1_1components_1_1default__distribution__policy" kindref="compound">default_distribution_policy</ref></type>
        <definition>default_distribution_policy hpx::components::default_distribution_policy::operator()</definition>
        <argsstring>(std::vector&lt; id_type &gt; const &amp;locs) const</argsstring>
        <name>operator()</name>
        <param>
          <type>std::vector&lt; id_type &gt; const &amp;</type>
          <declname>locs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new <emphasis>default_distribution</emphasis> policy representing the given set of localities.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>locs</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] The list of localities the new instance should represent </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/components/default_distribution_policy.hpp" line="66" column="1" bodyfile="hpx/runtime/components/default_distribution_policy.hpp" bodystart="66" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1components_1_1default__distribution__policy_1a5983c96c2c892d84619896fa07d34173" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhpx_1_1components_1_1default__distribution__policy" kindref="compound">default_distribution_policy</ref></type>
        <definition>default_distribution_policy hpx::components::default_distribution_policy::operator()</definition>
        <argsstring>(std::vector&lt; id_type &gt; &amp;&amp;locs) const</argsstring>
        <name>operator()</name>
        <param>
          <type>std::vector&lt; id_type &gt; &amp;&amp;</type>
          <declname>locs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new <emphasis>default_distribution</emphasis> policy representing the given set of localities.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>locs</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] The list of localities the new instance should represent </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/components/default_distribution_policy.hpp" line="77" column="1" bodyfile="hpx/runtime/components/default_distribution_policy.hpp" bodystart="77" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1components_1_1default__distribution__policy_1a4f231854652e8bd54dfb0efe57c494b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhpx_1_1components_1_1default__distribution__policy" kindref="compound">default_distribution_policy</ref></type>
        <definition>default_distribution_policy hpx::components::default_distribution_policy::operator()</definition>
        <argsstring>(id_type const &amp;loc) const</argsstring>
        <name>operator()</name>
        <param>
          <type>id_type const &amp;</type>
          <declname>loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new <emphasis>default_distribution</emphasis> policy representing the given locality</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>loc</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] The locality the new instance should represent </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/components/default_distribution_policy.hpp" line="88" column="1" bodyfile="hpx/runtime/components/default_distribution_policy.hpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1components_1_1default__distribution__policy_1ab11b5d0604c244769a11589303333ad7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Component</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>hpx::future&lt; hpx::id_type &gt;</type>
        <definition>hpx::future&lt;hpx::id_type&gt; hpx::components::default_distribution_policy::create</definition>
        <argsstring>(Ts &amp;&amp;... vs) const</argsstring>
        <name>create</name>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>vs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create one object on one of the localities associated by this policy instance</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vs</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] The arguments which will be forwarded to the constructor of the new object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function is part of the placement policy implemented by this class</para></simplesect>
<simplesect kind="return"><para>A future holding the global address which represents the newly created object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/components/default_distribution_policy.hpp" line="106" column="1" bodyfile="hpx/runtime/components/default_distribution_policy.hpp" bodystart="106" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1components_1_1default__distribution__policy_1aeb34ed76fb8dcf469dc87414ef37e8b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Component</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>hpx::future&lt; std::vector&lt; bulk_locality_result &gt; &gt;</type>
        <definition>hpx::future&lt;std::vector&lt;bulk_locality_result&gt; &gt; hpx::components::default_distribution_policy::bulk_create</definition>
        <argsstring>(std::size_t count, Ts &amp;&amp;... vs) const</argsstring>
        <name>bulk_create</name>
        <param>
          <type>std::size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>vs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create multiple objects on the localities associated by this policy instance</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] The number of objects to create </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vs</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] The arguments which will be forwarded to the constructors of the new objects.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This function is part of the placement policy implemented by this class</para></simplesect>
<simplesect kind="return"><para>A future holding the list of global addresses which represent the newly created objects </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/components/default_distribution_policy.hpp" line="148" column="1" bodyfile="hpx/runtime/components/default_distribution_policy.hpp" bodystart="148" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1components_1_1default__distribution__policy_1a1c4a8e01a94c0a01d97f2179d866f1d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Action</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structhpx_1_1components_1_1default__distribution__policy_1_1async__result" kindref="compound">async_result</ref>&lt; Action &gt;::type</type>
        <definition>async_result&lt;Action&gt;::type hpx::components::default_distribution_policy::async</definition>
        <argsstring>(launch policy, Ts &amp;&amp;... vs) const</argsstring>
        <name>async</name>
        <param>
          <type><ref refid="structhpx_1_1launch" kindref="compound">launch</ref></type>
          <declname>policy</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>vs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/components/default_distribution_policy.hpp" line="215" column="1" bodyfile="hpx/runtime/components/default_distribution_policy.hpp" bodystart="215" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1components_1_1default__distribution__policy_1a196aa3411cbd7df348f233afa1f1a2a0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Action</type>
          </param>
          <param>
            <type>typename Callback</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structhpx_1_1components_1_1default__distribution__policy_1_1async__result" kindref="compound">async_result</ref>&lt; Action &gt;::type</type>
        <definition>async_result&lt;Action&gt;::type hpx::components::default_distribution_policy::async_cb</definition>
        <argsstring>(launch policy, Callback &amp;&amp;cb, Ts &amp;&amp;... vs) const</argsstring>
        <name>async_cb</name>
        <param>
          <type><ref refid="structhpx_1_1launch" kindref="compound">launch</ref></type>
          <declname>policy</declname>
        </param>
        <param>
          <type>Callback &amp;&amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>vs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is part of the invocation policy implemented by this class </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/components/default_distribution_policy.hpp" line="226" column="1" bodyfile="hpx/runtime/components/default_distribution_policy.hpp" bodystart="226" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1components_1_1default__distribution__policy_1a9e5a0ced175d31bedd9490f06848629d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Action</type>
          </param>
          <param>
            <type>typename Continuation</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool hpx::components::default_distribution_policy::apply</definition>
        <argsstring>(Continuation &amp;&amp;c, threads::thread_priority priority, Ts &amp;&amp;... vs) const</argsstring>
        <name>apply</name>
        <param>
          <type>Continuation &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="thread__enums_8hpp_1ac9ea71df1a6e7c564da9d1724432790a" kindref="member">threads::thread_priority</ref></type>
          <declname>priority</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>vs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is part of the invocation policy implemented by this class </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/components/default_distribution_policy.hpp" line="237" column="1" bodyfile="hpx/runtime/components/default_distribution_policy.hpp" bodystart="237" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1components_1_1default__distribution__policy_1a9e2e42821235d3a79d1e4855cc13a444" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Action</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool hpx::components::default_distribution_policy::apply</definition>
        <argsstring>(threads::thread_priority priority, Ts &amp;&amp;... vs) const</argsstring>
        <name>apply</name>
        <param>
          <type><ref refid="thread__enums_8hpp_1ac9ea71df1a6e7c564da9d1724432790a" kindref="member">threads::thread_priority</ref></type>
          <declname>priority</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>vs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/components/default_distribution_policy.hpp" line="245" column="1" bodyfile="hpx/runtime/components/default_distribution_policy.hpp" bodystart="245" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1components_1_1default__distribution__policy_1afb58fef290f0b7807c7d085c4078b318" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Action</type>
          </param>
          <param>
            <type>typename Continuation</type>
          </param>
          <param>
            <type>typename Callback</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool hpx::components::default_distribution_policy::apply_cb</definition>
        <argsstring>(Continuation &amp;&amp;c, threads::thread_priority priority, Callback &amp;&amp;cb, Ts &amp;&amp;... vs) const</argsstring>
        <name>apply_cb</name>
        <param>
          <type>Continuation &amp;&amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="thread__enums_8hpp_1ac9ea71df1a6e7c564da9d1724432790a" kindref="member">threads::thread_priority</ref></type>
          <declname>priority</declname>
        </param>
        <param>
          <type>Callback &amp;&amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>vs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This function is part of the invocation policy implemented by this class </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/components/default_distribution_policy.hpp" line="257" column="1" bodyfile="hpx/runtime/components/default_distribution_policy.hpp" bodystart="257" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1components_1_1default__distribution__policy_1a63219ebf01ebcd943373d49c1a827896" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Action</type>
          </param>
          <param>
            <type>typename Callback</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool hpx::components::default_distribution_policy::apply_cb</definition>
        <argsstring>(threads::thread_priority priority, Callback &amp;&amp;cb, Ts &amp;&amp;... vs) const</argsstring>
        <name>apply_cb</name>
        <param>
          <type><ref refid="thread__enums_8hpp_1ac9ea71df1a6e7c564da9d1724432790a" kindref="member">threads::thread_priority</ref></type>
          <declname>priority</declname>
        </param>
        <param>
          <type>Callback &amp;&amp;</type>
          <declname>cb</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>vs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/components/default_distribution_policy.hpp" line="266" column="1" bodyfile="hpx/runtime/components/default_distribution_policy.hpp" bodystart="266" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1components_1_1default__distribution__policy_1af90ce3eb6617c2c95a0cedfbf3c2096f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hpx::components::default_distribution_policy::get_num_localities</definition>
        <argsstring>() const</argsstring>
        <name>get_num_localities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of associated localities for this distribution policy</para><para><simplesect kind="note"><para>This function is part of the creation policy implemented by this class </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/components/default_distribution_policy.hpp" line="280" column="1" bodyfile="hpx/runtime/components/default_distribution_policy.hpp" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1components_1_1default__distribution__policy_1a4e1bef382e3d6843ff6dda045595dd4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>hpx::id_type</type>
        <definition>hpx::id_type hpx::components::default_distribution_policy::get_next_target</definition>
        <argsstring>() const</argsstring>
        <name>get_next_target</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the locality which is anticipated to be used for the next async operation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="hpx/runtime/components/default_distribution_policy.hpp" line="287" column="1" bodyfile="hpx/runtime/components/default_distribution_policy.hpp" bodystart="287" bodyend="290"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class specifies the parameters for a simple distribution policy to use for creating (and evenly distributing) a given number of items on a given set of localities. </para>    </detaileddescription>
    <location file="hpx/runtime/components/default_distribution_policy.hpp" line="55" column="1" bodyfile="hpx/runtime/components/default_distribution_policy.hpp" bodystart="54" bodyend="367"/>
    <listofallmembers>
      <member refid="structhpx_1_1components_1_1default__distribution__policy_1a9e5a0ced175d31bedd9490f06848629d" prot="public" virt="non-virtual"><scope>hpx::components::default_distribution_policy</scope><name>apply</name></member>
      <member refid="structhpx_1_1components_1_1default__distribution__policy_1a9e2e42821235d3a79d1e4855cc13a444" prot="public" virt="non-virtual"><scope>hpx::components::default_distribution_policy</scope><name>apply</name></member>
      <member refid="structhpx_1_1components_1_1default__distribution__policy_1afb58fef290f0b7807c7d085c4078b318" prot="public" virt="non-virtual"><scope>hpx::components::default_distribution_policy</scope><name>apply_cb</name></member>
      <member refid="structhpx_1_1components_1_1default__distribution__policy_1a63219ebf01ebcd943373d49c1a827896" prot="public" virt="non-virtual"><scope>hpx::components::default_distribution_policy</scope><name>apply_cb</name></member>
      <member refid="structhpx_1_1components_1_1default__distribution__policy_1a1c4a8e01a94c0a01d97f2179d866f1d1" prot="public" virt="non-virtual"><scope>hpx::components::default_distribution_policy</scope><name>async</name></member>
      <member refid="structhpx_1_1components_1_1default__distribution__policy_1a196aa3411cbd7df348f233afa1f1a2a0" prot="public" virt="non-virtual"><scope>hpx::components::default_distribution_policy</scope><name>async_cb</name></member>
      <member refid="structhpx_1_1components_1_1default__distribution__policy_1aeb34ed76fb8dcf469dc87414ef37e8b0" prot="public" virt="non-virtual"><scope>hpx::components::default_distribution_policy</scope><name>bulk_create</name></member>
      <member refid="structhpx_1_1components_1_1default__distribution__policy_1ab11b5d0604c244769a11589303333ad7" prot="public" virt="non-virtual"><scope>hpx::components::default_distribution_policy</scope><name>create</name></member>
      <member refid="structhpx_1_1components_1_1default__distribution__policy_1a617e682eae476590119fde1c17a00b0f" prot="public" virt="non-virtual"><scope>hpx::components::default_distribution_policy</scope><name>default_distribution_policy</name></member>
      <member refid="structhpx_1_1components_1_1default__distribution__policy_1a4e1bef382e3d6843ff6dda045595dd4e" prot="public" virt="non-virtual"><scope>hpx::components::default_distribution_policy</scope><name>get_next_target</name></member>
      <member refid="structhpx_1_1components_1_1default__distribution__policy_1af90ce3eb6617c2c95a0cedfbf3c2096f" prot="public" virt="non-virtual"><scope>hpx::components::default_distribution_policy</scope><name>get_num_localities</name></member>
      <member refid="structhpx_1_1components_1_1default__distribution__policy_1ae03c7be9b5fa863f55f36dcfeb545e4a" prot="public" virt="non-virtual"><scope>hpx::components::default_distribution_policy</scope><name>operator()</name></member>
      <member refid="structhpx_1_1components_1_1default__distribution__policy_1a5983c96c2c892d84619896fa07d34173" prot="public" virt="non-virtual"><scope>hpx::components::default_distribution_policy</scope><name>operator()</name></member>
      <member refid="structhpx_1_1components_1_1default__distribution__policy_1a4f231854652e8bd54dfb0efe57c494b5" prot="public" virt="non-virtual"><scope>hpx::components::default_distribution_policy</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
