<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="is__executor__parameters_8hpp" kind="file" language="C++">
    <compoundname>is_executor_parameters.hpp</compoundname>
    <includes local="no">hpx/config.hpp</includes>
    <includes local="no">hpx/type_support/always_void.hpp</includes>
    <includes local="no">functional</includes>
    <includes local="no">type_traits</includes>
    <includes local="no">boost/ref.hpp</includes>
    <includedby refid="execution__policy_8hpp" local="no">libs/execution/include/hpx/parallel/execution_policy.hpp</includedby>
    <includedby refid="execution__parameters_8hpp" local="no">libs/execution/include/hpx/parallel/executors/execution_parameters.hpp</includedby>
    <includedby refid="persistent__auto__chunk__size_8hpp" local="no">libs/execution/include/hpx/parallel/executors/persistent_auto_chunk_size.hpp</includedby>
    <includedby refid="auto__chunk__size_8hpp" local="no">libs/execution/include/hpx/parallel/executors/auto_chunk_size.hpp</includedby>
    <includedby refid="guided__chunk__size_8hpp" local="no">libs/execution/include/hpx/parallel/executors/guided_chunk_size.hpp</includedby>
    <includedby refid="static__chunk__size_8hpp" local="no">libs/execution/include/hpx/parallel/executors/static_chunk_size.hpp</includedby>
    <includedby refid="dynamic__chunk__size_8hpp" local="no">libs/execution/include/hpx/parallel/executors/dynamic_chunk_size.hpp</includedby>
    <incdepgraph>
      <node id="2193">
        <label>hpx/type_support/always_void.hpp</label>
      </node>
      <node id="2194">
        <label>functional</label>
      </node>
      <node id="2192">
        <label>hpx/config.hpp</label>
      </node>
      <node id="2191">
        <label>libs/execution/include/hpx/traits/is_executor_parameters.hpp</label>
        <link refid="is__executor__parameters_8hpp"/>
        <childnode refid="2192" relation="include">
        </childnode>
        <childnode refid="2193" relation="include">
        </childnode>
        <childnode refid="2194" relation="include">
        </childnode>
        <childnode refid="2195" relation="include">
        </childnode>
        <childnode refid="2196" relation="include">
        </childnode>
      </node>
      <node id="2196">
        <label>boost/ref.hpp</label>
      </node>
      <node id="2195">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2217">
        <label>libs/execution/include/hpx/parallel/executors/parallel_executor.hpp</label>
        <link refid="parallel__executor_8hpp"/>
        <childnode refid="2198" relation="include">
        </childnode>
        <childnode refid="2200" relation="include">
        </childnode>
        <childnode refid="2199" relation="include">
        </childnode>
      </node>
      <node id="2220">
        <label>libs/execution/include/hpx/parallel/executors/dynamic_chunk_size.hpp</label>
        <link refid="dynamic__chunk__size_8hpp"/>
        <childnode refid="2213" relation="include">
        </childnode>
      </node>
      <node id="2212">
        <label>libs/execution/include/hpx/parallel/executors/auto_chunk_size.hpp</label>
        <link refid="auto__chunk__size_8hpp"/>
        <childnode refid="2213" relation="include">
        </childnode>
      </node>
      <node id="2204">
        <label>libs/execution/include/hpx/parallel/executors/thread_timed_execution.hpp</label>
        <link refid="thread__timed__execution_8hpp_source"/>
        <childnode refid="2201" relation="include">
        </childnode>
        <childnode refid="2205" relation="include">
        </childnode>
        <childnode refid="2206" relation="include">
        </childnode>
        <childnode refid="2207" relation="include">
        </childnode>
        <childnode refid="2208" relation="include">
        </childnode>
        <childnode refid="2199" relation="include">
        </childnode>
        <childnode refid="2209" relation="include">
        </childnode>
        <childnode refid="2210" relation="include">
        </childnode>
      </node>
      <node id="2207">
        <label>libs/execution/include/hpx/parallel/executors/this_thread_executors.hpp</label>
        <link refid="this__thread__executors_8hpp_source"/>
        <childnode refid="2200" relation="include">
        </childnode>
      </node>
      <node id="2213">
        <label>libs/execution/include/hpx/parallel/executor_parameters.hpp</label>
        <link refid="executor__parameters_8hpp_source"/>
      </node>
      <node id="2205">
        <label>libs/execution/include/hpx/parallel/executors/thread_pool_attached_executors.hpp</label>
        <link refid="thread__pool__attached__executors_8hpp_source"/>
        <childnode refid="2200" relation="include">
        </childnode>
      </node>
      <node id="2198">
        <label>libs/execution/include/hpx/parallel/execution_policy.hpp</label>
        <link refid="execution__policy_8hpp"/>
        <childnode refid="2199" relation="include">
        </childnode>
      </node>
      <node id="2211">
        <label>libs/execution/include/hpx/parallel/executors/execution_parameters.hpp</label>
        <link refid="execution__parameters_8hpp_source"/>
        <childnode refid="2198" relation="include">
        </childnode>
        <childnode refid="2201" relation="include">
        </childnode>
        <childnode refid="2205" relation="include">
        </childnode>
        <childnode refid="2206" relation="include">
        </childnode>
        <childnode refid="2207" relation="include">
        </childnode>
        <childnode refid="2208" relation="include">
        </childnode>
        <childnode refid="2212" relation="include">
        </childnode>
        <childnode refid="2209" relation="include">
        </childnode>
        <childnode refid="2210" relation="include">
        </childnode>
      </node>
      <node id="2206">
        <label>libs/execution/include/hpx/parallel/executors/thread_pool_executors.hpp</label>
        <link refid="thread__pool__executors_8hpp"/>
        <childnode refid="2200" relation="include">
        </childnode>
      </node>
      <node id="2214">
        <label>libs/execution/include/hpx/parallel/executors/persistent_auto_chunk_size.hpp</label>
        <link refid="persistent__auto__chunk__size_8hpp"/>
        <childnode refid="2213" relation="include">
        </childnode>
      </node>
      <node id="2201">
        <label>libs/execution/include/hpx/parallel/execution.hpp</label>
        <link refid="execution_8hpp_source"/>
      </node>
      <node id="2197">
        <label>libs/execution/include/hpx/traits/is_executor_parameters.hpp</label>
        <link refid="is__executor__parameters_8hpp"/>
        <childnode refid="2198" relation="include">
        </childnode>
        <childnode refid="2211" relation="include">
        </childnode>
        <childnode refid="2214" relation="include">
        </childnode>
        <childnode refid="2212" relation="include">
        </childnode>
        <childnode refid="2215" relation="include">
        </childnode>
        <childnode refid="2216" relation="include">
        </childnode>
        <childnode refid="2220" relation="include">
        </childnode>
      </node>
      <node id="2218">
        <label>libs/execution/include/hpx/parallel/executors/service_executors.hpp</label>
        <link refid="service__executors_8hpp"/>
        <childnode refid="2200" relation="include">
        </childnode>
      </node>
      <node id="2216">
        <label>libs/execution/include/hpx/parallel/executors/static_chunk_size.hpp</label>
        <link refid="static__chunk__size_8hpp"/>
        <childnode refid="2213" relation="include">
        </childnode>
        <childnode refid="2217" relation="include">
        </childnode>
        <childnode refid="2218" relation="include">
        </childnode>
        <childnode refid="2219" relation="include">
        </childnode>
      </node>
      <node id="2200">
        <label>libs/execution/include/hpx/parallel/executors.hpp</label>
        <link refid="executors_8hpp_source"/>
        <childnode refid="2201" relation="include">
        </childnode>
      </node>
      <node id="2208">
        <label>libs/execution/include/hpx/parallel/executors/pool_executor.hpp</label>
        <link refid="pool__executor_8hpp"/>
        <childnode refid="2200" relation="include">
        </childnode>
      </node>
      <node id="2215">
        <label>libs/execution/include/hpx/parallel/executors/guided_chunk_size.hpp</label>
        <link refid="guided__chunk__size_8hpp"/>
        <childnode refid="2213" relation="include">
        </childnode>
      </node>
      <node id="2209">
        <label>libs/execution/include/hpx/parallel/executors/thread_pool_os_executors.hpp</label>
        <link refid="thread__pool__os__executors_8hpp_source"/>
        <childnode refid="2200" relation="include">
        </childnode>
      </node>
      <node id="2199">
        <label>libs/execution/include/hpx/parallel/executors/timed_executors.hpp</label>
        <link refid="timed__executors_8hpp_source"/>
        <childnode refid="2200" relation="include">
        </childnode>
        <childnode refid="2202" relation="include">
        </childnode>
        <childnode refid="2203" relation="include">
        </childnode>
      </node>
      <node id="2210">
        <label>libs/execution/include/hpx/parallel/executors/default_executor.hpp</label>
        <link refid="default__executor_8hpp"/>
        <childnode refid="2200" relation="include">
        </childnode>
      </node>
      <node id="2219">
        <label>libs/execution/include/hpx/parallel/executors/parallel_executor_aggregated.hpp</label>
        <link refid="parallel__executor__aggregated_8hpp"/>
        <childnode refid="2200" relation="include">
        </childnode>
      </node>
      <node id="2203">
        <label>libs/execution/include/hpx/parallel/executors/timed_execution.hpp</label>
        <link refid="timed__execution_8hpp_source"/>
        <childnode refid="2201" relation="include">
        </childnode>
        <childnode refid="2204" relation="include">
        </childnode>
        <childnode refid="2199" relation="include">
        </childnode>
      </node>
      <node id="2202">
        <label>libs/execution/include/hpx/parallel/executors/timed_execution_fwd.hpp</label>
        <link refid="timed__execution__fwd_8hpp_source"/>
        <childnode refid="2203" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structhpx_1_1traits_1_1is__executor__parameters" prot="public">hpx::traits::is_executor_parameters</innerclass>
    <innerclass refid="structhpx_1_1parallel_1_1execution_1_1sequential__executor__parameters" prot="public">hpx::parallel::execution::sequential_executor_parameters</innerclass>
    <innerclass refid="structhpx_1_1parallel_1_1execution_1_1extract__executor__parameters" prot="public">hpx::parallel::execution::extract_executor_parameters</innerclass>
    <innerclass refid="structhpx_1_1parallel_1_1execution_1_1extract__executor__parameters_3_01_executor_00_01typename_3c81d1562817f29ac27398df67262317" prot="public">hpx::parallel::execution::extract_executor_parameters&lt; Executor, typename hpx::util::always_void&lt; typename Executor::executor_parameters_type &gt;::type &gt;</innerclass>
    <innerclass refid="structhpx_1_1parallel_1_1execution_1_1extract__has__variable__chunk__size" prot="public">hpx::parallel::execution::extract_has_variable_chunk_size</innerclass>
    <innerclass refid="structhpx_1_1parallel_1_1execution_1_1extract__has__variable__chunk__size_3_01_parameters_00_01t2bfd913cf8331ca05f4a8e9cceebc77c" prot="public">hpx::parallel::execution::extract_has_variable_chunk_size&lt; Parameters, typename hpx::util::always_void&lt; typename Parameters::has_variable_chunk_size &gt;::type &gt;</innerclass>
    <innerclass refid="structhpx_1_1parallel_1_1execution_1_1is__executor__parameters" prot="public">hpx::parallel::execution::is_executor_parameters</innerclass>
    <innerclass refid="structhpx_1_1traits_1_1is__executor__parameters" prot="public">hpx::traits::is_executor_parameters</innerclass>
    <innernamespace refid="namespacehpx">hpx</innernamespace>
    <innernamespace refid="namespacehpx_1_1traits">hpx::traits</innernamespace>
    <innernamespace refid="namespacehpx_1_1parallel">hpx::parallel</innernamespace>
    <innernamespace refid="namespacehpx_1_1parallel_1_1execution">hpx::parallel::execution</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2014-2017<sp/>Hartmut<sp/>Kaiser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2016<sp/>Marcin<sp/>Copik</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>hpxinspect:nodeprecatedinclude:boost/ref.hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>hpxinspect:nodeprecatedname:boost::reference_wrapper</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(HPX_TRAITS_IS_EXECUTOR_PARAMETERS_MAY_19_2017_0232PM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_TRAITS_IS_EXECUTOR_PARAMETERS_MAY_19_2017_0232PM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/config.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/type_support/always_void.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/ref.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehpx" kindref="compound">hpx</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">traits</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>executor<sp/>framework</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Parameters,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="25" refid="structhpx_1_1traits_1_1is__executor__parameters" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1traits_1_1is__executor__parameters" kindref="compound">is_executor_parameters</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehpx" kindref="compound">hpx</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">parallel<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">execution</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>sequential<sp/>executor<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structhpx_1_1parallel_1_1execution_1_1sequential__executor__parameters" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1execution_1_1sequential__executor__parameters" kindref="compound">sequential_executor_parameters</ref><sp/>{};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>an<sp/>executor<sp/>exposes<sp/>&apos;executor_parameter_type&apos;<sp/>this<sp/>type<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>assumed<sp/>to<sp/>represent<sp/>the<sp/>default<sp/>parameters<sp/>for<sp/>the<sp/>given<sp/>executor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>type.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Executor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="38" refid="structhpx_1_1parallel_1_1execution_1_1extract__executor__parameters" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1execution_1_1extract__executor__parameters" kindref="compound">extract_executor_parameters</ref></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>default,<sp/>assume<sp/>sequential<sp/>execution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1sequential__executor__parameters" kindref="compound">type</ref><sp/>=<sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1sequential__executor__parameters" kindref="compound">sequential_executor_parameters</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Executor&gt;</highlight></codeline>
<codeline lineno="45" refid="structhpx_1_1parallel_1_1execution_1_1extract__executor__parameters_3_01_executor_00_01typename_3c81d1562817f29ac27398df67262317" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1execution_1_1extract__executor__parameters" kindref="compound">extract_executor_parameters</ref>&lt;Executor,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/><ref refid="namespacehpx" kindref="compound">hpx</ref>::util::always_void&lt;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>Executor::executor_parameters_type</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Executor::executor_parameters_type;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>parameters<sp/>type<sp/>exposes<sp/>&apos;has_variable_chunk_size&apos;<sp/>aliased<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::true_type<sp/>it<sp/>is<sp/>assumed<sp/>that<sp/>the<sp/>number<sp/>of<sp/>loop<sp/>iterations<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>combine<sp/>is<sp/>different<sp/>for<sp/>each<sp/>of<sp/>the<sp/>generated<sp/>chunks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Parameters,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable<sp/>=<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="58" refid="structhpx_1_1parallel_1_1execution_1_1extract__has__variable__chunk__size" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1execution_1_1extract__has__variable__chunk__size" kindref="compound">extract_has_variable_chunk_size</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>by<sp/>default,<sp/>assume<sp/>equally<sp/>sized<sp/>chunks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>std::false_type;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Parameters&gt;</highlight></codeline>
<codeline lineno="65" refid="structhpx_1_1parallel_1_1execution_1_1extract__has__variable__chunk__size_3_01_parameters_00_01t2bfd913cf8331ca05f4a8e9cceebc77c" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1execution_1_1extract__has__variable__chunk__size" kindref="compound">extract_has_variable_chunk_size</ref>&lt;Parameters,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/><ref refid="namespacehpx" kindref="compound">hpx</ref>::util::always_void&lt;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>Parameters::has_variable_chunk_size</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;::type&gt;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>type<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Parameters::has_variable_chunk_size;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1execution_1_1is__executor__parameters" kindref="compound">is_executor_parameters</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>std::false_type</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1execution_1_1is__executor__parameters" kindref="compound">is_executor_parameters</ref>&lt;sequential_executor_parameters&gt;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>std::true_type</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1execution_1_1is__executor__parameters" kindref="compound">is_executor_parameters</ref>&lt;<sp/>::std::reference_wrapper&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structhpx_1_1traits_1_1is__executor__parameters" kindref="compound">hpx::traits::is_executor_parameters</ref>&lt;T&gt;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1execution_1_1is__executor__parameters" kindref="compound">is_executor_parameters</ref>&lt;<sp/>::boost::reference_wrapper&lt;T&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structhpx_1_1traits_1_1is__executor__parameters" kindref="compound">hpx::traits::is_executor_parameters</ref>&lt;T&gt;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="100" refid="structhpx_1_1parallel_1_1execution_1_1is__executor__parameters" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1execution_1_1is__executor__parameters" kindref="compound">is_executor_parameters</ref></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>detail::is_executor_parameters&lt;typename<sp/>std::decay&lt;T&gt;::type&gt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>is_executor_parameters_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1is__executor__parameters" kindref="compound">is_executor_parameters&lt;T&gt;::type</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPX_HAVE_CXX17_VARIABLE_TEMPLATES)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_executor_parameters_v<sp/>=<sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1is__executor__parameters" kindref="compound">is_executor_parameters&lt;T&gt;::value</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">}}}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehpx" kindref="compound">hpx</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">traits</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>new<sp/>executor<sp/>framework</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Parameters,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Enable&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1execution_1_1is__executor__parameters" kindref="compound">is_executor_parameters</ref></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1is__executor__parameters" kindref="compound">parallel::execution::is_executor_parameters</ref>&lt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/>std::decay&lt;Parameters&gt;::type&gt;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>is_executor_parameters_t<sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1is__executor__parameters" kindref="compound">is_executor_parameters&lt;T&gt;::type</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HPX_HAVE_CXX17_VARIABLE_TEMPLATES)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_executor_parameters_v<sp/>=<sp/><ref refid="structhpx_1_1parallel_1_1execution_1_1is__executor__parameters" kindref="compound">is_executor_parameters&lt;T&gt;::value</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">}}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libs/execution/include/hpx/traits/is_executor_parameters.hpp"/>
  </compounddef>
</doxygen>
