<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1parallel_1_1execution_1_1timed__executor" kind="struct" language="C++" prot="public">
    <compoundname>hpx::parallel::execution::timed_executor</compoundname>
    <templateparamlist>
      <param>
        <type>typename BaseExecutor</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structhpx_1_1parallel_1_1execution_1_1timed__executor_1aed9af9dbd3e9ca75737309623ff8dc73" prot="public" static="no">
        <type>std::decay&lt; BaseExecutor &gt;::type</type>
        <definition>typedef std::decay&lt;BaseExecutor&gt;::type hpx::parallel::execution::timed_executor&lt; BaseExecutor &gt;::base_executor_type</definition>
        <argsstring></argsstring>
        <name>base_executor_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" line="381" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" bodystart="381" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhpx_1_1parallel_1_1execution_1_1timed__executor_1a830b9baa1288e001d89df4ef5665682a" prot="public" static="no">
        <type><ref refid="structhpx_1_1traits_1_1executor__execution__category" kindref="compound">hpx::traits::executor_execution_category</ref>&lt; base_executor_type &gt;::type</type>
        <definition>typedef hpx::traits::executor_execution_category&lt; base_executor_type &gt;::type hpx::parallel::execution::timed_executor&lt; BaseExecutor &gt;::execution_category</definition>
        <argsstring></argsstring>
        <name>execution_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" line="385" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhpx_1_1parallel_1_1execution_1_1timed__executor_1a5ea572cd3a5982104310cede7d14ec26" prot="public" static="no">
        <type><ref refid="structhpx_1_1traits_1_1executor__parameters__type" kindref="compound">hpx::traits::executor_parameters_type</ref>&lt; base_executor_type &gt;::type</type>
        <definition>typedef hpx::traits::executor_parameters_type&lt; base_executor_type &gt;::type hpx::parallel::execution::timed_executor&lt; BaseExecutor &gt;::parameters_type</definition>
        <argsstring></argsstring>
        <name>parameters_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" line="389" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" bodystart="389" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structhpx_1_1parallel_1_1execution_1_1timed__executor_1a31476f2b4a76cd8ce084fc5eddc0ba2e" prot="public" static="no" mutable="no">
        <type>BaseExecutor</type>
        <definition>BaseExecutor hpx::parallel::execution::timed_executor&lt; BaseExecutor &gt;::exec_</definition>
        <argsstring></argsstring>
        <name>exec_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" line="460" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" bodystart="460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhpx_1_1parallel_1_1execution_1_1timed__executor_1a16c7124fee0274ff08dd87baf1b6b869" prot="public" static="no" mutable="no">
        <type>std::chrono::steady_clock::time_point</type>
        <definition>std::chrono::steady_clock::time_point hpx::parallel::execution::timed_executor&lt; BaseExecutor &gt;::execute_at_</definition>
        <argsstring></argsstring>
        <name>execute_at_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" line="461" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" bodystart="461" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1parallel_1_1execution_1_1timed__executor_1a16de3d7d4ebe20bcafca75474f2592c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::parallel::execution::timed_executor&lt; BaseExecutor &gt;::timed_executor</definition>
        <argsstring>(hpx::util::steady_time_point const &amp;abs_time)</argsstring>
        <name>timed_executor</name>
        <param>
          <type>hpx::util::steady_time_point const &amp;</type>
          <declname>abs_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" line="391" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1parallel_1_1execution_1_1timed__executor_1a78199e46687d397b765c922375f8d607" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::parallel::execution::timed_executor&lt; BaseExecutor &gt;::timed_executor</definition>
        <argsstring>(hpx::util::steady_duration const &amp;rel_time)</argsstring>
        <name>timed_executor</name>
        <param>
          <type>hpx::util::steady_duration const &amp;</type>
          <declname>rel_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" line="396" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" bodystart="396" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1parallel_1_1execution_1_1timed__executor_1ab6159e73b4615b0c5f73f7640dcb639f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Executor</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>hpx::parallel::execution::timed_executor&lt; BaseExecutor &gt;::timed_executor</definition>
        <argsstring>(Executor &amp;&amp;exec, hpx::util::steady_time_point const &amp;abs_time)</argsstring>
        <name>timed_executor</name>
        <param>
          <type>Executor &amp;&amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>hpx::util::steady_time_point const &amp;</type>
          <declname>abs_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" line="402" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" bodystart="402" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1parallel_1_1execution_1_1timed__executor_1ac86bf7c57ec95f257f2ca03478cfae9d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Executor</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>hpx::parallel::execution::timed_executor&lt; BaseExecutor &gt;::timed_executor</definition>
        <argsstring>(Executor &amp;&amp;exec, hpx::util::steady_duration const &amp;rel_time)</argsstring>
        <name>timed_executor</name>
        <param>
          <type>Executor &amp;&amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>hpx::util::steady_duration const &amp;</type>
          <declname>rel_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" line="409" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" bodystart="409" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1parallel_1_1execution_1_1timed__executor_1a9a424a631fd18cfea280f221ecd4a1dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>hpx::util::detail::invoke_deferred_result&lt; F, Ts... &gt;::type</type>
        <definition>hpx::util::detail::invoke_deferred_result&lt;F, Ts...&gt;::type hpx::parallel::execution::timed_executor&lt; BaseExecutor &gt;::sync_execute</definition>
        <argsstring>(F &amp;&amp;f, Ts &amp;&amp;... ts)</argsstring>
        <name>sync_execute</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" line="435" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" bodystart="435" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1parallel_1_1execution_1_1timed__executor_1ac10ebdd936704f6f58c923f829ea910c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>hpx::future&lt; typename hpx::util::detail::invoke_deferred_result&lt; F, Ts... &gt;::type &gt;</type>
        <definition>hpx::future&lt; typename hpx::util::detail::invoke_deferred_result&lt;F, Ts...&gt;::type &gt; hpx::parallel::execution::timed_executor&lt; BaseExecutor &gt;::async_execute</definition>
        <argsstring>(F &amp;&amp;f, Ts &amp;&amp;... ts)</argsstring>
        <name>async_execute</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" line="446" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" bodystart="446" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1parallel_1_1execution_1_1timed__executor_1af71c1859fb67bea60a229e2650fe033b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename F</type>
          </param>
          <param>
            <type>typename ...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void hpx::parallel::execution::timed_executor&lt; BaseExecutor &gt;::post</definition>
        <argsstring>(F &amp;&amp;f, Ts &amp;&amp;... ts)</argsstring>
        <name>post</name>
        <param>
          <type>F &amp;&amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" line="454" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" bodystart="454" bodyend="458"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" line="380" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/timed_executors.hpp" bodystart="379" bodyend="462"/>
    <listofallmembers>
      <member refid="structhpx_1_1parallel_1_1execution_1_1timed__executor_1ac10ebdd936704f6f58c923f829ea910c" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::timed_executor</scope><name>async_execute</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1timed__executor_1aed9af9dbd3e9ca75737309623ff8dc73" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::timed_executor</scope><name>base_executor_type</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1timed__executor_1a31476f2b4a76cd8ce084fc5eddc0ba2e" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::timed_executor</scope><name>exec_</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1timed__executor_1a16c7124fee0274ff08dd87baf1b6b869" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::timed_executor</scope><name>execute_at_</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1timed__executor_1a830b9baa1288e001d89df4ef5665682a" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::timed_executor</scope><name>execution_category</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1timed__executor_1a5ea572cd3a5982104310cede7d14ec26" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::timed_executor</scope><name>parameters_type</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1timed__executor_1af71c1859fb67bea60a229e2650fe033b" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::timed_executor</scope><name>post</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1timed__executor_1a9a424a631fd18cfea280f221ecd4a1dd" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::timed_executor</scope><name>sync_execute</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1timed__executor_1a16de3d7d4ebe20bcafca75474f2592c5" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::timed_executor</scope><name>timed_executor</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1timed__executor_1a78199e46687d397b765c922375f8d607" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::timed_executor</scope><name>timed_executor</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1timed__executor_1ab6159e73b4615b0c5f73f7640dcb639f" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::timed_executor</scope><name>timed_executor</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1timed__executor_1ac86bf7c57ec95f257f2ca03478cfae9d" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::timed_executor</scope><name>timed_executor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
