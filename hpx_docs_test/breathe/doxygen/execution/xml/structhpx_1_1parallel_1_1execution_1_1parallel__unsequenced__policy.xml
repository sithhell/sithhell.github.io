<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy" kind="struct" language="C++" prot="public">
    <compoundname>hpx::parallel::execution::parallel_unsequenced_policy</compoundname>
    <includes refid="execution__policy_8hpp" local="no">execution_policy.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1aa15af9504780fd48d441859ebc7dc9e4" prot="public" static="no">
        <type><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor" kindref="compound">parallel_executor</ref></type>
        <definition>typedef parallel_executor hpx::parallel::execution::parallel_unsequenced_policy::executor_type</definition>
        <argsstring></argsstring>
        <name>executor_type</name>
        <briefdescription>
<para>The type of the executor associated with this execution policy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/execution_policy.hpp" line="1213" column="1" bodyfile="libs/execution/include/hpx/parallel/execution_policy.hpp" bodystart="1213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1a85cef287a4961013a15722a37722a1af" prot="public" static="no">
        <type><ref refid="structhpx_1_1parallel_1_1execution_1_1extract__executor__parameters" kindref="compound">execution::extract_executor_parameters</ref>&lt; <ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1aa15af9504780fd48d441859ebc7dc9e4" kindref="member">executor_type</ref> &gt;::type</type>
        <definition>typedef execution::extract_executor_parameters&lt; executor_type &gt;::type hpx::parallel::execution::parallel_unsequenced_policy::executor_parameters_type</definition>
        <argsstring></argsstring>
        <name>executor_parameters_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The type of the associated executor parameters object which is associated with this execution policy </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/execution_policy.hpp" line="1219" column="1" bodyfile="libs/execution/include/hpx/parallel/execution_policy.hpp" bodystart="1219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1a6889e83333c46f04009b1e5dcd1a73ed" prot="public" static="no">
        <type><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__execution__tag" kindref="compound">parallel_execution_tag</ref></type>
        <definition>typedef parallel_execution_tag hpx::parallel::execution::parallel_unsequenced_policy::execution_category</definition>
        <argsstring></argsstring>
        <name>execution_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The category of the execution agents created by this execution policy. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/execution_policy.hpp" line="1223" column="1" bodyfile="libs/execution/include/hpx/parallel/execution_policy.hpp" bodystart="1223" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1add50dcae00a1300662d4d2f8c52c804f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class hpx::serialization::access</definition>
        <argsstring></argsstring>
        <name>hpx::serialization::access</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/execution_policy.hpp" line="1255" column="1" bodyfile="libs/execution/include/hpx/parallel/execution_policy.hpp" bodystart="1255" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1a472c33af216688944c67f109085520d1" prot="private" static="no" mutable="no">
        <type><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1aa15af9504780fd48d441859ebc7dc9e4" kindref="member">executor_type</ref></type>
        <definition>executor_type hpx::parallel::execution::parallel_unsequenced_policy::exec_</definition>
        <argsstring></argsstring>
        <name>exec_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/execution_policy.hpp" line="1263" column="1" bodyfile="libs/execution/include/hpx/parallel/execution_policy.hpp" bodystart="1263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1aa0ebb5d2d05222fe867f9ef252cb4317" prot="private" static="no" mutable="no">
        <type><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1a85cef287a4961013a15722a37722a1af" kindref="member">executor_parameters_type</ref></type>
        <definition>executor_parameters_type hpx::parallel::execution::parallel_unsequenced_policy::params_</definition>
        <argsstring></argsstring>
        <name>params_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/execution_policy.hpp" line="1264" column="1" bodyfile="libs/execution/include/hpx/parallel/execution_policy.hpp" bodystart="1264" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1a066897c8902814fd7cfd43dd46b082ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy" kindref="compound">parallel_unsequenced_policy</ref></type>
        <definition>parallel_unsequenced_policy hpx::parallel::execution::parallel_unsequenced_policy::operator()</definition>
        <argsstring>(task_policy_tag) const</argsstring>
        <name>operator()</name>
        <param>
          <type>task_policy_tag</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new <ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy" kindref="compound">parallel_unsequenced_policy</ref> from itself</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] Specify that the corresponding asynchronous execution policy should be used</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new <ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy" kindref="compound">parallel_unsequenced_policy</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/execution_policy.hpp" line="1236" column="1" bodyfile="libs/execution/include/hpx/parallel/execution_policy.hpp" bodystart="1236" bodyend="1240"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1aef4a7e977e2c5e9e633fdb40a24a4b2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1aa15af9504780fd48d441859ebc7dc9e4" kindref="member">executor_type</ref> &amp;</type>
        <definition>executor_type&amp; hpx::parallel::execution::parallel_unsequenced_policy::executor</definition>
        <argsstring>()</argsstring>
        <name>executor</name>
        <briefdescription>
<para>Return the associated executor object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/execution_policy.hpp" line="1244" column="1" bodyfile="libs/execution/include/hpx/parallel/execution_policy.hpp" bodystart="1244" bodyend="1244"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1ae0bf3359016c341eed3572f374bd7dbe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1aa15af9504780fd48d441859ebc7dc9e4" kindref="member">executor_type</ref> const  &amp;</type>
        <definition>executor_type const&amp; hpx::parallel::execution::parallel_unsequenced_policy::executor</definition>
        <argsstring>() const</argsstring>
        <name>executor</name>
        <briefdescription>
<para>Return the associated executor object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/execution_policy.hpp" line="1246" column="1" bodyfile="libs/execution/include/hpx/parallel/execution_policy.hpp" bodystart="1246" bodyend="1246"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1ab176ba3cc211bde7b7b3f95e5a90f13f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1a85cef287a4961013a15722a37722a1af" kindref="member">executor_parameters_type</ref> &amp;</type>
        <definition>executor_parameters_type&amp; hpx::parallel::execution::parallel_unsequenced_policy::parameters</definition>
        <argsstring>()</argsstring>
        <name>parameters</name>
        <briefdescription>
<para>Return the associated executor parameters object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/execution_policy.hpp" line="1249" column="1" bodyfile="libs/execution/include/hpx/parallel/execution_policy.hpp" bodystart="1249" bodyend="1249"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1a2b5ee4635d860a848424551133e057be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1a85cef287a4961013a15722a37722a1af" kindref="member">executor_parameters_type</ref> const  &amp;</type>
        <definition>executor_parameters_type const&amp; hpx::parallel::execution::parallel_unsequenced_policy::parameters</definition>
        <argsstring>() const</argsstring>
        <name>parameters</name>
        <briefdescription>
<para>Return the associated executor parameters object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/execution_policy.hpp" line="1251" column="1" bodyfile="libs/execution/include/hpx/parallel/execution_policy.hpp" bodystart="1251" bodyend="1252"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1a69b5e563d3d2a9d874da8ec8f47ae30f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Archive</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void hpx::parallel::execution::parallel_unsequenced_policy::serialize</definition>
        <argsstring>(Archive &amp;ar, const unsigned int version)</argsstring>
        <name>serialize</name>
        <param>
          <type>Archive &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/execution_policy.hpp" line="1258" column="1" bodyfile="libs/execution/include/hpx/parallel/execution_policy.hpp" bodystart="1258" bodyend="1260"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The class <ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy" kindref="compound">parallel_unsequenced_policy</ref> is an execution policy type used as a unique type to disambiguate parallel algorithm overloading and indicate that a parallel algorithm&apos;s execution may be vectorized. </para>    </detaileddescription>
    <location file="libs/execution/include/hpx/parallel/execution_policy.hpp" line="1211" column="1" bodyfile="libs/execution/include/hpx/parallel/execution_policy.hpp" bodystart="1210" bodyend="1265"/>
    <listofallmembers>
      <member refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1a472c33af216688944c67f109085520d1" prot="private" virt="non-virtual"><scope>hpx::parallel::execution::parallel_unsequenced_policy</scope><name>exec_</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1a6889e83333c46f04009b1e5dcd1a73ed" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::parallel_unsequenced_policy</scope><name>execution_category</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1aef4a7e977e2c5e9e633fdb40a24a4b2c" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::parallel_unsequenced_policy</scope><name>executor</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1ae0bf3359016c341eed3572f374bd7dbe" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::parallel_unsequenced_policy</scope><name>executor</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1a85cef287a4961013a15722a37722a1af" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::parallel_unsequenced_policy</scope><name>executor_parameters_type</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1aa15af9504780fd48d441859ebc7dc9e4" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::parallel_unsequenced_policy</scope><name>executor_type</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1add50dcae00a1300662d4d2f8c52c804f" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::parallel_unsequenced_policy</scope><name>hpx::serialization::access</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1a066897c8902814fd7cfd43dd46b082ff" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::parallel_unsequenced_policy</scope><name>operator()</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1ab176ba3cc211bde7b7b3f95e5a90f13f" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::parallel_unsequenced_policy</scope><name>parameters</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1a2b5ee4635d860a848424551133e057be" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::parallel_unsequenced_policy</scope><name>parameters</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1aa0ebb5d2d05222fe867f9ef252cb4317" prot="private" virt="non-virtual"><scope>hpx::parallel::execution::parallel_unsequenced_policy</scope><name>params_</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1parallel__unsequenced__policy_1a69b5e563d3d2a9d874da8ec8f47ae30f" prot="private" virt="non-virtual"><scope>hpx::parallel::execution::parallel_unsequenced_policy</scope><name>serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
