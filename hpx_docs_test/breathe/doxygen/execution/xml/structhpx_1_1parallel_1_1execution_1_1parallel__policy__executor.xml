<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor" kind="struct" language="C++" prot="public">
    <compoundname>hpx::parallel::execution::parallel_policy_executor</compoundname>
    <includes refid="parallel__executor_8hpp" local="no">parallel_executor.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Policy</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor_1a8de8e041bdfef63e5a0b41e58eec88dd" prot="public" static="no">
        <type><ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__execution__tag" kindref="compound">parallel_execution_tag</ref></type>
        <definition>typedef parallel_execution_tag hpx::parallel::execution::parallel_policy_executor&lt; Policy &gt;::execution_category</definition>
        <argsstring></argsstring>
        <name>execution_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Associate the <ref refid="structhpx_1_1parallel_1_1execution_1_1parallel__execution__tag" kindref="compound">parallel_execution_tag</ref> executor tag type as a default with this executor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/executors/parallel_executor.hpp" line="88" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/parallel_executor.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor_1a4853e21889c7df310a9566c629d37493" prot="public" static="no">
        <type><ref refid="structhpx_1_1parallel_1_1execution_1_1static__chunk__size" kindref="compound">static_chunk_size</ref></type>
        <definition>typedef static_chunk_size hpx::parallel::execution::parallel_policy_executor&lt; Policy &gt;::executor_parameters_type</definition>
        <argsstring></argsstring>
        <name>executor_parameters_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Associate the <ref refid="structhpx_1_1parallel_1_1execution_1_1static__chunk__size" kindref="compound">static_chunk_size</ref> executor parameters type as a default with this executor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/executors/parallel_executor.hpp" line="92" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/parallel_executor.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor_1adc938640f426a571da7ae35314be0d5b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::parallel::execution::parallel_policy_executor&lt; Policy &gt;::parallel_policy_executor</definition>
        <argsstring>(Policy l=detail::get_default_policy&lt; Policy &gt;::call(), std::size_t spread=4, std::size_t tasks=std::size_t(-1))</argsstring>
        <name>parallel_policy_executor</name>
        <param>
          <type>Policy</type>
          <declname>l</declname>
          <defval>detail::get_default_policy&lt; Policy &gt;::call()</defval>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>spread</declname>
          <defval>4</defval>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>tasks</declname>
          <defval>std::size_t(-1)</defval>
        </param>
        <briefdescription>
<para>Create a new parallel executor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/execution/include/hpx/parallel/executors/parallel_executor.hpp" line="95" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/parallel_executor.hpp" bodystart="95" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A <emphasis>parallel_executor</emphasis> creates groups of parallel execution agents which execute in threads implicitly created by the executor. This executor prefers continuing with the creating thread first before executing newly created threads.</para><para>This executor conforms to the concepts of a TwoWayExecutor, and a BulkTwoWayExecutor </para>    </detaileddescription>
    <location file="libs/execution/include/hpx/parallel/executors/parallel_executor.hpp" line="85" column="1" bodyfile="libs/execution/include/hpx/parallel/executors/parallel_executor.hpp" bodystart="84" bodyend="322"/>
    <listofallmembers>
      <member refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor_1a8de8e041bdfef63e5a0b41e58eec88dd" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::parallel_policy_executor</scope><name>execution_category</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor_1a4853e21889c7df310a9566c629d37493" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::parallel_policy_executor</scope><name>executor_parameters_type</name></member>
      <member refid="structhpx_1_1parallel_1_1execution_1_1parallel__policy__executor_1adc938640f426a571da7ae35314be0d5b" prot="public" virt="non-virtual"><scope>hpx::parallel::execution::parallel_policy_executor</scope><name>parallel_policy_executor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
