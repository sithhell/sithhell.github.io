<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="compare__projected_8hpp" kind="file" language="C++">
    <compoundname>compare_projected.hpp</compoundname>
    <includes local="no">hpx/config.hpp</includes>
    <includes local="no">hpx/functional/invoke.hpp</includes>
    <includes local="no">utility</includes>
    <includedby refid="algorithms_2merge_8hpp" local="no">libs/algorithms/include/hpx/parallel/algorithms/merge.hpp</includedby>
    <includedby refid="algorithms_2search_8hpp" local="no">libs/algorithms/include/hpx/parallel/algorithms/search.hpp</includedby>
    <includedby refid="algorithms_2minmax_8hpp" local="no">libs/algorithms/include/hpx/parallel/algorithms/minmax.hpp</includedby>
    <includedby refid="algorithms_2sort_8hpp" local="no">libs/algorithms/include/hpx/parallel/algorithms/sort.hpp</includedby>
    <includedby refid="algorithms_2find_8hpp" local="no">libs/algorithms/include/hpx/parallel/algorithms/find.hpp</includedby>
    <includedby refid="algorithms_2unique_8hpp" local="no">libs/algorithms/include/hpx/parallel/algorithms/unique.hpp</includedby>
    <incdepgraph>
      <node id="4612">
        <label>libs/algorithms/include/hpx/parallel/util/compare_projected.hpp</label>
        <link refid="compare__projected_8hpp"/>
        <childnode refid="4613" relation="include">
        </childnode>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4615" relation="include">
        </childnode>
      </node>
      <node id="4613">
        <label>hpx/config.hpp</label>
      </node>
      <node id="4614">
        <label>hpx/functional/invoke.hpp</label>
      </node>
      <node id="4615">
        <label>utility</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4629">
        <label>libs/algorithms/include/hpx/parallel/algorithms/find.hpp</label>
        <link refid="algorithms_2find_8hpp"/>
        <childnode refid="4618" relation="include">
        </childnode>
        <childnode refid="4630" relation="include">
        </childnode>
      </node>
      <node id="4623">
        <label>libs/algorithms/include/hpx/parallel/algorithms/minmax.hpp</label>
        <link refid="algorithms_2minmax_8hpp"/>
        <childnode refid="4618" relation="include">
        </childnode>
        <childnode refid="4624" relation="include">
        </childnode>
      </node>
      <node id="4625">
        <label>libs/algorithms/include/hpx/parallel/algorithms/sort.hpp</label>
        <link refid="algorithms_2sort_8hpp_source"/>
        <childnode refid="4618" relation="include">
        </childnode>
        <childnode refid="4626" relation="include">
        </childnode>
        <childnode refid="4627" relation="include">
        </childnode>
        <childnode refid="4628" relation="include">
        </childnode>
      </node>
      <node id="4627">
        <label>libs/algorithms/include/hpx/parallel/algorithms/reduce_by_key.hpp</label>
        <link refid="reduce__by__key_8hpp"/>
      </node>
      <node id="4618">
        <label>libs/algorithms/include/hpx/parallel/algorithm.hpp</label>
        <link refid="algorithm_8hpp_source"/>
        <childnode refid="4619" relation="include">
        </childnode>
      </node>
      <node id="4624">
        <label>libs/algorithms/include/hpx/parallel/container_algorithms/minmax.hpp</label>
        <link refid="container__algorithms_2minmax_8hpp"/>
        <childnode refid="4619" relation="include">
        </childnode>
      </node>
      <node id="4628">
        <label>libs/algorithms/include/hpx/parallel/algorithms/sort_by_key.hpp</label>
        <link refid="sort__by__key_8hpp_source"/>
      </node>
      <node id="4616">
        <label>libs/algorithms/include/hpx/parallel/util/compare_projected.hpp</label>
        <link refid="compare__projected_8hpp"/>
        <childnode refid="4617" relation="include">
        </childnode>
        <childnode refid="4621" relation="include">
        </childnode>
        <childnode refid="4623" relation="include">
        </childnode>
        <childnode refid="4625" relation="include">
        </childnode>
        <childnode refid="4629" relation="include">
        </childnode>
        <childnode refid="4631" relation="include">
        </childnode>
      </node>
      <node id="4621">
        <label>libs/algorithms/include/hpx/parallel/algorithms/search.hpp</label>
        <link refid="algorithms_2search_8hpp"/>
        <childnode refid="4618" relation="include">
        </childnode>
        <childnode refid="4622" relation="include">
        </childnode>
      </node>
      <node id="4630">
        <label>libs/algorithms/include/hpx/parallel/container_algorithms/find.hpp</label>
        <link refid="container__algorithms_2find_8hpp"/>
        <childnode refid="4619" relation="include">
        </childnode>
      </node>
      <node id="4632">
        <label>libs/algorithms/include/hpx/parallel/container_algorithms/unique.hpp</label>
        <link refid="container__algorithms_2unique_8hpp"/>
        <childnode refid="4619" relation="include">
        </childnode>
      </node>
      <node id="4622">
        <label>libs/algorithms/include/hpx/parallel/container_algorithms/search.hpp</label>
        <link refid="container__algorithms_2search_8hpp"/>
        <childnode refid="4619" relation="include">
        </childnode>
      </node>
      <node id="4617">
        <label>libs/algorithms/include/hpx/parallel/algorithms/merge.hpp</label>
        <link refid="algorithms_2merge_8hpp_source"/>
        <childnode refid="4618" relation="include">
        </childnode>
        <childnode refid="4620" relation="include">
        </childnode>
      </node>
      <node id="4631">
        <label>libs/algorithms/include/hpx/parallel/algorithms/unique.hpp</label>
        <link refid="algorithms_2unique_8hpp_source"/>
        <childnode refid="4618" relation="include">
        </childnode>
        <childnode refid="4632" relation="include">
        </childnode>
      </node>
      <node id="4626">
        <label>libs/algorithms/include/hpx/parallel/container_algorithms/sort.hpp</label>
        <link refid="container__algorithms_2sort_8hpp"/>
        <childnode refid="4619" relation="include">
        </childnode>
      </node>
      <node id="4619">
        <label>libs/algorithms/include/hpx/parallel/container_algorithms.hpp</label>
        <link refid="container__algorithms_8hpp_source"/>
      </node>
      <node id="4620">
        <label>libs/algorithms/include/hpx/parallel/container_algorithms/merge.hpp</label>
        <link refid="container__algorithms_2merge_8hpp"/>
        <childnode refid="4619" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structhpx_1_1parallel_1_1util_1_1compare__projected" prot="public">hpx::parallel::util::compare_projected</innerclass>
    <innerclass refid="structhpx_1_1parallel_1_1util_1_1compare__projected_3_01_compare_00_01_proj_01_4" prot="public">hpx::parallel::util::compare_projected&lt; Compare, Proj &gt;</innerclass>
    <innerclass refid="structhpx_1_1parallel_1_1util_1_1compare__projected_3_01_compare_00_01_proj1_00_01_proj2_01_4" prot="public">hpx::parallel::util::compare_projected&lt; Compare, Proj1, Proj2 &gt;</innerclass>
    <innernamespace refid="namespacehpx">hpx</innernamespace>
    <innernamespace refid="namespacehpx_1_1parallel">hpx::parallel</innernamespace>
    <innernamespace refid="namespacehpx_1_1parallel_1_1util">hpx::parallel::util</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2016-2017<sp/>Hartmut<sp/>Kaiser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2018<sp/>Christopher<sp/>Ogle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(HPX_PARALLEL_UTIL_COMPARE_PROJECTED_JAN_25_2016_1144AM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_PARALLEL_UTIL_COMPARE_PROJECTED_JAN_25_2016_1144AM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/config.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/functional/invoke.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehpx" kindref="compound">hpx</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">parallel<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Compare,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>...<sp/>Proj&gt;</highlight></codeline>
<codeline lineno="19" refid="structhpx_1_1parallel_1_1util_1_1compare__projected" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1util_1_1compare__projected" kindref="compound">compare_projected</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Compare,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj&gt;</highlight></codeline>
<codeline lineno="22" refid="structhpx_1_1parallel_1_1util_1_1compare__projected_3_01_compare_00_01_proj_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1util_1_1compare__projected" kindref="compound">compare_projected</ref>&lt;Compare,<sp/>Proj&gt;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Compare_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj_&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhpx_1_1parallel_1_1util_1_1compare__projected" kindref="compound">compare_projected</ref>(Compare_<sp/>&amp;&amp;<sp/>comp,<sp/>Proj_<sp/>&amp;&amp;<sp/>proj)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>comp_(std::forward&lt;Compare_&gt;(comp)),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj_(std::forward&lt;Proj_&gt;(proj))</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(T1<sp/>&amp;&amp;<sp/>t1,<sp/>T2<sp/>&amp;&amp;<sp/>t2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="32"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::util::invoke(comp_,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::util::invoke(proj_,<sp/>std::forward&lt;T1&gt;(t1)),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::util::invoke(proj_,<sp/>std::forward&lt;T2&gt;(t2)));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compare<sp/>comp_;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proj<sp/>proj_;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Compare,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj2&gt;</highlight></codeline>
<codeline lineno="43" refid="structhpx_1_1parallel_1_1util_1_1compare__projected_3_01_compare_00_01_proj1_00_01_proj2_01_4" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1util_1_1compare__projected" kindref="compound">compare_projected</ref>&lt;Compare,<sp/>Proj1,<sp/>Proj2&gt;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Compare_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj1_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj2_&gt;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhpx_1_1parallel_1_1util_1_1compare__projected" kindref="compound">compare_projected</ref>(Compare_<sp/>&amp;&amp;<sp/>comp,<sp/>Proj1_<sp/>&amp;&amp;<sp/>proj1,<sp/>Proj2_<sp/>&amp;&amp;<sp/>proj2)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>comp_(std::forward&lt;Compare_&gt;(comp)),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj1_(std::forward&lt;Proj1_&gt;(proj1)),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj2_(std::forward&lt;Proj2_&gt;(proj2))</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(T1<sp/>&amp;&amp;<sp/>t1,<sp/>T2<sp/>&amp;&amp;<sp/>t2)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="54"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::util::invoke(comp_,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::util::invoke(proj1_,<sp/>std::forward&lt;T1&gt;(t1)),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::util::invoke(proj2_,<sp/>std::forward&lt;T2&gt;(t2)));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Compare<sp/>comp_;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proj1<sp/>proj1_;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proj2<sp/>proj2_;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}}}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="libs/algorithms/include/hpx/parallel/util/compare_projected.hpp"/>
  </compounddef>
</doxygen>
