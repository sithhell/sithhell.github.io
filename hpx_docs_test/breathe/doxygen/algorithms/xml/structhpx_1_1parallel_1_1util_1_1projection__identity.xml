<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1parallel_1_1util_1_1projection__identity" kind="struct" language="C++" prot="public">
    <compoundname>hpx::parallel::util::projection_identity</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1parallel_1_1util_1_1projection__identity_1af65efd8a5629886dd5086f6b33c1f1de" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>HPX_HOST_DEVICE T &amp;&amp;</type>
        <definition>HPX_HOST_DEVICE T&amp;&amp; hpx::parallel::util::projection_identity::operator()</definition>
        <argsstring>(T &amp;&amp;val) const</argsstring>
        <name>operator()</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/algorithms/include/hpx/parallel/util/projection_identity.hpp" line="20" column="1" bodyfile="libs/algorithms/include/hpx/parallel/util/projection_identity.hpp" bodystart="20" bodyend="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/algorithms/include/hpx/parallel/util/projection_identity.hpp" line="17" column="1" bodyfile="libs/algorithms/include/hpx/parallel/util/projection_identity.hpp" bodystart="16" bodyend="24"/>
    <listofallmembers>
      <member refid="structhpx_1_1parallel_1_1util_1_1projection__identity_1af65efd8a5629886dd5086f6b33c1f1de" prot="public" virt="non-virtual"><scope>hpx::parallel::util::projection_identity</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
