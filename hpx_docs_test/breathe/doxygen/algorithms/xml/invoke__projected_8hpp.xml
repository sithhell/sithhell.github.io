<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="invoke__projected_8hpp" kind="file" language="C++">
    <compoundname>invoke_projected.hpp</compoundname>
    <includes local="no">hpx/config.hpp</includes>
    <includes local="no">hpx/functional/invoke.hpp</includes>
    <includes local="no">hpx/type_support/decay.hpp</includes>
    <includes local="no">utility</includes>
    <includedby refid="algorithms_2all__any__none_8hpp" local="no">libs/algorithms/include/hpx/parallel/algorithms/all_any_none.hpp</includedby>
    <includedby refid="algorithms_2remove_8hpp" local="no">libs/algorithms/include/hpx/parallel/algorithms/remove.hpp</includedby>
    <includedby refid="algorithms_2find_8hpp" local="no">libs/algorithms/include/hpx/parallel/algorithms/find.hpp</includedby>
    <includedby refid="algorithms_2count_8hpp" local="no">libs/algorithms/include/hpx/parallel/algorithms/count.hpp</includedby>
    <includedby refid="algorithms_2partition_8hpp" local="no">libs/algorithms/include/hpx/parallel/algorithms/partition.hpp</includedby>
    <incdepgraph>
      <node id="4698">
        <label>hpx/type_support/decay.hpp</label>
      </node>
      <node id="4696">
        <label>hpx/config.hpp</label>
      </node>
      <node id="4697">
        <label>hpx/functional/invoke.hpp</label>
      </node>
      <node id="4699">
        <label>utility</label>
      </node>
      <node id="4695">
        <label>libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp</label>
        <link refid="invoke__projected_8hpp"/>
        <childnode refid="4696" relation="include">
        </childnode>
        <childnode refid="4697" relation="include">
        </childnode>
        <childnode refid="4698" relation="include">
        </childnode>
        <childnode refid="4699" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4712">
        <label>libs/algorithms/include/hpx/parallel/container_algorithms/partition.hpp</label>
        <link refid="container__algorithms_2partition_8hpp"/>
        <childnode refid="4703" relation="include">
        </childnode>
      </node>
      <node id="4706">
        <label>libs/algorithms/include/hpx/parallel/container_algorithms/remove.hpp</label>
        <link refid="container__algorithms_2remove_8hpp"/>
        <childnode refid="4703" relation="include">
        </childnode>
      </node>
      <node id="4701">
        <label>libs/algorithms/include/hpx/parallel/algorithms/all_any_none.hpp</label>
        <link refid="algorithms_2all__any__none_8hpp"/>
        <childnode refid="4702" relation="include">
        </childnode>
        <childnode refid="4704" relation="include">
        </childnode>
      </node>
      <node id="4709">
        <label>libs/algorithms/include/hpx/parallel/algorithms/count.hpp</label>
        <link refid="algorithms_2count_8hpp"/>
        <childnode refid="4702" relation="include">
        </childnode>
        <childnode refid="4710" relation="include">
        </childnode>
      </node>
      <node id="4707">
        <label>libs/algorithms/include/hpx/parallel/algorithms/find.hpp</label>
        <link refid="algorithms_2find_8hpp"/>
        <childnode refid="4702" relation="include">
        </childnode>
        <childnode refid="4708" relation="include">
        </childnode>
      </node>
      <node id="4702">
        <label>libs/algorithms/include/hpx/parallel/algorithm.hpp</label>
        <link refid="algorithm_8hpp_source"/>
        <childnode refid="4703" relation="include">
        </childnode>
      </node>
      <node id="4705">
        <label>libs/algorithms/include/hpx/parallel/algorithms/remove.hpp</label>
        <link refid="algorithms_2remove_8hpp"/>
        <childnode refid="4702" relation="include">
        </childnode>
        <childnode refid="4706" relation="include">
        </childnode>
      </node>
      <node id="4710">
        <label>libs/algorithms/include/hpx/parallel/container_algorithms/count.hpp</label>
        <link refid="container__algorithms_2count_8hpp"/>
        <childnode refid="4703" relation="include">
        </childnode>
      </node>
      <node id="4708">
        <label>libs/algorithms/include/hpx/parallel/container_algorithms/find.hpp</label>
        <link refid="container__algorithms_2find_8hpp"/>
        <childnode refid="4703" relation="include">
        </childnode>
      </node>
      <node id="4711">
        <label>libs/algorithms/include/hpx/parallel/algorithms/partition.hpp</label>
        <link refid="algorithms_2partition_8hpp_source"/>
        <childnode refid="4702" relation="include">
        </childnode>
        <childnode refid="4712" relation="include">
        </childnode>
      </node>
      <node id="4700">
        <label>libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp</label>
        <link refid="invoke__projected_8hpp"/>
        <childnode refid="4701" relation="include">
        </childnode>
        <childnode refid="4705" relation="include">
        </childnode>
        <childnode refid="4707" relation="include">
        </childnode>
        <childnode refid="4709" relation="include">
        </childnode>
        <childnode refid="4711" relation="include">
        </childnode>
      </node>
      <node id="4703">
        <label>libs/algorithms/include/hpx/parallel/container_algorithms.hpp</label>
        <link refid="container__algorithms_8hpp_source"/>
      </node>
      <node id="4704">
        <label>libs/algorithms/include/hpx/parallel/container_algorithms/all_any_none.hpp</label>
        <link refid="container__algorithms_2all__any__none_8hpp"/>
        <childnode refid="4703" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structhpx_1_1parallel_1_1util_1_1invoke__projected" prot="public">hpx::parallel::util::invoke_projected</innerclass>
    <innernamespace refid="namespacehpx">hpx</innernamespace>
    <innernamespace refid="namespacehpx_1_1parallel">hpx::parallel</innernamespace>
    <innernamespace refid="namespacehpx_1_1parallel_1_1util">hpx::parallel::util</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>Copyright<sp/>(c)<sp/>2016<sp/>Hartmut<sp/>Kaiser</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.<sp/>(See<sp/>accompanying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at<sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(HPX_PARALLEL_UTIL_INVOKE_PROJECTED_SEP_27_2016_0912AM)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HPX_PARALLEL_UTIL_INVOKE_PROJECTED_SEP_27_2016_0912AM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/config.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/functional/invoke.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/type_support/decay.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehpx" kindref="compound">hpx</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">parallel<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj&gt;</highlight></codeline>
<codeline lineno="19" refid="structhpx_1_1parallel_1_1util_1_1invoke__projected" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1parallel_1_1util_1_1invoke__projected" kindref="compound">invoke_projected</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>hpx::util::decay&lt;Pred&gt;::type<sp/>pred_type;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>hpx::util::decay&lt;Proj&gt;::type<sp/>proj_type;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Pred_,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Proj_&gt;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhpx_1_1parallel_1_1util_1_1invoke__projected" kindref="compound">invoke_projected</ref>(Pred_<sp/>&amp;&amp;<sp/>pred,<sp/>Proj_<sp/>&amp;&amp;<sp/>proj)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>pred_(std::forward&lt;Pred_&gt;(pred)),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj_(std::forward&lt;Proj_&gt;(proj))</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>operator()(T<sp/>&amp;&amp;<sp/>t)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-&gt;<sp/><sp/>decltype(</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::util::invoke(std::declval&lt;pred_type&gt;(),</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::util::invoke(std::declval&lt;proj_type&gt;(),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::forward&lt;T&gt;(t)))</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hpx::util::invoke(pred_,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::util::invoke(proj_,<sp/>std::forward&lt;T&gt;(t)));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pred_type<sp/>pred_;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj_type<sp/>proj_;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}}}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp"/>
  </compounddef>
</doxygen>
