<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1parallel_1_1util_1_1compare__projected_3_01_compare_00_01_proj1_00_01_proj2_01_4" kind="struct" language="C++" prot="public">
    <compoundname>hpx::parallel::util::compare_projected&lt; Compare, Proj1, Proj2 &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename Compare</type>
      </param>
      <param>
        <type>typename Proj1</type>
      </param>
      <param>
        <type>typename Proj2</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structhpx_1_1parallel_1_1util_1_1compare__projected_3_01_compare_00_01_proj1_00_01_proj2_01_4_1adadd02bcc8c500d302fa4dd1c1dc1595" prot="public" static="no" mutable="no">
        <type>Compare</type>
        <definition>Compare hpx::parallel::util::compare_projected&lt; Compare, Proj1, Proj2 &gt;::comp_</definition>
        <argsstring></argsstring>
        <name>comp_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/algorithms/include/hpx/parallel/util/compare_projected.hpp" line="60" column="1" bodyfile="libs/algorithms/include/hpx/parallel/util/compare_projected.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhpx_1_1parallel_1_1util_1_1compare__projected_3_01_compare_00_01_proj1_00_01_proj2_01_4_1a715754f636f94fce3865b6af2203eb10" prot="public" static="no" mutable="no">
        <type>Proj1</type>
        <definition>Proj1 hpx::parallel::util::compare_projected&lt; Compare, Proj1, Proj2 &gt;::proj1_</definition>
        <argsstring></argsstring>
        <name>proj1_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/algorithms/include/hpx/parallel/util/compare_projected.hpp" line="61" column="1" bodyfile="libs/algorithms/include/hpx/parallel/util/compare_projected.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhpx_1_1parallel_1_1util_1_1compare__projected_3_01_compare_00_01_proj1_00_01_proj2_01_4_1ae42badcb9da0ea89ce4a87a64e40f551" prot="public" static="no" mutable="no">
        <type>Proj2</type>
        <definition>Proj2 hpx::parallel::util::compare_projected&lt; Compare, Proj1, Proj2 &gt;::proj2_</definition>
        <argsstring></argsstring>
        <name>proj2_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/algorithms/include/hpx/parallel/util/compare_projected.hpp" line="62" column="1" bodyfile="libs/algorithms/include/hpx/parallel/util/compare_projected.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1parallel_1_1util_1_1compare__projected_3_01_compare_00_01_proj1_00_01_proj2_01_4_1aebe9b09e27ef732226989876760d0efb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Compare_</type>
          </param>
          <param>
            <type>typename Proj1_</type>
          </param>
          <param>
            <type>typename Proj2_</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>hpx::parallel::util::compare_projected&lt; Compare, Proj1, Proj2 &gt;::compare_projected</definition>
        <argsstring>(Compare_ &amp;&amp;comp, Proj1_ &amp;&amp;proj1, Proj2_ &amp;&amp;proj2)</argsstring>
        <name>compare_projected</name>
        <param>
          <type>Compare_ &amp;&amp;</type>
          <declname>comp</declname>
        </param>
        <param>
          <type>Proj1_ &amp;&amp;</type>
          <declname>proj1</declname>
        </param>
        <param>
          <type>Proj2_ &amp;&amp;</type>
          <declname>proj2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/algorithms/include/hpx/parallel/util/compare_projected.hpp" line="46" column="1" bodyfile="libs/algorithms/include/hpx/parallel/util/compare_projected.hpp" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1parallel_1_1util_1_1compare__projected_3_01_compare_00_01_proj1_00_01_proj2_01_4_1a03894b975248f0fa26b923a55fe3970b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool hpx::parallel::util::compare_projected&lt; Compare, Proj1, Proj2 &gt;::operator()</definition>
        <argsstring>(T1 &amp;&amp;t1, T2 &amp;&amp;t2) const</argsstring>
        <name>operator()</name>
        <param>
          <type>T1 &amp;&amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T2 &amp;&amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/algorithms/include/hpx/parallel/util/compare_projected.hpp" line="53" column="1" bodyfile="libs/algorithms/include/hpx/parallel/util/compare_projected.hpp" bodystart="53" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/algorithms/include/hpx/parallel/util/compare_projected.hpp" line="44" column="1" bodyfile="libs/algorithms/include/hpx/parallel/util/compare_projected.hpp" bodystart="43" bodyend="63"/>
    <listofallmembers>
      <member refid="structhpx_1_1parallel_1_1util_1_1compare__projected_3_01_compare_00_01_proj1_00_01_proj2_01_4_1adadd02bcc8c500d302fa4dd1c1dc1595" prot="public" virt="non-virtual"><scope>hpx::parallel::util::compare_projected&lt; Compare, Proj1, Proj2 &gt;</scope><name>comp_</name></member>
      <member refid="structhpx_1_1parallel_1_1util_1_1compare__projected_3_01_compare_00_01_proj1_00_01_proj2_01_4_1aebe9b09e27ef732226989876760d0efb" prot="public" virt="non-virtual"><scope>hpx::parallel::util::compare_projected&lt; Compare, Proj1, Proj2 &gt;</scope><name>compare_projected</name></member>
      <member refid="structhpx_1_1parallel_1_1util_1_1compare__projected_3_01_compare_00_01_proj1_00_01_proj2_01_4_1a03894b975248f0fa26b923a55fe3970b" prot="public" virt="non-virtual"><scope>hpx::parallel::util::compare_projected&lt; Compare, Proj1, Proj2 &gt;</scope><name>operator()</name></member>
      <member refid="structhpx_1_1parallel_1_1util_1_1compare__projected_3_01_compare_00_01_proj1_00_01_proj2_01_4_1a715754f636f94fce3865b6af2203eb10" prot="public" virt="non-virtual"><scope>hpx::parallel::util::compare_projected&lt; Compare, Proj1, Proj2 &gt;</scope><name>proj1_</name></member>
      <member refid="structhpx_1_1parallel_1_1util_1_1compare__projected_3_01_compare_00_01_proj1_00_01_proj2_01_4_1ae42badcb9da0ea89ce4a87a64e40f551" prot="public" virt="non-virtual"><scope>hpx::parallel::util::compare_projected&lt; Compare, Proj1, Proj2 &gt;</scope><name>proj2_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
