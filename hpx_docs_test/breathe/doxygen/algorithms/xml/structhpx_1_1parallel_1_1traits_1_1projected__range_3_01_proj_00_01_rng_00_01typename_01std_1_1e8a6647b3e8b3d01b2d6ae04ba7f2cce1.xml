<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1parallel_1_1traits_1_1projected__range_3_01_proj_00_01_rng_00_01typename_01std_1_1e8a6647b3e8b3d01b2d6ae04ba7f2cce1" kind="struct" language="C++" prot="public">
    <compoundname>hpx::parallel::traits::projected_range&lt; Proj, Rng, typename std::enable_if&lt; hpx::traits::is_range&lt; Rng &gt;::value &gt;::type &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>typename Proj</type>
      </param>
      <param>
        <type>typename Rng</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structhpx_1_1parallel_1_1traits_1_1projected__range_3_01_proj_00_01_rng_00_01typename_01std_1_1e8a6647b3e8b3d01b2d6ae04ba7f2cce1_1ac5aac6eb406c5a6802ffba57bbf18eec" prot="public" static="no">
        <type>hpx::util::decay&lt; Proj &gt;::type</type>
        <definition>typedef hpx::util::decay&lt;Proj&gt;::type hpx::parallel::traits::projected_range&lt; Proj, Rng, typename std::enable_if&lt; hpx::traits::is_range&lt; Rng &gt;::value &gt;::type &gt;::projector_type</definition>
        <argsstring></argsstring>
        <name>projector_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/algorithms/include/hpx/parallel/traits/projected_range.hpp" line="57" column="1" bodyfile="libs/algorithms/include/hpx/parallel/traits/projected_range.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhpx_1_1parallel_1_1traits_1_1projected__range_3_01_proj_00_01_rng_00_01typename_01std_1_1e8a6647b3e8b3d01b2d6ae04ba7f2cce1_1a65838fcbf74d893045259c765c779398" prot="public" static="no">
        <type>hpx::traits::range_iterator&lt; Rng &gt;::type</type>
        <definition>typedef hpx::traits::range_iterator&lt;Rng&gt;::type hpx::parallel::traits::projected_range&lt; Proj, Rng, typename std::enable_if&lt; hpx::traits::is_range&lt; Rng &gt;::value &gt;::type &gt;::iterator_type</definition>
        <argsstring></argsstring>
        <name>iterator_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/algorithms/include/hpx/parallel/traits/projected_range.hpp" line="58" column="1" bodyfile="libs/algorithms/include/hpx/parallel/traits/projected_range.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/algorithms/include/hpx/parallel/traits/projected_range.hpp" line="56" column="1" bodyfile="libs/algorithms/include/hpx/parallel/traits/projected_range.hpp" bodystart="54" bodyend="59"/>
    <listofallmembers>
      <member refid="structhpx_1_1parallel_1_1traits_1_1projected__range_3_01_proj_00_01_rng_00_01typename_01std_1_1e8a6647b3e8b3d01b2d6ae04ba7f2cce1_1a65838fcbf74d893045259c765c779398" prot="public" virt="non-virtual"><scope>hpx::parallel::traits::projected_range&lt; Proj, Rng, typename std::enable_if&lt; hpx::traits::is_range&lt; Rng &gt;::value &gt;::type &gt;</scope><name>iterator_type</name></member>
      <member refid="structhpx_1_1parallel_1_1traits_1_1projected__range_3_01_proj_00_01_rng_00_01typename_01std_1_1e8a6647b3e8b3d01b2d6ae04ba7f2cce1_1ac5aac6eb406c5a6802ffba57bbf18eec" prot="public" virt="non-virtual"><scope>hpx::parallel::traits::projected_range&lt; Proj, Rng, typename std::enable_if&lt; hpx::traits::is_range&lt; Rng &gt;::value &gt;::type &gt;</scope><name>projector_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
