<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1parallel_1_1util_1_1invoke__projected" kind="struct" language="C++" prot="public">
    <compoundname>hpx::parallel::util::invoke_projected</compoundname>
    <templateparamlist>
      <param>
        <type>typename Pred</type>
      </param>
      <param>
        <type>typename Proj</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structhpx_1_1parallel_1_1util_1_1invoke__projected_1a3afff39636a2ab1c39ba7d4e5e8fd5f2" prot="public" static="no">
        <type>hpx::util::decay&lt; Pred &gt;::type</type>
        <definition>typedef hpx::util::decay&lt;Pred&gt;::type hpx::parallel::util::invoke_projected&lt; Pred, Proj &gt;::pred_type</definition>
        <argsstring></argsstring>
        <name>pred_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp" line="21" column="1" bodyfile="libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhpx_1_1parallel_1_1util_1_1invoke__projected_1a9193b6ba3a874d0645c9849142cec63f" prot="public" static="no">
        <type>hpx::util::decay&lt; Proj &gt;::type</type>
        <definition>typedef hpx::util::decay&lt;Proj&gt;::type hpx::parallel::util::invoke_projected&lt; Pred, Proj &gt;::proj_type</definition>
        <argsstring></argsstring>
        <name>proj_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp" line="22" column="1" bodyfile="libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structhpx_1_1parallel_1_1util_1_1invoke__projected_1a8ec57e7601806576fe0636f4fc5e5613" prot="public" static="no" mutable="no">
        <type>pred_type</type>
        <definition>pred_type hpx::parallel::util::invoke_projected&lt; Pred, Proj &gt;::pred_</definition>
        <argsstring></argsstring>
        <name>pred_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp" line="42" column="1" bodyfile="libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhpx_1_1parallel_1_1util_1_1invoke__projected_1ade312e8e1f4ae9b3db2a74bd34f2646c" prot="public" static="no" mutable="no">
        <type>proj_type</type>
        <definition>proj_type hpx::parallel::util::invoke_projected&lt; Pred, Proj &gt;::proj_</definition>
        <argsstring></argsstring>
        <name>proj_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp" line="43" column="1" bodyfile="libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1parallel_1_1util_1_1invoke__projected_1af0466bc0f9577b75fe891041adf1963d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Pred_</type>
          </param>
          <param>
            <type>typename Proj_</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>hpx::parallel::util::invoke_projected&lt; Pred, Proj &gt;::invoke_projected</definition>
        <argsstring>(Pred_ &amp;&amp;pred, Proj_ &amp;&amp;proj)</argsstring>
        <name>invoke_projected</name>
        <param>
          <type>Pred_ &amp;&amp;</type>
          <declname>pred</declname>
        </param>
        <param>
          <type>Proj_ &amp;&amp;</type>
          <declname>proj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp" line="25" column="1" bodyfile="libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1parallel_1_1util_1_1invoke__projected_1a7ddda4093b802f4fd01eeaa0c9ff2038" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto hpx::parallel::util::invoke_projected&lt; Pred, Proj &gt;::operator()</definition>
        <argsstring>(T &amp;&amp;t) -&gt; decltype(hpx::util::invoke(std::declval&lt; pred_type &gt;(), hpx::util::invoke(std::declval&lt; proj_type &gt;(), std::forward&lt; T &gt;(t))))</argsstring>
        <name>operator()</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp" line="31" column="1" bodyfile="libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp" bodystart="31" bodyend="40"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp" line="20" column="1" bodyfile="libs/algorithms/include/hpx/parallel/util/invoke_projected.hpp" bodystart="19" bodyend="44"/>
    <listofallmembers>
      <member refid="structhpx_1_1parallel_1_1util_1_1invoke__projected_1af0466bc0f9577b75fe891041adf1963d" prot="public" virt="non-virtual"><scope>hpx::parallel::util::invoke_projected</scope><name>invoke_projected</name></member>
      <member refid="structhpx_1_1parallel_1_1util_1_1invoke__projected_1a7ddda4093b802f4fd01eeaa0c9ff2038" prot="public" virt="non-virtual"><scope>hpx::parallel::util::invoke_projected</scope><name>operator()</name></member>
      <member refid="structhpx_1_1parallel_1_1util_1_1invoke__projected_1a8ec57e7601806576fe0636f4fc5e5613" prot="public" virt="non-virtual"><scope>hpx::parallel::util::invoke_projected</scope><name>pred_</name></member>
      <member refid="structhpx_1_1parallel_1_1util_1_1invoke__projected_1a3afff39636a2ab1c39ba7d4e5e8fd5f2" prot="public" virt="non-virtual"><scope>hpx::parallel::util::invoke_projected</scope><name>pred_type</name></member>
      <member refid="structhpx_1_1parallel_1_1util_1_1invoke__projected_1ade312e8e1f4ae9b3db2a74bd34f2646c" prot="public" virt="non-virtual"><scope>hpx::parallel::util::invoke_projected</scope><name>proj_</name></member>
      <member refid="structhpx_1_1parallel_1_1util_1_1invoke__projected_1a9193b6ba3a874d0645c9849142cec63f" prot="public" virt="non-virtual"><scope>hpx::parallel::util::invoke_projected</scope><name>proj_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
