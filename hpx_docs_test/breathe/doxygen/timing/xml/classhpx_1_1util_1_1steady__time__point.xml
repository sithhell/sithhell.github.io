<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classhpx_1_1util_1_1steady__time__point" kind="class" language="C++" prot="public">
    <compoundname>hpx::util::steady_time_point</compoundname>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classhpx_1_1util_1_1steady__time__point_1a0fed38b92650d4a584a8d926c75c0877" prot="private" static="no">
        <type>steady_clock::time_point</type>
        <definition>typedef steady_clock::time_point hpx::util::steady_time_point::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/timing/include/hpx/timing/steady_clock.hpp" line="22" column="1" bodyfile="libs/timing/include/hpx/timing/steady_clock.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhpx_1_1util_1_1steady__time__point_1a6ee1722e2446c0b249d298959ccf9671" prot="private" static="no" mutable="no">
        <type>value_type</type>
        <definition>value_type hpx::util::steady_time_point::_abs_time</definition>
        <argsstring></argsstring>
        <name>_abs_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/timing/include/hpx/timing/steady_clock.hpp" line="44" column="1" bodyfile="libs/timing/include/hpx/timing/steady_clock.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhpx_1_1util_1_1steady__time__point_1a66fdf9179fbe6153f1f8103045a81caf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::util::steady_time_point::steady_time_point</definition>
        <argsstring>(value_type const &amp;abs_time)</argsstring>
        <name>steady_time_point</name>
        <param>
          <type>value_type const &amp;</type>
          <declname>abs_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/timing/include/hpx/timing/steady_clock.hpp" line="25" column="1" bodyfile="libs/timing/include/hpx/timing/steady_clock.hpp" bodystart="25" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1steady__time__point_1adfaab55e224710f1ff890e141cb687dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Clock</type>
          </param>
          <param>
            <type>typename Duration</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>hpx::util::steady_time_point::steady_time_point</definition>
        <argsstring>(std::chrono::time_point&lt; Clock, Duration &gt; const &amp;abs_time)</argsstring>
        <name>steady_time_point</name>
        <param>
          <type>std::chrono::time_point&lt; Clock, Duration &gt; const &amp;</type>
          <declname>abs_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/timing/include/hpx/timing/steady_clock.hpp" line="31" column="1" bodyfile="libs/timing/include/hpx/timing/steady_clock.hpp" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1steady__time__point_1ab3ac884d51b3f3eeadd4363f76c00f68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>value_type const  &amp;</type>
        <definition>value_type const&amp; hpx::util::steady_time_point::value</definition>
        <argsstring>() const noexcept</argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/timing/include/hpx/timing/steady_clock.hpp" line="38" column="1" bodyfile="libs/timing/include/hpx/timing/steady_clock.hpp" bodystart="38" bodyend="41"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/timing/include/hpx/timing/steady_clock.hpp" line="21" column="1" bodyfile="libs/timing/include/hpx/timing/steady_clock.hpp" bodystart="20" bodyend="45"/>
    <listofallmembers>
      <member refid="classhpx_1_1util_1_1steady__time__point_1a6ee1722e2446c0b249d298959ccf9671" prot="private" virt="non-virtual"><scope>hpx::util::steady_time_point</scope><name>_abs_time</name></member>
      <member refid="classhpx_1_1util_1_1steady__time__point_1a66fdf9179fbe6153f1f8103045a81caf" prot="public" virt="non-virtual"><scope>hpx::util::steady_time_point</scope><name>steady_time_point</name></member>
      <member refid="classhpx_1_1util_1_1steady__time__point_1adfaab55e224710f1ff890e141cb687dc" prot="public" virt="non-virtual"><scope>hpx::util::steady_time_point</scope><name>steady_time_point</name></member>
      <member refid="classhpx_1_1util_1_1steady__time__point_1ab3ac884d51b3f3eeadd4363f76c00f68" prot="public" virt="non-virtual"><scope>hpx::util::steady_time_point</scope><name>value</name></member>
      <member refid="classhpx_1_1util_1_1steady__time__point_1a0fed38b92650d4a584a8d926c75c0877" prot="private" virt="non-virtual"><scope>hpx::util::steady_time_point</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
