<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classhpx_1_1program__options_1_1options__description" kind="class" language="C++" prot="public">
    <compoundname>hpx::program_options::options_description</compoundname>
    <includes refid="options__description_8hpp" local="no">options_description.hpp</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classhpx_1_1program__options_1_1options__description_1a3df9a1972293a469a79103330391bf65" prot="private" static="no">
        <type>std::map&lt; std::string, int &gt;::const_iterator</type>
        <definition>using hpx::program_options::options_description::name2index_iterator =  std::map&lt;std::string, int&gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>name2index_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="295" column="1" bodyfile="libs/program_options/include/hpx/program_options/options_description.hpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhpx_1_1program__options_1_1options__description_1a7d15d9abb8722446b70ba34b816c90c2" prot="private" static="no">
        <type>std::pair&lt; name2index_iterator, name2index_iterator &gt;</type>
        <definition>using hpx::program_options::options_description::approximation_range =  std::pair&lt;name2index_iterator, name2index_iterator&gt;</definition>
        <argsstring></argsstring>
        <name>approximation_range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="296" column="1" bodyfile="libs/program_options/include/hpx/program_options/options_description.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classhpx_1_1program__options_1_1options__description_1a5ef9ed951408f8c3edbd0653fe665fde" prot="public" static="yes" mutable="no">
        <type>const unsigned</type>
        <definition>const unsigned hpx::program_options::options_description::m_default_line_length</definition>
        <argsstring></argsstring>
        <name>m_default_line_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="229" column="1" bodyfile="libs/program_options/include/hpx/program_options/options_description.hpp" bodystart="229" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhpx_1_1program__options_1_1options__description_1a87d2354996100a3b6ab6421d22de6f1f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hpx::program_options::options_description::m_caption</definition>
        <argsstring></argsstring>
        <name>m_caption</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="301" column="1" bodyfile="libs/program_options/include/hpx/program_options/options_description.hpp" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhpx_1_1program__options_1_1options__description_1a2f0b0af9c92ec2d63d576d86210d6021" prot="private" static="no" mutable="no">
        <type>const unsigned</type>
        <definition>const unsigned hpx::program_options::options_description::m_line_length</definition>
        <argsstring></argsstring>
        <name>m_line_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="302" column="1" bodyfile="libs/program_options/include/hpx/program_options/options_description.hpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhpx_1_1program__options_1_1options__description_1afdb76d462ea49cc8e926cdb83b1c4799" prot="private" static="no" mutable="no">
        <type>const unsigned</type>
        <definition>const unsigned hpx::program_options::options_description::m_min_description_length</definition>
        <argsstring></argsstring>
        <name>m_min_description_length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="303" column="1" bodyfile="libs/program_options/include/hpx/program_options/options_description.hpp" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhpx_1_1program__options_1_1options__description_1a73a9597590e2d67e5a73776bf5b26635" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classhpx_1_1program__options_1_1option__description" kindref="compound">option_description</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;option_description&gt; &gt; hpx::program_options::options_description::m_options</definition>
        <argsstring></argsstring>
        <name>m_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="308" column="1" bodyfile="libs/program_options/include/hpx/program_options/options_description.hpp" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhpx_1_1program__options_1_1options__description_1af6057f2aee5724172c3db06dd0f67070" prot="private" static="no" mutable="no">
        <type>std::vector&lt; char &gt;</type>
        <definition>std::vector&lt;char&gt; hpx::program_options::options_description::belong_to_group</definition>
        <argsstring></argsstring>
        <name>belong_to_group</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="313" column="1" bodyfile="libs/program_options/include/hpx/program_options/options_description.hpp" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhpx_1_1program__options_1_1options__description_1afe5c1be934cae44add18615350e40fc3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::shared_ptr&lt; <ref refid="classhpx_1_1program__options_1_1options__description" kindref="compound">options_description</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::shared_ptr&lt;options_description&gt; &gt; hpx::program_options::options_description::groups</definition>
        <argsstring></argsstring>
        <name>groups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="315" column="1" bodyfile="libs/program_options/include/hpx/program_options/options_description.hpp" bodystart="315" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhpx_1_1program__options_1_1options__description_1a16f550a1b1ec547ce943321b45b3d0a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hpx::program_options::options_description::options_description</definition>
        <argsstring>(unsigned line_length=m_default_line_length, unsigned min_description_length=m_default_line_length/2)</argsstring>
        <name>options_description</name>
        <param>
          <type>unsigned</type>
          <declname>line_length</declname>
          <defval>m_default_line_length</defval>
        </param>
        <param>
          <type>unsigned</type>
          <declname>min_description_length</declname>
          <defval>m_default_line_length/2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates the instance. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1options__description_1a351bbfeda7eb25b1d718d88047eee726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hpx::program_options::options_description::options_description</definition>
        <argsstring>(const std::string &amp;caption, unsigned line_length=m_default_line_length, unsigned min_description_length=m_default_line_length/2)</argsstring>
        <name>options_description</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>caption</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>line_length</declname>
          <defval>m_default_line_length</defval>
        </param>
        <param>
          <type>unsigned</type>
          <declname>min_description_length</declname>
          <defval>m_default_line_length/2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates the instance. The &apos;caption&apos; parameter gives the name of this &apos;<ref refid="classhpx_1_1program__options_1_1options__description" kindref="compound">options_description</ref>&apos; instance. Primarily useful for output. The &apos;description_length&apos; specifies the number of columns that should be reserved for the description text; if the option text encroaches into this, then the description will start on the next line. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="241" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1options__description_1a15e11621f42743daabe0f322e7343712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::program_options::options_description::add</definition>
        <argsstring>(std::shared_ptr&lt; option_description &gt; desc)</argsstring>
        <name>add</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classhpx_1_1program__options_1_1option__description" kindref="compound">option_description</ref> &gt;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds new variable description. Throws duplicate_variable_error if either short or long name matches that of already present one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1options__description_1a94ca8c4bb8d3f4751a4ec6c469c00e15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhpx_1_1program__options_1_1options__description" kindref="compound">options_description</ref> &amp;</type>
        <definition>options_description&amp; hpx::program_options::options_description::add</definition>
        <argsstring>(const options_description &amp;desc)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="classhpx_1_1program__options_1_1options__description" kindref="compound">options_description</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a group of option description. This has the same effect as adding all option_descriptions in &apos;desc&apos; individually, except that output operator will show a separate group. Returns *this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1options__description_1a319575a9a101cd1b9aed09615d865b41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned hpx::program_options::options_description::get_option_column_width</definition>
        <argsstring>() const</argsstring>
        <name>get_option_column_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Find the maximum width of the option column, including options in groups. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1options__description_1a0b3b6c58d9442b685dd4b1f34ffa55c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhpx_1_1program__options_1_1options__description__easy__init" kindref="compound">options_description_easy_init</ref></type>
        <definition>options_description_easy_init hpx::program_options::options_description::add_options</definition>
        <argsstring>()</argsstring>
        <name>add_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an object of implementation-defined type suitable for adding options to <ref refid="classhpx_1_1program__options_1_1options__description" kindref="compound">options_description</ref>. The returned object will have overloaded operator() with parameter type matching &apos;<ref refid="classhpx_1_1program__options_1_1option__description" kindref="compound">option_description</ref>&apos; constructors. Calling the operator will create new <ref refid="classhpx_1_1program__options_1_1option__description" kindref="compound">option_description</ref> instance and add it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="267" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1options__description_1a82f5e2df53286c982ba616c9957cbf1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classhpx_1_1program__options_1_1option__description" kindref="compound">option_description</ref> &amp;</type>
        <definition>const option_description&amp; hpx::program_options::options_description::find</definition>
        <argsstring>(const std::string &amp;name, bool approx, bool long_ignore_case=false, bool short_ignore_case=false) const</argsstring>
        <name>find</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>approx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>long_ignore_case</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>short_ignore_case</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1options__description_1a17affc7dd6713eb7ae5b08b349d8b8dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classhpx_1_1program__options_1_1option__description" kindref="compound">option_description</ref> *</type>
        <definition>const option_description* hpx::program_options::options_description::find_nothrow</definition>
        <argsstring>(const std::string &amp;name, bool approx, bool long_ignore_case=false, bool short_ignore_case=false) const</argsstring>
        <name>find_nothrow</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>approx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>long_ignore_case</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>short_ignore_case</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="273" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1options__description_1a6f2094d26bd8943bc96ee8269fbfccde" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::shared_ptr&lt; <ref refid="classhpx_1_1program__options_1_1option__description" kindref="compound">option_description</ref> &gt; &gt; &amp;</type>
        <definition>const std::vector&lt;std::shared_ptr&lt;option_description&gt; &gt;&amp; hpx::program_options::options_description::options</definition>
        <argsstring>() const</argsstring>
        <name>options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1options__description_1a6987cd1092a1e115fa25e67fd55ecd7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::program_options::options_description::print</definition>
        <argsstring>(std::ostream &amp;os, unsigned width=0) const</argsstring>
        <name>print</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>width</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Outputs &apos;desc&apos; to the specified stream, calling &apos;f&apos; to output each <ref refid="classhpx_1_1program__options_1_1option__description" kindref="compound">option_description</ref> element. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="287" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classhpx_1_1program__options_1_1options__description_1a2e90b2d7c03a9fa22cfa303b449e1650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const options_description &amp;desc)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classhpx_1_1program__options_1_1options__description" kindref="compound">options_description</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Produces a human readable output of &apos;desc&apos;, listing options, their descriptions and allowed parameters. Other <ref refid="classhpx_1_1program__options_1_1options__description" kindref="compound">options_description</ref> instances previously passed to add will be output separately. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="282" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A set of option descriptions. This provides convenient interface for adding new option (the add_options) method, and facilities to search for options by name.</para><para>See here for option adding interface discussion. <simplesect kind="see"><para><ref refid="classhpx_1_1program__options_1_1option__description" kindref="compound">option_description</ref> </para></simplesect>
</para>    </detaileddescription>
    <location file="libs/program_options/include/hpx/program_options/options_description.hpp" line="227" column="1" bodyfile="libs/program_options/include/hpx/program_options/options_description.hpp" bodystart="226" bodyend="316"/>
    <listofallmembers>
      <member refid="classhpx_1_1program__options_1_1options__description_1a15e11621f42743daabe0f322e7343712" prot="public" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>add</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a94ca8c4bb8d3f4751a4ec6c469c00e15" prot="public" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>add</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a0b3b6c58d9442b685dd4b1f34ffa55c8" prot="public" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>add_options</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a7d15d9abb8722446b70ba34b816c90c2" prot="private" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>approximation_range</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1af6057f2aee5724172c3db06dd0f67070" prot="private" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>belong_to_group</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a82f5e2df53286c982ba616c9957cbf1b" prot="public" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>find</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a17affc7dd6713eb7ae5b08b349d8b8dc" prot="public" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>find_nothrow</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a319575a9a101cd1b9aed09615d865b41" prot="public" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>get_option_column_width</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1afe5c1be934cae44add18615350e40fc3" prot="private" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>groups</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a87d2354996100a3b6ab6421d22de6f1f" prot="private" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>m_caption</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a5ef9ed951408f8c3edbd0653fe665fde" prot="public" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>m_default_line_length</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a2f0b0af9c92ec2d63d576d86210d6021" prot="private" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>m_line_length</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1afdb76d462ea49cc8e926cdb83b1c4799" prot="private" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>m_min_description_length</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a73a9597590e2d67e5a73776bf5b26635" prot="private" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>m_options</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a3df9a1972293a469a79103330391bf65" prot="private" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>name2index_iterator</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a2e90b2d7c03a9fa22cfa303b449e1650" prot="public" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>operator&lt;&lt;</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a6f2094d26bd8943bc96ee8269fbfccde" prot="public" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>options</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a16f550a1b1ec547ce943321b45b3d0a8" prot="public" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>options_description</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a351bbfeda7eb25b1d718d88047eee726" prot="public" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>options_description</name></member>
      <member refid="classhpx_1_1program__options_1_1options__description_1a6987cd1092a1e115fa25e67fd55ecd7b" prot="public" virt="non-virtual"><scope>hpx::program_options::options_description</scope><name>print</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
