<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classhpx_1_1program__options_1_1abstract__variables__map" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>hpx::program_options::abstract_variables_map</compoundname>
    <derivedcompoundref refid="classhpx_1_1program__options_1_1variables__map" prot="public" virt="non-virtual">hpx::program_options::variables_map</derivedcompoundref>
    <includes refid="variables__map_8hpp" local="no">variables_map.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhpx_1_1program__options_1_1abstract__variables__map_1accf3d494326df7d34e0479a94840c392" prot="private" static="no" mutable="no">
        <type>const <ref refid="classhpx_1_1program__options_1_1abstract__variables__map" kindref="compound">abstract_variables_map</ref> *</type>
        <definition>const abstract_variables_map* hpx::program_options::abstract_variables_map::m_next</definition>
        <argsstring></argsstring>
        <name>m_next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/variables_map.hpp" line="162" column="1" bodyfile="libs/program_options/include/hpx/program_options/variables_map.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhpx_1_1program__options_1_1abstract__variables__map_1a6e1947f51bd46d328c808a9c215a58fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hpx::program_options::abstract_variables_map::abstract_variables_map</definition>
        <argsstring>()</argsstring>
        <name>abstract_variables_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/variables_map.hpp" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1abstract__variables__map_1ade4ca469628976c01b6ee000d87f3aab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hpx::program_options::abstract_variables_map::abstract_variables_map</definition>
        <argsstring>(const abstract_variables_map *next)</argsstring>
        <name>abstract_variables_map</name>
        <param>
          <type>const <ref refid="classhpx_1_1program__options_1_1abstract__variables__map" kindref="compound">abstract_variables_map</ref> *</type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/variables_map.hpp" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1abstract__variables__map_1a40b47cbe4888da40ec40a1a82f0197e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual hpx::program_options::abstract_variables_map::~abstract_variables_map</definition>
        <argsstring>()</argsstring>
        <name>~abstract_variables_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/variables_map.hpp" line="135" column="1" bodyfile="libs/program_options/include/hpx/program_options/variables_map.hpp" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1abstract__variables__map_1a800946c236e9c5890a42abccb28140c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classhpx_1_1program__options_1_1variable__value" kindref="compound">variable_value</ref> &amp;</type>
        <definition>const variable_value&amp; hpx::program_options::abstract_variables_map::operator[]</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Obtains the value of variable &apos;name&apos;, from *this and possibly from the chain of variable maps.</para><para><itemizedlist>
<listitem><para>if there&apos;s no value in *this.<itemizedlist>
<listitem><para>if there&apos;s next variable map, returns value from it</para></listitem><listitem><para>otherwise, returns empty value</para></listitem></itemizedlist>
</para></listitem><listitem><para>if there&apos;s defaulted value<itemizedlist>
<listitem><para>if there&apos;s next variable map, which has a non-defaulted value, return that</para></listitem><listitem><para>otherwise, return value from *this</para></listitem></itemizedlist>
</para></listitem><listitem><para>if there&apos;s a non-defaulted value, returns it. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/variables_map.hpp" line="151" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1abstract__variables__map_1a8fa1e04aa2248ebbcc7fd61dc89cbe52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::program_options::abstract_variables_map::next</definition>
        <argsstring>(abstract_variables_map *next)</argsstring>
        <name>next</name>
        <param>
          <type><ref refid="classhpx_1_1program__options_1_1abstract__variables__map" kindref="compound">abstract_variables_map</ref> *</type>
          <declname>next</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets next variable map, which will be used to find variables not found in *this. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/variables_map.hpp" line="155" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhpx_1_1program__options_1_1abstract__variables__map_1a76f2c0cb31ffdb24e6074bab437be5f6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="classhpx_1_1program__options_1_1variable__value" kindref="compound">variable_value</ref> &amp;</type>
        <definition>virtual const variable_value&amp; hpx::program_options::abstract_variables_map::get</definition>
        <argsstring>(const std::string &amp;name) const =0</argsstring>
        <name>get</name>
        <reimplementedby refid="classhpx_1_1program__options_1_1variables__map_1af3c9786fb3e1a8e83126aec5663c41dd">get</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns value of variable &apos;name&apos; stored in *this, or empty value otherwise. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/variables_map.hpp" line="160" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Implements string-&gt;string mapping with convenient value casting facilities. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="0">
        <label>hpx::program_options::abstract_variables_map</label>
        <link refid="classhpx_1_1program__options_1_1abstract__variables__map"/>
      </node>
      <node id="1">
        <label>hpx::program_options::variables_map</label>
        <link refid="classhpx_1_1program__options_1_1variables__map"/>
        <childnode refid="0" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="libs/program_options/include/hpx/program_options/variables_map.hpp" line="130" column="1" bodyfile="libs/program_options/include/hpx/program_options/variables_map.hpp" bodystart="129" bodyend="163"/>
    <listofallmembers>
      <member refid="classhpx_1_1program__options_1_1abstract__variables__map_1a6e1947f51bd46d328c808a9c215a58fa" prot="public" virt="non-virtual"><scope>hpx::program_options::abstract_variables_map</scope><name>abstract_variables_map</name></member>
      <member refid="classhpx_1_1program__options_1_1abstract__variables__map_1ade4ca469628976c01b6ee000d87f3aab" prot="public" virt="non-virtual"><scope>hpx::program_options::abstract_variables_map</scope><name>abstract_variables_map</name></member>
      <member refid="classhpx_1_1program__options_1_1abstract__variables__map_1a76f2c0cb31ffdb24e6074bab437be5f6" prot="private" virt="pure-virtual"><scope>hpx::program_options::abstract_variables_map</scope><name>get</name></member>
      <member refid="classhpx_1_1program__options_1_1abstract__variables__map_1accf3d494326df7d34e0479a94840c392" prot="private" virt="non-virtual"><scope>hpx::program_options::abstract_variables_map</scope><name>m_next</name></member>
      <member refid="classhpx_1_1program__options_1_1abstract__variables__map_1a8fa1e04aa2248ebbcc7fd61dc89cbe52" prot="public" virt="non-virtual"><scope>hpx::program_options::abstract_variables_map</scope><name>next</name></member>
      <member refid="classhpx_1_1program__options_1_1abstract__variables__map_1a800946c236e9c5890a42abccb28140c4" prot="public" virt="non-virtual"><scope>hpx::program_options::abstract_variables_map</scope><name>operator[]</name></member>
      <member refid="classhpx_1_1program__options_1_1abstract__variables__map_1a40b47cbe4888da40ec40a1a82f0197e8" prot="public" virt="virtual"><scope>hpx::program_options::abstract_variables_map</scope><name>~abstract_variables_map</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
