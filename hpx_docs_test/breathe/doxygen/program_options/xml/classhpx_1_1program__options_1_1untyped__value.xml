<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classhpx_1_1program__options_1_1untyped__value" kind="class" language="C++" prot="public">
    <compoundname>hpx::program_options::untyped_value</compoundname>
    <basecompoundref refid="classhpx_1_1program__options_1_1value__semantic__codecvt__helper_3_01char_01_4" prot="public" virt="non-virtual">hpx::program_options::value_semantic_codecvt_helper&lt; char &gt;</basecompoundref>
    <includes refid="value__semantic_8hpp" local="no">value_semantic.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhpx_1_1program__options_1_1untyped__value_1ab43b235fff721a0037cfceee97a8abcf" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hpx::program_options::untyped_value::m_zero_tokens</definition>
        <argsstring></argsstring>
        <name>m_zero_tokens</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/value_semantic.hpp" line="207" column="1" bodyfile="libs/program_options/include/hpx/program_options/value_semantic.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhpx_1_1program__options_1_1untyped__value_1aa22904a09d3ea54228bd8bac73ec1120" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::program_options::untyped_value::untyped_value</definition>
        <argsstring>(bool zero_tokens=false)</argsstring>
        <name>untyped_value</name>
        <param>
          <type>bool</type>
          <declname>zero_tokens</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/value_semantic.hpp" line="169" column="1" bodyfile="libs/program_options/include/hpx/program_options/value_semantic.hpp" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1untyped__value_1ae87fb53082ed1ce6c38e8086c1a8a8f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string hpx::program_options::untyped_value::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <reimplements refid="classhpx_1_1program__options_1_1value__semantic_1ad80cff54dd5b853fd030391e3039cb5b">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the name of the option. The name is only meaningful for automatic help message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/value_semantic.hpp" line="174" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1untyped__value_1aedad190f7e15e4d228a8b4df5e492751" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned</type>
        <definition>unsigned hpx::program_options::untyped_value::min_tokens</definition>
        <argsstring>() const override</argsstring>
        <name>min_tokens</name>
        <reimplements refid="classhpx_1_1program__options_1_1value__semantic_1a167bc134dd276a4bec508bba48a5c8a4">min_tokens</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The minimum number of tokens for this option that should be present on the command line. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/value_semantic.hpp" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1untyped__value_1a6b9912b0e200405e6738637909f0e44c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned</type>
        <definition>unsigned hpx::program_options::untyped_value::max_tokens</definition>
        <argsstring>() const override</argsstring>
        <name>max_tokens</name>
        <reimplements refid="classhpx_1_1program__options_1_1value__semantic_1a77b9c569a8b0177748cdc8456d96cf49">max_tokens</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The maximum number of tokens for this option that should be present on the command line. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/value_semantic.hpp" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1untyped__value_1ab5ab088eb7d46b9face84640105a772c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool hpx::program_options::untyped_value::is_composing</definition>
        <argsstring>() const override</argsstring>
        <name>is_composing</name>
        <reimplements refid="classhpx_1_1program__options_1_1value__semantic_1a1c306c41e05017df2bffaa8795a9708a">is_composing</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if values from different sources should be composed. Otherwise, value from the first source is used and values from other sources are discarded. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/value_semantic.hpp" line="179" column="1" bodyfile="libs/program_options/include/hpx/program_options/value_semantic.hpp" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1untyped__value_1a9c96834f660faa838ee8e90a95229c49" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool hpx::program_options::untyped_value::is_required</definition>
        <argsstring>() const override</argsstring>
        <name>is_required</name>
        <reimplements refid="classhpx_1_1program__options_1_1value__semantic_1aa2f3dd57bfe625dbe76bb707be256220">is_required</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if value must be given. Non-optional value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/value_semantic.hpp" line="184" column="1" bodyfile="libs/program_options/include/hpx/program_options/value_semantic.hpp" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1untyped__value_1a163355f134683dd56620e37098959289" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void hpx::program_options::untyped_value::xparse</definition>
        <argsstring>(hpx::util::any_nonser &amp;value_store, const std::vector&lt; std::string &gt; &amp;new_tokens) const override</argsstring>
        <name>xparse</name>
        <reimplements refid="classhpx_1_1program__options_1_1value__semantic__codecvt__helper_3_01char_01_4_1a204aa03d91d0e43673f98290d4b99e20">xparse</reimplements>
        <param>
          <type>hpx::util::any_nonser &amp;</type>
          <declname>value_store</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::string &gt; &amp;</type>
          <declname>new_tokens</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If &apos;value_store&apos; is already initialized, or new_tokens has more than one elements, throws. Otherwise, assigns the first string from &apos;new_tokens&apos; to &apos;value_store&apos;, without any modifications. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/value_semantic.hpp" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1untyped__value_1a659058151a15d2d86ee0060ab415693f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool hpx::program_options::untyped_value::apply_default</definition>
        <argsstring>(hpx::util::any_nonser &amp;) const override</argsstring>
        <name>apply_default</name>
        <reimplements refid="classhpx_1_1program__options_1_1value__semantic_1a0d689252b6d6a961a885782934e274bc">apply_default</reimplements>
        <param>
          <type>hpx::util::any_nonser &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Does nothing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/value_semantic.hpp" line="198" column="1" bodyfile="libs/program_options/include/hpx/program_options/value_semantic.hpp" bodystart="198" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1program__options_1_1untyped__value_1a3331126acdd983f12e94823c904c6350" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void hpx::program_options::untyped_value::notify</definition>
        <argsstring>(const hpx::util::any_nonser &amp;) const override</argsstring>
        <name>notify</name>
        <reimplements refid="classhpx_1_1program__options_1_1value__semantic_1aa72fb034c6ae89b6c73ee2e4b7fc0172">notify</reimplements>
        <param>
          <type>const hpx::util::any_nonser &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Does nothing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/program_options/include/hpx/program_options/value_semantic.hpp" line="204" column="1" bodyfile="libs/program_options/include/hpx/program_options/value_semantic.hpp" bodystart="204" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Class which specifies a simple handling of a value: the value will have string type and only one token is allowed. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="216">
        <label>hpx::program_options::value_semantic_codecvt_helper&lt; char &gt;</label>
        <link refid="classhpx_1_1program__options_1_1value__semantic__codecvt__helper_3_01char_01_4"/>
        <childnode refid="217" relation="public-inheritance">
        </childnode>
      </node>
      <node id="215">
        <label>hpx::program_options::untyped_value</label>
        <link refid="classhpx_1_1program__options_1_1untyped__value"/>
        <childnode refid="216" relation="public-inheritance">
        </childnode>
      </node>
      <node id="217">
        <label>hpx::program_options::value_semantic</label>
        <link refid="classhpx_1_1program__options_1_1value__semantic"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="219">
        <label>hpx::program_options::value_semantic_codecvt_helper&lt; char &gt;</label>
        <link refid="classhpx_1_1program__options_1_1value__semantic__codecvt__helper_3_01char_01_4"/>
        <childnode refid="220" relation="public-inheritance">
        </childnode>
      </node>
      <node id="218">
        <label>hpx::program_options::untyped_value</label>
        <link refid="classhpx_1_1program__options_1_1untyped__value"/>
        <childnode refid="219" relation="public-inheritance">
        </childnode>
      </node>
      <node id="220">
        <label>hpx::program_options::value_semantic</label>
        <link refid="classhpx_1_1program__options_1_1value__semantic"/>
      </node>
    </collaborationgraph>
    <location file="libs/program_options/include/hpx/program_options/value_semantic.hpp" line="167" column="1" bodyfile="libs/program_options/include/hpx/program_options/value_semantic.hpp" bodystart="166" bodyend="208"/>
    <listofallmembers>
      <member refid="classhpx_1_1program__options_1_1untyped__value_1a659058151a15d2d86ee0060ab415693f" prot="public" virt="virtual"><scope>hpx::program_options::untyped_value</scope><name>apply_default</name></member>
      <member refid="classhpx_1_1program__options_1_1untyped__value_1ab5ab088eb7d46b9face84640105a772c" prot="public" virt="virtual"><scope>hpx::program_options::untyped_value</scope><name>is_composing</name></member>
      <member refid="classhpx_1_1program__options_1_1untyped__value_1a9c96834f660faa838ee8e90a95229c49" prot="public" virt="virtual"><scope>hpx::program_options::untyped_value</scope><name>is_required</name></member>
      <member refid="classhpx_1_1program__options_1_1untyped__value_1ab43b235fff721a0037cfceee97a8abcf" prot="private" virt="non-virtual"><scope>hpx::program_options::untyped_value</scope><name>m_zero_tokens</name></member>
      <member refid="classhpx_1_1program__options_1_1untyped__value_1a6b9912b0e200405e6738637909f0e44c" prot="public" virt="virtual"><scope>hpx::program_options::untyped_value</scope><name>max_tokens</name></member>
      <member refid="classhpx_1_1program__options_1_1untyped__value_1aedad190f7e15e4d228a8b4df5e492751" prot="public" virt="virtual"><scope>hpx::program_options::untyped_value</scope><name>min_tokens</name></member>
      <member refid="classhpx_1_1program__options_1_1untyped__value_1ae87fb53082ed1ce6c38e8086c1a8a8f1" prot="public" virt="virtual"><scope>hpx::program_options::untyped_value</scope><name>name</name></member>
      <member refid="classhpx_1_1program__options_1_1untyped__value_1a3331126acdd983f12e94823c904c6350" prot="public" virt="virtual"><scope>hpx::program_options::untyped_value</scope><name>notify</name></member>
      <member refid="classhpx_1_1program__options_1_1untyped__value_1aa22904a09d3ea54228bd8bac73ec1120" prot="public" virt="non-virtual"><scope>hpx::program_options::untyped_value</scope><name>untyped_value</name></member>
      <member refid="classhpx_1_1program__options_1_1untyped__value_1a163355f134683dd56620e37098959289" prot="public" virt="virtual"><scope>hpx::program_options::untyped_value</scope><name>xparse</name></member>
      <member refid="classhpx_1_1program__options_1_1value__semantic_1a65e85d853ce018535bc7f4d249c14659" prot="public" virt="virtual"><scope>hpx::program_options::untyped_value</scope><name>~value_semantic</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
