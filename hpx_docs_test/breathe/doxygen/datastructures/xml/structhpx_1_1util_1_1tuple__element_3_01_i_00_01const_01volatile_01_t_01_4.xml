<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1util_1_1tuple__element_3_01_i_00_01const_01volatile_01_t_01_4" kind="struct" language="C++" prot="public">
    <compoundname>hpx::util::tuple_element&lt; I, const volatile T &gt;</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::add_cv&lt; tuple_element&lt; I, T &gt;::type &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>std::size_t</type>
        <declname>I</declname>
        <defname>I</defname>
      </param>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="47">
        <label>hpx::util::tuple_element&lt; I, const volatile T &gt;</label>
        <link refid="structhpx_1_1util_1_1tuple__element_3_01_i_00_01const_01volatile_01_t_01_4"/>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>std::add_cv&lt; tuple_element&lt; I, T &gt;::type &gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="49">
        <label>hpx::util::tuple_element&lt; I, const volatile T &gt;</label>
        <link refid="structhpx_1_1util_1_1tuple__element_3_01_i_00_01const_01volatile_01_t_01_4"/>
        <childnode refid="50" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>std::add_cv&lt; tuple_element&lt; I, T &gt;::type &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libs/datastructures/include/hpx/datastructures/tuple.hpp" line="577" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/tuple.hpp" bodystart="575" bodyend="578"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
