<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1util_1_1tuple__element_3_01_i_00_01std_1_1array_3_01_type_00_01_size_01_4_01_4" kind="struct" language="C++" prot="public">
    <compoundname>hpx::util::tuple_element&lt; I, std::array&lt; Type, Size &gt; &gt;</compoundname>
    <templateparamlist>
      <param>
        <type>std::size_t</type>
        <declname>I</declname>
        <defname>I</defname>
      </param>
      <param>
        <type>typename Type</type>
      </param>
      <param>
        <type>std::size_t</type>
        <declname>Size</declname>
        <defname>Size</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structhpx_1_1util_1_1tuple__element_3_01_i_00_01std_1_1array_3_01_type_00_01_size_01_4_01_4_1aa44754c8adb17ab5e79f04e83e0b8017" prot="public" static="no">
        <type>Type</type>
        <definition>typedef Type hpx::util::tuple_element&lt; I, std::array&lt; Type, Size &gt; &gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/tuple.hpp" line="655" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/tuple.hpp" bodystart="655" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structhpx_1_1util_1_1tuple__element_3_01_i_00_01std_1_1array_3_01_type_00_01_size_01_4_01_4_1a3a3de8070f970882c97543a13a12ff58" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HPX_HOST_DEVICE type &amp;</type>
        <definition>static HPX_HOST_DEVICE type&amp; hpx::util::tuple_element&lt; I, std::array&lt; Type, Size &gt; &gt;::get</definition>
        <argsstring>(std::array&lt; Type, Size &gt; &amp;tuple) noexcept</argsstring>
        <name>get</name>
        <param>
          <type>std::array&lt; Type, Size &gt; &amp;</type>
          <declname>tuple</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/tuple.hpp" line="657" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/tuple.hpp" bodystart="657" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1tuple__element_3_01_i_00_01std_1_1array_3_01_type_00_01_size_01_4_01_4_1a855de71803d32c336260af5f4d9f817a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HPX_HOST_DEVICE type const  &amp;</type>
        <definition>static HPX_HOST_DEVICE type const&amp; hpx::util::tuple_element&lt; I, std::array&lt; Type, Size &gt; &gt;::get</definition>
        <argsstring>(std::array&lt; Type, Size &gt; const &amp;tuple) noexcept</argsstring>
        <name>get</name>
        <param>
          <type>std::array&lt; Type, Size &gt; const &amp;</type>
          <declname>tuple</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/tuple.hpp" line="663" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/tuple.hpp" bodystart="663" bodyend="667"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/datastructures/include/hpx/datastructures/tuple.hpp" line="654" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/tuple.hpp" bodystart="653" bodyend="668"/>
    <listofallmembers>
      <member refid="structhpx_1_1util_1_1tuple__element_3_01_i_00_01std_1_1array_3_01_type_00_01_size_01_4_01_4_1a3a3de8070f970882c97543a13a12ff58" prot="public" virt="non-virtual"><scope>hpx::util::tuple_element&lt; I, std::array&lt; Type, Size &gt; &gt;</scope><name>get</name></member>
      <member refid="structhpx_1_1util_1_1tuple__element_3_01_i_00_01std_1_1array_3_01_type_00_01_size_01_4_01_4_1a855de71803d32c336260af5f4d9f817a" prot="public" virt="non-virtual"><scope>hpx::util::tuple_element&lt; I, std::array&lt; Type, Size &gt; &gt;</scope><name>get</name></member>
      <member refid="structhpx_1_1util_1_1tuple__element_3_01_i_00_01std_1_1array_3_01_type_00_01_size_01_4_01_4_1aa44754c8adb17ab5e79f04e83e0b8017" prot="public" virt="non-virtual"><scope>hpx::util::tuple_element&lt; I, std::array&lt; Type, Size &gt; &gt;</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
