<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4" kind="class" language="C++" prot="public">
    <compoundname>hpx::util::basic_any&lt; void, void, void &gt;</compoundname>
    <templateparamlist>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a5002a360d31e2e42f94606413968b5f3" prot="private" static="no" mutable="no">
        <type>detail::any::fxn_ptr_table&lt; void, void, void &gt; *</type>
        <definition>detail::any::fxn_ptr_table&lt;void, void, void&gt;* hpx::util::basic_any&lt; void, void, void &gt;::table</definition>
        <argsstring></argsstring>
        <name>table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="643" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="643" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a8e0d5cec656ed00237e8e24de6e8d2f4" prot="private" static="no" mutable="no">
        <type>void *</type>
        <definition>void* hpx::util::basic_any&lt; void, void, void &gt;::object</definition>
        <argsstring></argsstring>
        <name>object</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="644" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="644" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a222b733c8e97863df91be0add4b64159" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::util::basic_any&lt; void, void, void &gt;::basic_any</definition>
        <argsstring>() noexcept</argsstring>
        <name>basic_any</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="434" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="434" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1abee3aa557ba18c3cd9a9c931862bdb5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::util::basic_any&lt; void, void, void &gt;::basic_any</definition>
        <argsstring>(basic_any const &amp;x)</argsstring>
        <name>basic_any</name>
        <param>
          <type><ref refid="classhpx_1_1util_1_1basic__any" kindref="compound">basic_any</ref> const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="441" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="441" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a7712897b6585da8a930d98dcfc071a67" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::util::basic_any&lt; void, void, void &gt;::basic_any</definition>
        <argsstring>(basic_any &amp;&amp;x) noexcept</argsstring>
        <name>basic_any</name>
        <param>
          <type><ref refid="classhpx_1_1util_1_1basic__any" kindref="compound">basic_any</ref> &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="450" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="450" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1ab63710c3281074038bec789f959265f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>hpx::util::basic_any&lt; void, void, void &gt;::basic_any</definition>
        <argsstring>(T &amp;&amp;x, typename std::enable_if&lt; !std::is_same&lt; basic_any, typename std::decay&lt; T &gt;::type &gt;::value &amp;&amp;std::is_copy_constructible&lt; typename std::decay&lt; T &gt;::type &gt;::value &gt;::type *=nullptr)</argsstring>
        <name>basic_any</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>typename std::enable_if&lt; !std::is_same&lt; <ref refid="classhpx_1_1util_1_1basic__any" kindref="compound">basic_any</ref>, typename std::decay&lt; T &gt;::type &gt;::value &amp;&amp;std::is_copy_constructible&lt; typename std::decay&lt; T &gt;::type &gt;::value &gt;::type *</type>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="462" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="462" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a4fb3014e270af8fd450a1d36c04a229f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::util::basic_any&lt; void, void, void &gt;::~basic_any</definition>
        <argsstring>()</argsstring>
        <name>~basic_any</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="514" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="514" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a44197c973e7516eb3001a62778e8dae5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhpx_1_1util_1_1basic__any" kindref="compound">basic_any</ref> &amp;</type>
        <definition>basic_any&amp; hpx::util::basic_any&lt; void, void, void &gt;::operator=</definition>
        <argsstring>(basic_any const &amp;x)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhpx_1_1util_1_1basic__any" kindref="compound">basic_any</ref> const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="556" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="556" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1ae6ccffb5a0c80762aca22349b59be58c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhpx_1_1util_1_1basic__any" kindref="compound">basic_any</ref> &amp;</type>
        <definition>basic_any&amp; hpx::util::basic_any&lt; void, void, void &gt;::operator=</definition>
        <argsstring>(basic_any &amp;&amp;rhs) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhpx_1_1util_1_1basic__any" kindref="compound">basic_any</ref> &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="563" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="563" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a3018eca677805dd5d2bc0463f850ad16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Enable</type>
            <defval>typename std::enable_if&lt;                !std::is_same&lt;<ref refid="classhpx_1_1util_1_1basic__any" kindref="compound">basic_any</ref>, typename std::decay&lt;T&gt;::type&gt;::value &amp;&amp;                std::is_copy_constructible&lt;                    typename std::decay&lt;T&gt;::type&gt;::value&gt;::type</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classhpx_1_1util_1_1basic__any" kindref="compound">basic_any</ref> &amp;</type>
        <definition>basic_any&amp; hpx::util::basic_any&lt; void, void, void &gt;::operator=</definition>
        <argsstring>(T &amp;&amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>T &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="576" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="576" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a9f35ecc9ba26820ab9f8952e94c703e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhpx_1_1util_1_1basic__any" kindref="compound">basic_any</ref> &amp;</type>
        <definition>basic_any&amp; hpx::util::basic_any&lt; void, void, void &gt;::swap</definition>
        <argsstring>(basic_any &amp;x) noexcept</argsstring>
        <name>swap</name>
        <param>
          <type><ref refid="classhpx_1_1util_1_1basic__any" kindref="compound">basic_any</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="583" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="583" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a50e9f021a29c2c97b8bf8e6d55b76c82" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::type_info const  &amp;</type>
        <definition>std::type_info const&amp; hpx::util::basic_any&lt; void, void, void &gt;::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="590" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="590" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1af9640f8c0ddec7883ea114062d7a415c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T const  &amp;</type>
        <definition>T const&amp; hpx::util::basic_any&lt; void, void, void &gt;::cast</definition>
        <argsstring>() const</argsstring>
        <name>cast</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="596" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="596" bodyend="604"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1aaff8cfbd17aef9dcdb1d6ef91c08ceac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hpx::util::basic_any&lt; void, void, void &gt;::has_value</definition>
        <argsstring>() const noexcept</argsstring>
        <name>has_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="606" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="606" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a7d9298a57b74a9451d4665f164f8508c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::basic_any&lt; void, void, void &gt;::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="611" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="611" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1ace2ae7d993bacb9b3068546d58a30e65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hpx::util::basic_any&lt; void, void, void &gt;::equal_to</definition>
        <argsstring>(basic_any const &amp;rhs) const noexcept</argsstring>
        <name>equal_to</name>
        <param>
          <type><ref refid="classhpx_1_1util_1_1basic__any" kindref="compound">basic_any</ref> const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="623" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="623" bodyend="636"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1ad7e309c5c9dc50768488129b1afae81c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classhpx_1_1util_1_1basic__any" kindref="compound">basic_any</ref> &amp;</type>
        <definition>basic_any&amp; hpx::util::basic_any&lt; void, void, void &gt;::assign</definition>
        <argsstring>(basic_any const &amp;x)</argsstring>
        <name>assign</name>
        <param>
          <type><ref refid="classhpx_1_1util_1_1basic__any" kindref="compound">basic_any</ref> const &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="520" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="520" bodyend="538"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a15202a77b84ca16ef013b21ee60abda0" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void hpx::util::basic_any&lt; void, void, void &gt;::new_object</definition>
        <argsstring>(void *&amp;object, std::true_type, Ts &amp;&amp;... ts)</argsstring>
        <name>new_object</name>
        <param>
          <type>void *&amp;</type>
          <declname>object</declname>
        </param>
        <param>
          <type>std::true_type</type>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="541" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="541" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a78d63ca006f492a82860e2948f5ad82d" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename...</type>
            <declname>Ts</declname>
            <defname>Ts</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void hpx::util::basic_any&lt; void, void, void &gt;::new_object</definition>
        <argsstring>(void *&amp;object, std::false_type, Ts &amp;&amp;... ts)</argsstring>
        <name>new_object</name>
        <param>
          <type>void *&amp;</type>
          <declname>object</declname>
        </param>
        <param>
          <type>std::false_type</type>
        </param>
        <param>
          <type>Ts &amp;&amp;...</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="548" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="548" bodyend="552"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a4928af17f2215fed57ba746e0e743cf0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename IArch_</type>
          </param>
          <param>
            <type>typename OArch_</type>
          </param>
          <param>
            <type>typename Char_</type>
          </param>
        </templateparamlist>
        <type>friend T *</type>
        <definition>T* any_cast</definition>
        <argsstring>(basic_any&lt; IArch_, OArch_, Char_ &gt; *) noexcept</argsstring>
        <name>any_cast</name>
        <param>
          <type><ref refid="classhpx_1_1util_1_1basic__any" kindref="compound">basic_any</ref>&lt; IArch_, OArch_, Char_ &gt; *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="640" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/datastructures/include/hpx/datastructures/any.hpp" line="431" column="1" bodyfile="libs/datastructures/include/hpx/datastructures/any.hpp" bodystart="430" bodyend="645"/>
    <listofallmembers>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a4928af17f2215fed57ba746e0e743cf0" prot="private" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>any_cast</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1ad7e309c5c9dc50768488129b1afae81c" prot="private" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>assign</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a222b733c8e97863df91be0add4b64159" prot="public" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>basic_any</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1abee3aa557ba18c3cd9a9c931862bdb5e" prot="public" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>basic_any</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a7712897b6585da8a930d98dcfc071a67" prot="public" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>basic_any</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1ab63710c3281074038bec789f959265f5" prot="public" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>basic_any</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1af9640f8c0ddec7883ea114062d7a415c" prot="public" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>cast</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1ace2ae7d993bacb9b3068546d58a30e65" prot="public" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>equal_to</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1aaff8cfbd17aef9dcdb1d6ef91c08ceac" prot="public" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>has_value</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a15202a77b84ca16ef013b21ee60abda0" prot="private" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>new_object</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a78d63ca006f492a82860e2948f5ad82d" prot="private" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>new_object</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a8e0d5cec656ed00237e8e24de6e8d2f4" prot="private" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>object</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a44197c973e7516eb3001a62778e8dae5" prot="public" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>operator=</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1ae6ccffb5a0c80762aca22349b59be58c" prot="public" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>operator=</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a3018eca677805dd5d2bc0463f850ad16" prot="public" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>operator=</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a7d9298a57b74a9451d4665f164f8508c" prot="public" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>reset</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a9f35ecc9ba26820ab9f8952e94c703e5" prot="public" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>swap</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a5002a360d31e2e42f94606413968b5f3" prot="private" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>table</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a50e9f021a29c2c97b8bf8e6d55b76c82" prot="public" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>type</name></member>
      <member refid="classhpx_1_1util_1_1basic__any_3_01void_00_01void_00_01void_01_4_1a4fb3014e270af8fd450a1d36c04a229f" prot="public" virt="non-virtual"><scope>hpx::util::basic_any&lt; void, void, void &gt;</scope><name>~basic_any</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
