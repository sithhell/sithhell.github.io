<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1util_1_1unused__type" kind="struct" language="C++" prot="public">
    <compoundname>hpx::util::unused_type</compoundname>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1util_1_1unused__type_1a5365b91215d47f1169d947b87b6e4cb7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HPX_HOST_DEVICE</type>
        <definition>HPX_HOST_DEVICE hpx::util::unused_type::unused_type</definition>
        <argsstring>() noexcept</argsstring>
        <name>unused_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/type_support/include/hpx/type_support/unused.hpp" line="27" column="1" bodyfile="libs/type_support/include/hpx/type_support/unused.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1unused__type_1a58e9188c5e0075324a1a7e987cbc9e41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HPX_HOST_DEVICE</type>
        <definition>HPX_HOST_DEVICE hpx::util::unused_type::unused_type</definition>
        <argsstring>(unused_type const &amp;)</argsstring>
        <name>unused_type</name>
        <param>
          <type><ref refid="structhpx_1_1util_1_1unused__type" kindref="compound">unused_type</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/type_support/include/hpx/type_support/unused.hpp" line="29" column="1" bodyfile="libs/type_support/include/hpx/type_support/unused.hpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1unused__type_1a24c0be0f0c60d9ea39449f722e33009b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HPX_HOST_DEVICE</type>
        <definition>HPX_HOST_DEVICE hpx::util::unused_type::unused_type</definition>
        <argsstring>(unused_type &amp;&amp;)</argsstring>
        <name>unused_type</name>
        <param>
          <type><ref refid="structhpx_1_1util_1_1unused__type" kindref="compound">unused_type</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/type_support/include/hpx/type_support/unused.hpp" line="33" column="1" bodyfile="libs/type_support/include/hpx/type_support/unused.hpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1unused__type_1a024b495f51aaa980902474b1529b25b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>HPX_HOST_DEVICE</type>
        <definition>HPX_HOST_DEVICE hpx::util::unused_type::unused_type</definition>
        <argsstring>(T const &amp;) noexcept</argsstring>
        <name>unused_type</name>
        <param>
          <type>T const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/type_support/include/hpx/type_support/unused.hpp" line="38" column="1" bodyfile="libs/type_support/include/hpx/type_support/unused.hpp" bodystart="38" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1unused__type_1a8153d9db970016f87123919e1e29159f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>HPX_HOST_DEVICE <ref refid="structhpx_1_1util_1_1unused__type" kindref="compound">unused_type</ref> const  &amp;</type>
        <definition>HPX_HOST_DEVICE unused_type const&amp; hpx::util::unused_type::operator=</definition>
        <argsstring>(T const &amp;) const noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>T const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/type_support/include/hpx/type_support/unused.hpp" line="45" column="1" bodyfile="libs/type_support/include/hpx/type_support/unused.hpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1unused__type_1a700797f9ab03cf6c708c4fad023f495b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>HPX_HOST_DEVICE <ref refid="structhpx_1_1util_1_1unused__type" kindref="compound">unused_type</ref> &amp;</type>
        <definition>HPX_HOST_DEVICE unused_type&amp; hpx::util::unused_type::operator=</definition>
        <argsstring>(T const &amp;) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type>T const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/type_support/include/hpx/type_support/unused.hpp" line="51" column="1" bodyfile="libs/type_support/include/hpx/type_support/unused.hpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1unused__type_1a92100d3e2226ade6cd323aae023b33a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HPX_HOST_DEVICE <ref refid="structhpx_1_1util_1_1unused__type" kindref="compound">unused_type</ref> const  &amp;</type>
        <definition>HPX_HOST_DEVICE unused_type const&amp; hpx::util::unused_type::operator=</definition>
        <argsstring>(unused_type const &amp;) const noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structhpx_1_1util_1_1unused__type" kindref="compound">unused_type</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/type_support/include/hpx/type_support/unused.hpp" line="58" column="1" bodyfile="libs/type_support/include/hpx/type_support/unused.hpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1unused__type_1a1bf8c1289ee9c1fe25fe5f41795c92c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HPX_HOST_DEVICE <ref refid="structhpx_1_1util_1_1unused__type" kindref="compound">unused_type</ref> &amp;</type>
        <definition>HPX_HOST_DEVICE unused_type&amp; hpx::util::unused_type::operator=</definition>
        <argsstring>(unused_type const &amp;) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structhpx_1_1util_1_1unused__type" kindref="compound">unused_type</ref> const &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/type_support/include/hpx/type_support/unused.hpp" line="63" column="1" bodyfile="libs/type_support/include/hpx/type_support/unused.hpp" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1unused__type_1af414f4fd3bd5cad7f9060f8643fecdfa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>HPX_HOST_DEVICE <ref refid="structhpx_1_1util_1_1unused__type" kindref="compound">unused_type</ref> const  &amp;</type>
        <definition>HPX_HOST_DEVICE unused_type const&amp; hpx::util::unused_type::operator=</definition>
        <argsstring>(unused_type &amp;&amp;) const noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structhpx_1_1util_1_1unused__type" kindref="compound">unused_type</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/type_support/include/hpx/type_support/unused.hpp" line="70" column="1" bodyfile="libs/type_support/include/hpx/type_support/unused.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1unused__type_1a34a6d6d97199e3e050cf5e76419bed00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HPX_HOST_DEVICE <ref refid="structhpx_1_1util_1_1unused__type" kindref="compound">unused_type</ref> &amp;</type>
        <definition>HPX_HOST_DEVICE unused_type&amp; hpx::util::unused_type::operator=</definition>
        <argsstring>(unused_type &amp;&amp;) noexcept</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="structhpx_1_1util_1_1unused__type" kindref="compound">unused_type</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/type_support/include/hpx/type_support/unused.hpp" line="75" column="1" bodyfile="libs/type_support/include/hpx/type_support/unused.hpp" bodystart="75" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/type_support/include/hpx/type_support/unused.hpp" line="26" column="1" bodyfile="libs/type_support/include/hpx/type_support/unused.hpp" bodystart="25" bodyend="80"/>
    <listofallmembers>
      <member refid="structhpx_1_1util_1_1unused__type_1a8153d9db970016f87123919e1e29159f" prot="public" virt="non-virtual"><scope>hpx::util::unused_type</scope><name>operator=</name></member>
      <member refid="structhpx_1_1util_1_1unused__type_1a700797f9ab03cf6c708c4fad023f495b" prot="public" virt="non-virtual"><scope>hpx::util::unused_type</scope><name>operator=</name></member>
      <member refid="structhpx_1_1util_1_1unused__type_1a92100d3e2226ade6cd323aae023b33a9" prot="public" virt="non-virtual"><scope>hpx::util::unused_type</scope><name>operator=</name></member>
      <member refid="structhpx_1_1util_1_1unused__type_1a1bf8c1289ee9c1fe25fe5f41795c92c9" prot="public" virt="non-virtual"><scope>hpx::util::unused_type</scope><name>operator=</name></member>
      <member refid="structhpx_1_1util_1_1unused__type_1af414f4fd3bd5cad7f9060f8643fecdfa" prot="public" virt="non-virtual"><scope>hpx::util::unused_type</scope><name>operator=</name></member>
      <member refid="structhpx_1_1util_1_1unused__type_1a34a6d6d97199e3e050cf5e76419bed00" prot="public" virt="non-virtual"><scope>hpx::util::unused_type</scope><name>operator=</name></member>
      <member refid="structhpx_1_1util_1_1unused__type_1a5365b91215d47f1169d947b87b6e4cb7" prot="public" virt="non-virtual"><scope>hpx::util::unused_type</scope><name>unused_type</name></member>
      <member refid="structhpx_1_1util_1_1unused__type_1a58e9188c5e0075324a1a7e987cbc9e41" prot="public" virt="non-virtual"><scope>hpx::util::unused_type</scope><name>unused_type</name></member>
      <member refid="structhpx_1_1util_1_1unused__type_1a24c0be0f0c60d9ea39449f722e33009b" prot="public" virt="non-virtual"><scope>hpx::util::unused_type</scope><name>unused_type</name></member>
      <member refid="structhpx_1_1util_1_1unused__type_1a024b495f51aaa980902474b1529b25b1" prot="public" virt="non-virtual"><scope>hpx::util::unused_type</scope><name>unused_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
