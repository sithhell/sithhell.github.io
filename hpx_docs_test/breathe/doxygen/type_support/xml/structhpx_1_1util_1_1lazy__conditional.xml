<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1util_1_1lazy__conditional" kind="struct" language="C++" prot="public">
    <compoundname>hpx::util::lazy_conditional</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::conditional::type&lt; Enable, C1, C2 &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>Enable</declname>
        <defname>Enable</defname>
      </param>
      <param>
        <type>typename C1</type>
      </param>
      <param>
        <type>typename C2</type>
      </param>
    </templateparamlist>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="16">
        <label>hpx::util::lazy_conditional&lt; Enable, C1, C2 &gt;</label>
        <link refid="structhpx_1_1util_1_1lazy__conditional"/>
        <childnode refid="17" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>std::conditional&lt; Enable, C1, C2 &gt;::type</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="18">
        <label>hpx::util::lazy_conditional&lt; Enable, C1, C2 &gt;</label>
        <link refid="structhpx_1_1util_1_1lazy__conditional"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>std::conditional&lt; Enable, C1, C2 &gt;::type</label>
      </node>
    </collaborationgraph>
    <location file="libs/type_support/include/hpx/type_support/lazy_conditional.hpp" line="14" column="1" bodyfile="libs/type_support/include/hpx/type_support/lazy_conditional.hpp" bodystart="13" bodyend="15"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
