<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespacehpx_1_1threads" kind="namespace" language="C++">
    <compoundname>hpx::threads</compoundname>
    <innerclass refid="structhpx_1_1threads_1_1hpx__hwloc__bitmap__wrapper" prot="public">hpx::threads::hpx_hwloc_bitmap_wrapper</innerclass>
    <innerclass refid="structhpx_1_1threads_1_1topology" prot="public">hpx::threads::topology</innerclass>
    <innerclass refid="structhpx_1_1threads_1_1topology__tag" prot="public">hpx::threads::topology_tag</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="hpx_2topology_2topology_8hpp_1aa3eecf4fc4dfdb19545eeefc4fd5c83f" prot="public" static="no">
        <name>hpx_hwloc_membind_policy</name>
        <enumvalue id="hpx_2topology_2topology_8hpp_1aa3eecf4fc4dfdb19545eeefc4fd5c83fad8b92b209272f5b000970c6fe8e7593a" prot="public">
          <name>membind_default</name>
          <initializer>= HWLOC_MEMBIND_DEFAULT</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpx_2topology_2topology_8hpp_1aa3eecf4fc4dfdb19545eeefc4fd5c83faa7e1b3262d7d7c284623a78deff53722" prot="public">
          <name>membind_firsttouch</name>
          <initializer>= HWLOC_MEMBIND_FIRSTTOUCH</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpx_2topology_2topology_8hpp_1aa3eecf4fc4dfdb19545eeefc4fd5c83fa55845a0f3f103122589010a576bb0142" prot="public">
          <name>membind_bind</name>
          <initializer>= HWLOC_MEMBIND_BIND</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpx_2topology_2topology_8hpp_1aa3eecf4fc4dfdb19545eeefc4fd5c83fab58c1372b5148b703183aaa89ae3f051" prot="public">
          <name>membind_interleave</name>
          <initializer>= HWLOC_MEMBIND_INTERLEAVE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpx_2topology_2topology_8hpp_1aa3eecf4fc4dfdb19545eeefc4fd5c83faba9eb305dbd936c13fa761d23ccd53a9" prot="public">
          <name>membind_replicate</name>
          <initializer>= HWLOC_MEMBIND_REPLICATE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpx_2topology_2topology_8hpp_1aa3eecf4fc4dfdb19545eeefc4fd5c83fa9559f7fa896fdc47d877f69da23d8dd7" prot="public">
          <name>membind_nexttouch</name>
          <initializer>= HWLOC_MEMBIND_NEXTTOUCH</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpx_2topology_2topology_8hpp_1aa3eecf4fc4dfdb19545eeefc4fd5c83faffd11643bfdded8c325d5fb78df8e69f" prot="public">
          <name>membind_mixed</name>
          <initializer>= HWLOC_MEMBIND_MIXED</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="hpx_2topology_2topology_8hpp_1aa3eecf4fc4dfdb19545eeefc4fd5c83fa136849d5a867483292218be72d8c52ec" prot="public">
          <name>membind_user</name>
          <initializer>= HWLOC_MEMBIND_MIXED + 256</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Please see hwloc documentation for the corresponding enums HWLOC_MEMBIND_XXX. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/topology/include/hpx/topology/topology.hpp" line="85" column="1" bodyfile="libs/topology/include/hpx/topology/topology.hpp" bodystart="84" bodyend="97"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="hpx_2topology_2topology_8hpp_1aa444b9bb30b0296697e84ae761cf7e66" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="structhpx_1_1threads_1_1hpx__hwloc__bitmap__wrapper" kindref="compound">hpx_hwloc_bitmap_wrapper</ref> &gt;</type>
        <definition>using hpx::threads::hwloc_bitmap_ptr = typedef std::shared_ptr&lt;hpx_hwloc_bitmap_wrapper&gt;</definition>
        <argsstring></argsstring>
        <name>hwloc_bitmap_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/topology/include/hpx/topology/topology.hpp" line="80" column="1" bodyfile="libs/topology/include/hpx/topology/topology.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="hpx_2topology_2topology_8hpp_1aa4cc56111111c0910b6705047d8e6588" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structhpx_1_1threads_1_1topology" kindref="compound">topology</ref> &amp;</type>
        <definition>topology&amp; hpx::threads::create_topology</definition>
        <argsstring>()</argsstring>
        <name>create_topology</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/topology/include/hpx/topology/topology.hpp" line="415" column="1" bodyfile="libs/topology/include/hpx/topology/topology.hpp" bodystart="415" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="hpx_2topology_2topology_8hpp_1aa8752a235478d2ad7b5ac467b63ab527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hpx::threads::hardware_concurrency</definition>
        <argsstring>()</argsstring>
        <name>hardware_concurrency</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/topology/include/hpx/topology/topology.hpp" line="421" column="1"/>
      </memberdef>
      <memberdef kind="function" id="hpx_2topology_2topology_8hpp_1aff71d33ac5e19dbcdde859b490f98722" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t hpx::threads::get_memory_page_size</definition>
        <argsstring>()</argsstring>
        <name>get_memory_page_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/topology/include/hpx/topology/topology.hpp" line="426" column="1" bodyfile="libs/topology/include/hpx/topology/topology.hpp" bodystart="426" bodyend="429"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/topology/include/hpx/topology/topology.hpp" line="32" column="1"/>
  </compounddef>
</doxygen>
