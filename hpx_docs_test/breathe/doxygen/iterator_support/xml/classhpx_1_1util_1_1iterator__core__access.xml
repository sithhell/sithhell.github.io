<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classhpx_1_1util_1_1iterator__core__access" kind="class" language="C++" prot="public">
    <compoundname>hpx::util::iterator_core_access</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classhpx_1_1util_1_1iterator__core__access_1a50594a865b673fbdd547c46537596fda" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator1</type>
          </param>
          <param>
            <type>typename Iterator2</type>
          </param>
        </templateparamlist>
        <type>HPX_HOST_DEVICE bool</type>
        <definition>static HPX_HOST_DEVICE bool hpx::util::iterator_core_access::equal</definition>
        <argsstring>(Iterator1 const &amp;lhs, Iterator2 const &amp;rhs)</argsstring>
        <name>equal</name>
        <param>
          <type>Iterator1 const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>Iterator2 const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" line="33" column="1" bodyfile="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" bodystart="33" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1iterator__core__access_1a78a8cb90b8bb0b47d872df6a2d9fa091" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator</type>
          </param>
        </templateparamlist>
        <type>HPX_HOST_DEVICE void</type>
        <definition>static HPX_HOST_DEVICE void hpx::util::iterator_core_access::increment</definition>
        <argsstring>(Iterator &amp;it)</argsstring>
        <name>increment</name>
        <param>
          <type>Iterator &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" line="40" column="1" bodyfile="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1iterator__core__access_1aa3f16a3278ca6852f96aca8fc9118efb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator</type>
          </param>
        </templateparamlist>
        <type>HPX_HOST_DEVICE void</type>
        <definition>static HPX_HOST_DEVICE void hpx::util::iterator_core_access::decrement</definition>
        <argsstring>(Iterator &amp;it)</argsstring>
        <name>decrement</name>
        <param>
          <type>Iterator &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" line="46" column="1" bodyfile="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1iterator__core__access_1a35da587d9f7e8a77cfa067f391f6808f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Reference</type>
          </param>
          <param>
            <type>typename Iterator</type>
          </param>
        </templateparamlist>
        <type>HPX_HOST_DEVICE Reference</type>
        <definition>static HPX_HOST_DEVICE Reference hpx::util::iterator_core_access::dereference</definition>
        <argsstring>(Iterator const &amp;it)</argsstring>
        <name>dereference</name>
        <param>
          <type>Iterator const &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" line="52" column="1" bodyfile="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" bodystart="52" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1iterator__core__access_1a3d869c61ef22e744dc101d7e4b2a0e9f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator</type>
          </param>
          <param>
            <type>typename Distance</type>
          </param>
        </templateparamlist>
        <type>HPX_HOST_DEVICE void</type>
        <definition>static HPX_HOST_DEVICE void hpx::util::iterator_core_access::advance</definition>
        <argsstring>(Iterator &amp;it, Distance n)</argsstring>
        <name>advance</name>
        <param>
          <type>Iterator &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>Distance</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" line="59" column="1" bodyfile="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1iterator__core__access_1add9d70d1975aefb0edecb530695bbd7f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Iterator1</type>
          </param>
          <param>
            <type>typename Iterator2</type>
          </param>
        </templateparamlist>
        <type>HPX_HOST_DEVICE std::iterator_traits&lt; Iterator1 &gt;::difference_type</type>
        <definition>static HPX_HOST_DEVICE std::iterator_traits&lt;Iterator1&gt;::difference_type hpx::util::iterator_core_access::distance_to</definition>
        <argsstring>(Iterator1 const &amp;lhs, Iterator2 const &amp;rhs)</argsstring>
        <name>distance_to</name>
        <param>
          <type>Iterator1 const &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>Iterator2 const &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" line="68" column="1" bodyfile="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" line="30" column="1" bodyfile="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" bodystart="29" bodyend="72"/>
    <listofallmembers>
      <member refid="classhpx_1_1util_1_1iterator__core__access_1a3d869c61ef22e744dc101d7e4b2a0e9f" prot="public" virt="non-virtual"><scope>hpx::util::iterator_core_access</scope><name>advance</name></member>
      <member refid="classhpx_1_1util_1_1iterator__core__access_1aa3f16a3278ca6852f96aca8fc9118efb" prot="public" virt="non-virtual"><scope>hpx::util::iterator_core_access</scope><name>decrement</name></member>
      <member refid="classhpx_1_1util_1_1iterator__core__access_1a35da587d9f7e8a77cfa067f391f6808f" prot="public" virt="non-virtual"><scope>hpx::util::iterator_core_access</scope><name>dereference</name></member>
      <member refid="classhpx_1_1util_1_1iterator__core__access_1add9d70d1975aefb0edecb530695bbd7f" prot="public" virt="non-virtual"><scope>hpx::util::iterator_core_access</scope><name>distance_to</name></member>
      <member refid="classhpx_1_1util_1_1iterator__core__access_1a50594a865b673fbdd547c46537596fda" prot="public" virt="non-virtual"><scope>hpx::util::iterator_core_access</scope><name>equal</name></member>
      <member refid="classhpx_1_1util_1_1iterator__core__access_1a78a8cb90b8bb0b47d872df6a2d9fa091" prot="public" virt="non-virtual"><scope>hpx::util::iterator_core_access</scope><name>increment</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
