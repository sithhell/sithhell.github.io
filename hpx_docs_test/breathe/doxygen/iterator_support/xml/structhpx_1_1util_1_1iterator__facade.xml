<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1util_1_1iterator__facade" kind="struct" language="C++" prot="public">
    <compoundname>hpx::util::iterator_facade</compoundname>
    <basecompoundref prot="public" virt="non-virtual">hpx::util::detail::iterator_facade_base&lt; Derived, T, Category, Reference, Distance, Pointer &gt;</basecompoundref>
    <derivedcompoundref refid="classhpx_1_1util_1_1iterator__adaptor" prot="public" virt="non-virtual">hpx::util::iterator_adaptor&lt; Derived, Base, Value, Category, Reference, Difference, Pointer &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Derived</declname>
        <defname>Derived</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>Category</declname>
        <defname>Category</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>Reference</declname>
        <defname>Reference</defname>
        <defval>T&amp;</defval>
      </param>
      <param>
        <type>typename</type>
        <declname>Distance</declname>
        <defname>Distance</defname>
        <defval>std::ptrdiff_t</defval>
      </param>
      <param>
        <type>typename</type>
        <declname>Pointer</declname>
        <defname>Pointer</defname>
        <defval>void</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structhpx_1_1util_1_1iterator__facade_1a74f21bb4144d021adedf010f5cf9bf45" prot="private" static="no">
        <type>detail::iterator_facade_base&lt; Derived, T, Category, Reference, Distance, Pointer &gt;</type>
        <definition>typedef detail::iterator_facade_base&lt;Derived, T, Category, Reference, Distance, Pointer&gt; hpx::util::iterator_facade&lt; Derived, T, Category, Reference, Distance, Pointer &gt;::base_type</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" line="271" column="1" bodyfile="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="structhpx_1_1util_1_1iterator__facade_1a7039b8256bed165e684a1b1a3594a98c" prot="protected" static="no">
        <type><ref refid="structhpx_1_1util_1_1iterator__facade" kindref="compound">iterator_facade</ref>&lt; Derived, T, Category, Reference, Distance, Pointer &gt;</type>
        <definition>typedef iterator_facade&lt;Derived, T, Category, Reference, Distance, Pointer&gt; hpx::util::iterator_facade&lt; Derived, T, Category, Reference, Distance, Pointer &gt;::iterator_adaptor_</definition>
        <argsstring></argsstring>
        <name>iterator_adaptor_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" line="277" column="1" bodyfile="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1util_1_1iterator__facade_1a027b7d498caf7d0cefb2fbb8d9083ebc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>HPX_HOST_DEVICE</type>
        <definition>HPX_HOST_DEVICE hpx::util::iterator_facade&lt; Derived, T, Category, Reference, Distance, Pointer &gt;::iterator_facade</definition>
        <argsstring>()</argsstring>
        <name>iterator_facade</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" line="280" column="1" bodyfile="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" bodystart="280" bodyend="283"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="50">
        <label>hpx::util::iterator_facade&lt; Derived, T, Category, Reference, Distance, Pointer &gt;</label>
        <link refid="structhpx_1_1util_1_1iterator__facade"/>
        <childnode refid="51" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>hpx::util::detail::iterator_facade_base&lt; Derived, T, Category, Reference, Distance, Pointer &gt;</label>
      </node>
      <node id="52">
        <label>hpx::util::iterator_adaptor&lt; Derived, value_type, iterator_category, reference_type, difference_type, Pointer &gt;</label>
        <link refid="classhpx_1_1util_1_1iterator__adaptor"/>
        <childnode refid="50" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="53">
        <label>hpx::util::iterator_facade&lt; Derived, T, Category, Reference, Distance, Pointer &gt;</label>
        <link refid="structhpx_1_1util_1_1iterator__facade"/>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>hpx::util::detail::iterator_facade_base&lt; Derived, T, Category, Reference, Distance, Pointer &gt;</label>
      </node>
    </collaborationgraph>
    <location file="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" line="267" column="1" bodyfile="libs/iterator_support/include/hpx/iterator_support/iterator_facade.hpp" bodystart="264" bodyend="284"/>
    <listofallmembers>
      <member refid="structhpx_1_1util_1_1iterator__facade_1a74f21bb4144d021adedf010f5cf9bf45" prot="private" virt="non-virtual"><scope>hpx::util::iterator_facade</scope><name>base_type</name></member>
      <member refid="structhpx_1_1util_1_1iterator__facade_1a7039b8256bed165e684a1b1a3594a98c" prot="protected" virt="non-virtual"><scope>hpx::util::iterator_facade</scope><name>iterator_adaptor_</name></member>
      <member refid="structhpx_1_1util_1_1iterator__facade_1a027b7d498caf7d0cefb2fbb8d9083ebc" prot="public" virt="non-virtual"><scope>hpx::util::iterator_facade</scope><name>iterator_facade</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
