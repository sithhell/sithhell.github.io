<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1util_1_1logging_1_1formatter_1_1do__convert__format_1_1append" kind="struct" language="C++" prot="public">
    <compoundname>hpx::util::logging::formatter::do_convert_format::append</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1formatter_1_1do__convert__format_1_1append_1a1ad6ab0f0be29802f0ab0aab8801ac41" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class string</type>
          </param>
        </templateparamlist>
        <type>const std::string &amp;</type>
        <definition>static const std::string&amp; hpx::util::logging::formatter::do_convert_format::append::get_underlying_string</definition>
        <argsstring>(const string &amp;str)</argsstring>
        <name>get_underlying_string</name>
        <param>
          <type>const string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/formatter/convert_format.hpp" line="132" column="1" bodyfile="libs/logging/include/hpx/logging/format/formatter/convert_format.hpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1formatter_1_1do__convert__format_1_1append_1adbbeae72f1f5e51b8756f3ab7291be31" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class string</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void hpx::util::logging::formatter::do_convert_format::append::write</definition>
        <argsstring>(const char *src, string &amp;dest)</argsstring>
        <name>write</name>
        <param>
          <type>const char *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/formatter/convert_format.hpp" line="138" column="1" bodyfile="libs/logging/include/hpx/logging/format/formatter/convert_format.hpp" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1formatter_1_1do__convert__format_1_1append_1a2a81b34dd1da714a56d6bf3df411a19f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class src_type</type>
          </param>
          <param>
            <type>class string</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void hpx::util::logging::formatter::do_convert_format::append::write</definition>
        <argsstring>(const src_type &amp;src, string &amp;dest)</argsstring>
        <name>write</name>
        <param>
          <type>const src_type &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/formatter/convert_format.hpp" line="144" column="1" bodyfile="libs/logging/include/hpx/logging/format/formatter/convert_format.hpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1formatter_1_1do__convert__format_1_1append_1a59d47130aaaee8c1803dd2b1a678230f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class src_type</type>
          </param>
          <param>
            <type>class string</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void hpx::util::logging::formatter::do_convert_format::append::write</definition>
        <argsstring>(src_type &amp;src, string &amp;dest)</argsstring>
        <name>write</name>
        <param>
          <type>src_type &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>string &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/formatter/convert_format.hpp" line="149" column="1" bodyfile="libs/logging/include/hpx/logging/format/formatter/convert_format.hpp" bodystart="149" bodyend="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/logging/include/hpx/logging/format/formatter/convert_format.hpp" line="130" column="1" bodyfile="libs/logging/include/hpx/logging/format/formatter/convert_format.hpp" bodystart="129" bodyend="153"/>
    <listofallmembers>
      <member refid="structhpx_1_1util_1_1logging_1_1formatter_1_1do__convert__format_1_1append_1a1ad6ab0f0be29802f0ab0aab8801ac41" prot="public" virt="non-virtual"><scope>hpx::util::logging::formatter::do_convert_format::append</scope><name>get_underlying_string</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1formatter_1_1do__convert__format_1_1append_1adbbeae72f1f5e51b8756f3ab7291be31" prot="public" virt="non-virtual"><scope>hpx::util::logging::formatter::do_convert_format::append</scope><name>write</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1formatter_1_1do__convert__format_1_1append_1a2a81b34dd1da714a56d6bf3df411a19f" prot="public" virt="non-virtual"><scope>hpx::util::logging::formatter::do_convert_format::append</scope><name>write</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1formatter_1_1do__convert__format_1_1append_1a59d47130aaaee8c1803dd2b1a678230f" prot="public" virt="non-virtual"><scope>hpx::util::logging::formatter::do_convert_format::append</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
