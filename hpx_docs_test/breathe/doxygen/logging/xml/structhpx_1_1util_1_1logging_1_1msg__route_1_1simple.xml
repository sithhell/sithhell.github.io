<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple" kind="struct" language="C++" prot="public">
    <compoundname>hpx::util::logging::msg_route::simple</compoundname>
    <includes refid="hpx_2logging_2format_8hpp" local="no">format.hpp</includes>
    <innerclass refid="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1_1write__info" prot="public">hpx::util::logging::msg_route::simple::write_info</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1a884e93e92f00ab1998de6f82c8359b8e" prot="public" static="no">
        <type>formatter::base::ptr_type</type>
        <definition>typedef formatter::base::ptr_type hpx::util::logging::msg_route::simple::formatter_ptr</definition>
        <argsstring></argsstring>
        <name>formatter_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format.hpp" line="213" column="1" bodyfile="libs/logging/include/hpx/logging/format.hpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1aeb34122b22a7f80bce65b64fd10af660" prot="public" static="no">
        <type>destination::base::ptr_type</type>
        <definition>typedef destination::base::ptr_type hpx::util::logging::msg_route::simple::destination_ptr</definition>
        <argsstring></argsstring>
        <name>destination_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format.hpp" line="214" column="1" bodyfile="libs/logging/include/hpx/logging/format.hpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1aa2ccb3f35b8c54cf4714441c9eadbfe1" prot="public" static="no">
        <type>std::vector&lt; formatter_ptr &gt;</type>
        <definition>typedef std::vector&lt;formatter_ptr&gt; hpx::util::logging::msg_route::simple::f_array</definition>
        <argsstring></argsstring>
        <name>f_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format.hpp" line="216" column="1" bodyfile="libs/logging/include/hpx/logging/format.hpp" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1a36d54faf66adfc55a7ddb4677a5408ac" prot="public" static="no">
        <type>std::vector&lt; destination_ptr &gt;</type>
        <definition>typedef std::vector&lt;destination_ptr&gt; hpx::util::logging::msg_route::simple::d_array</definition>
        <argsstring></argsstring>
        <name>d_array</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format.hpp" line="217" column="1" bodyfile="libs/logging/include/hpx/logging/format.hpp" bodystart="217" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1ade742d28b334469e9b6ada11582f7888" prot="private" static="no" mutable="no">
        <type><ref refid="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1_1write__info" kindref="compound">write_info</ref></type>
        <definition>write_info hpx::util::logging::msg_route::simple::m_to_write</definition>
        <argsstring></argsstring>
        <name>m_to_write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format.hpp" line="273" column="1" bodyfile="libs/logging/include/hpx/logging/format.hpp" bodystart="273" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1a834cb21706452c3f8173c5096dea1555" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class formatter_array</type>
          </param>
          <param>
            <type>class destination_array</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>hpx::util::logging::msg_route::simple::simple</definition>
        <argsstring>(const formatter_array &amp;, const destination_array &amp;)</argsstring>
        <name>simple</name>
        <param>
          <type>const formatter_array &amp;</type>
        </param>
        <param>
          <type>const destination_array &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format.hpp" line="225" column="1" bodyfile="libs/logging/include/hpx/logging/format.hpp" bodystart="225" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1a55bad9279c797eeb09f769cfee64d946" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::logging::msg_route::simple::append_formatter</definition>
        <argsstring>(formatter_ptr fmt)</argsstring>
        <name>append_formatter</name>
        <param>
          <type>formatter_ptr</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format.hpp" line="229" column="1" bodyfile="libs/logging/include/hpx/logging/format.hpp" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1adde5fa9d8f1b622f8fc5f0e4d5ced7ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::logging::msg_route::simple::del_formatter</definition>
        <argsstring>(formatter_ptr fmt)</argsstring>
        <name>del_formatter</name>
        <param>
          <type>formatter_ptr</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format.hpp" line="233" column="1" bodyfile="libs/logging/include/hpx/logging/format.hpp" bodystart="233" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1a3155d8be2a9f43b6ab57f3de8eab4877" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::logging::msg_route::simple::append_destination</definition>
        <argsstring>(destination_ptr dest)</argsstring>
        <name>append_destination</name>
        <param>
          <type>destination_ptr</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format.hpp" line="240" column="1" bodyfile="libs/logging/include/hpx/logging/format.hpp" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1a0840db92e4c691970264ef6552a5dba7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::logging::msg_route::simple::del_destination</definition>
        <argsstring>(destination_ptr dest)</argsstring>
        <name>del_destination</name>
        <param>
          <type>destination_ptr</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format.hpp" line="245" column="1" bodyfile="libs/logging/include/hpx/logging/format.hpp" bodystart="245" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1a219a1a1d147a6439d8578efe5c6ffaca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class format_and_write</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void hpx::util::logging::msg_route::simple::write</definition>
        <argsstring>(msg_type &amp;msg) const</argsstring>
        <name>write</name>
        <param>
          <type>msg_type &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format.hpp" line="255" column="1" bodyfile="libs/logging/include/hpx/logging/format.hpp" bodystart="255" bodyend="270"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a simple router - first calls all formatters. </para>    </briefdescription>
    <detaileddescription>
<para><itemizedlist>
<listitem><para>in the order they were added, then all destinations - in the order they were added</para></listitem></itemizedlist>
</para><para>Example:</para><para><programlisting><codeline><highlight class="normal">typedef<sp/>logger&lt;<sp/>format_write<sp/>&gt;<sp/>logger_type;</highlight></codeline>
<codeline><highlight class="normal">HPX_DEFINE_LOG_FILTER(g_log_filter,<sp/>filter::no_ts<sp/>)</highlight></codeline>
<codeline><highlight class="normal">HPX_DEFINE_LOG(g_l,<sp/>logger_type)</highlight></codeline>
<codeline><highlight class="normal">#define<sp/>L_<sp/>HPX_LOG_USE_LOG_IF_FILTER(g_l(),<sp/>g_log_filter()-&gt;is_enabled()<sp/>)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>add<sp/>formatters<sp/>:<sp/>[idx]<sp/>[time]<sp/>message<sp/>[enter]</highlight></codeline>
<codeline><highlight class="normal">g_l()-&gt;writer().add_formatter(<sp/>write_idx()<sp/>);</highlight></codeline>
<codeline><highlight class="normal">g_l()-&gt;writer().add_formatter(<sp/>write_time()<sp/>);</highlight></codeline>
<codeline><highlight class="normal">g_l()-&gt;writer().add_formatter(<sp/>append_newline()<sp/>);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>write<sp/>to<sp/>cout<sp/>and<sp/>file</highlight></codeline>
<codeline><highlight class="normal">g_l()-&gt;writer().add_destination(<sp/>write_to_cout()<sp/>);</highlight></codeline>
<codeline><highlight class="normal">g_l()-&gt;writer().add_destination(<sp/>write_to_file(&quot;out.txt&quot;)<sp/>);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>usage</highlight></codeline>
<codeline><highlight class="normal">int<sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal">L_<sp/>&lt;&lt;<sp/>&quot;testing<sp/>&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>i+1<sp/>&lt;&lt;<sp/>i+2;</highlight></codeline>
</programlisting></para><para>In the above case:<itemizedlist>
<listitem><para>First, the formatters are called: <computeroutput>write_idx()</computeroutput> is called, then <computeroutput>write_time()</computeroutput>, then <computeroutput>append_newline()</computeroutput>.</para></listitem><listitem><para>Then, the destinations are called: <computeroutput>write_to_cout()</computeroutput>, and then <computeroutput>write_to_file()</computeroutput>.</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format_base</parametername>
</parameternamelist>
<parameterdescription>
<para>The base class for all formatter classes from your application. See manipulator.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destination_base</parametername>
</parameternamelist>
<parameterdescription>
<para>The base class for all destination classes from your application. See manipulator. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <location file="libs/logging/include/hpx/logging/format.hpp" line="212" column="1" bodyfile="libs/logging/include/hpx/logging/format.hpp" bodystart="211" bodyend="274"/>
    <listofallmembers>
      <member refid="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1a3155d8be2a9f43b6ab57f3de8eab4877" prot="public" virt="non-virtual"><scope>hpx::util::logging::msg_route::simple</scope><name>append_destination</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1a55bad9279c797eeb09f769cfee64d946" prot="public" virt="non-virtual"><scope>hpx::util::logging::msg_route::simple</scope><name>append_formatter</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1a36d54faf66adfc55a7ddb4677a5408ac" prot="public" virt="non-virtual"><scope>hpx::util::logging::msg_route::simple</scope><name>d_array</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1a0840db92e4c691970264ef6552a5dba7" prot="public" virt="non-virtual"><scope>hpx::util::logging::msg_route::simple</scope><name>del_destination</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1adde5fa9d8f1b622f8fc5f0e4d5ced7ba" prot="public" virt="non-virtual"><scope>hpx::util::logging::msg_route::simple</scope><name>del_formatter</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1aeb34122b22a7f80bce65b64fd10af660" prot="public" virt="non-virtual"><scope>hpx::util::logging::msg_route::simple</scope><name>destination_ptr</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1aa2ccb3f35b8c54cf4714441c9eadbfe1" prot="public" virt="non-virtual"><scope>hpx::util::logging::msg_route::simple</scope><name>f_array</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1a884e93e92f00ab1998de6f82c8359b8e" prot="public" virt="non-virtual"><scope>hpx::util::logging::msg_route::simple</scope><name>formatter_ptr</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1ade742d28b334469e9b6ada11582f7888" prot="private" virt="non-virtual"><scope>hpx::util::logging::msg_route::simple</scope><name>m_to_write</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1a834cb21706452c3f8173c5096dea1555" prot="public" virt="non-virtual"><scope>hpx::util::logging::msg_route::simple</scope><name>simple</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1msg__route_1_1simple_1a219a1a1d147a6439d8578efe5c6ffaca" prot="public" virt="non-virtual"><scope>hpx::util::logging::msg_route::simple</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
