<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal" kind="struct" language="C++" prot="public">
    <compoundname>hpx::util::logging::op_equal::same_type_op_equal</compoundname>
    <basecompoundref refid="structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal__base" prot="public" virt="non-virtual">hpx::util::logging::op_equal::same_type_op_equal_base</basecompoundref>
    <includes refid="hpx_2logging_2format_2op__equal_8hpp" local="no">op_equal.hpp</includes>
    <templateparamlist>
      <param>
        <type>class type</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal_1a54d0a6c25ce915e72ee55c6a9250997f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool hpx::util::logging::op_equal::same_type_op_equal&lt; type &gt;::equals</definition>
        <argsstring>(const same_type_op_equal_top &amp;other) const</argsstring>
        <name>equals</name>
        <reimplements refid="structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal__top_1accb8000a0ddd7f18d980abc369343d24">equals</reimplements>
        <param>
          <type>const <ref refid="structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal__top" kindref="compound">same_type_op_equal_top</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/op_equal.hpp" line="66" column="1" bodyfile="libs/logging/include/hpx/logging/format/op_equal.hpp" bodystart="66" bodyend="76"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements operator==, which compares two objects. If they have the same type, it will compare them using the type&apos;s member operator==. </para>    </briefdescription>
    <detaileddescription>
<para>The only constraint is that operator== must be a <emphasis>member</emphasis> function </para>    </detaileddescription>
    <inheritancegraph>
      <node id="75">
        <label>hpx::util::logging::op_equal::same_type_op_equal_base</label>
        <link refid="structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal__base"/>
        <childnode refid="76" relation="public-inheritance">
        </childnode>
      </node>
      <node id="74">
        <label>hpx::util::logging::op_equal::same_type_op_equal&lt; type &gt;</label>
        <link refid="structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal"/>
        <childnode refid="75" relation="public-inheritance">
        </childnode>
      </node>
      <node id="76">
        <label>hpx::util::logging::op_equal::same_type_op_equal_top</label>
        <link refid="structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal__top"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="78">
        <label>hpx::util::logging::op_equal::same_type_op_equal_base</label>
        <link refid="structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal__base"/>
        <childnode refid="79" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77">
        <label>hpx::util::logging::op_equal::same_type_op_equal&lt; type &gt;</label>
        <link refid="structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal"/>
        <childnode refid="78" relation="public-inheritance">
        </childnode>
      </node>
      <node id="79">
        <label>hpx::util::logging::op_equal::same_type_op_equal_top</label>
        <link refid="structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal__top"/>
      </node>
    </collaborationgraph>
    <location file="libs/logging/include/hpx/logging/format/op_equal.hpp" line="65" column="1" bodyfile="libs/logging/include/hpx/logging/format/op_equal.hpp" bodystart="64" bodyend="77"/>
    <listofallmembers>
      <member refid="structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal_1a54d0a6c25ce915e72ee55c6a9250997f" prot="public" virt="virtual"><scope>hpx::util::logging::op_equal::same_type_op_equal</scope><name>equals</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal__top_1ad7640eb36cf47d4f5c576b48189e5536" prot="protected" virt="non-virtual"><scope>hpx::util::logging::op_equal::same_type_op_equal</scope><name>same_type_op_equal_top</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal__top_1a5fc91111032f3e0e656865c7d2f9a2cc" prot="protected" virt="non-virtual"><scope>hpx::util::logging::op_equal::same_type_op_equal</scope><name>same_type_op_equal_top</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1op__equal_1_1same__type__op__equal__top_1adb7841c650b52654faa4b42b7635c6f0" prot="protected" virt="virtual"><scope>hpx::util::logging::op_equal::same_type_op_equal</scope><name>~same_type_op_equal_top</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
