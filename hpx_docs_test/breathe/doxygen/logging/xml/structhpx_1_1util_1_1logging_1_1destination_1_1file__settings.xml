<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1util_1_1logging_1_1destination_1_1file__settings" kind="struct" language="C++" prot="public">
    <compoundname>hpx::util::logging::destination::file_settings</compoundname>
    <includes refid="hpx_2logging_2format_2destination_2file_8hpp" local="no">file.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structhpx_1_1util_1_1logging_1_1destination_1_1file__settings_1a51786555b33a9761c973a0296342fe2f" prot="public" static="no">
        <type>::hpx::util::logging::detail::flag&lt; <ref refid="structhpx_1_1util_1_1logging_1_1destination_1_1file__settings" kindref="compound">file_settings</ref> &gt;</type>
        <definition>typedef ::hpx::util::logging::detail::flag&lt;file_settings&gt; hpx::util::logging::destination::file_settings::flag</definition>
        <argsstring></argsstring>
        <name>flag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/destination/file.hpp" line="44" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/file.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structhpx_1_1util_1_1logging_1_1destination_1_1file__settings_1a6d06f29faab96cc9165f34f87d42bec9" prot="public" static="no" mutable="no">
        <type>flag::t&lt; bool &gt;</type>
        <definition>flag::t&lt;bool&gt; hpx::util::logging::destination::file_settings::flush_each_time</definition>
        <argsstring></argsstring>
        <name>flush_each_time</name>
        <briefdescription>
<para>if true (default), flushes after each write </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/destination/file.hpp" line="55" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/file.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhpx_1_1util_1_1logging_1_1destination_1_1file__settings_1aca08d782204d01860d58b3cdcbfffe0d" prot="public" static="no" mutable="no">
        <type>flag::t&lt; bool &gt;</type>
        <definition>flag::t&lt;bool&gt; hpx::util::logging::destination::file_settings::initial_overwrite</definition>
        <argsstring></argsstring>
        <name>initial_overwrite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/destination/file.hpp" line="57" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/file.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhpx_1_1util_1_1logging_1_1destination_1_1file__settings_1a4b9158e277048894ecd3b6e6ac9e67dd" prot="public" static="no" mutable="no">
        <type>flag::t&lt; bool &gt;</type>
        <definition>flag::t&lt;bool&gt; hpx::util::logging::destination::file_settings::do_append</definition>
        <argsstring></argsstring>
        <name>do_append</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/destination/file.hpp" line="59" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/file.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhpx_1_1util_1_1logging_1_1destination_1_1file__settings_1a9896b25b66b1fcb0043969f28f30e19b" prot="public" static="no" mutable="no">
        <type>flag::t&lt; std::ios_base::openmode &gt;</type>
        <definition>flag::t&lt;std::ios_base::openmode&gt; hpx::util::logging::destination::file_settings::extra_flags</definition>
        <argsstring></argsstring>
        <name>extra_flags</name>
        <briefdescription>
<para>just in case you have some extra flags to pass, when opening the file </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/destination/file.hpp" line="62" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/file.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1destination_1_1file__settings_1a9e0471cdefcba0a613642d85f2268278" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::util::logging::destination::file_settings::file_settings</definition>
        <argsstring>()</argsstring>
        <name>file_settings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/destination/file.hpp" line="46" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/file.hpp" bodystart="46" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>settings for when constructing a file class. To see how it&apos;s used, see dealing_with_flags. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/logging/include/hpx/logging/format/destination/file.hpp" line="43" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/file.hpp" bodystart="42" bodyend="63"/>
    <listofallmembers>
      <member refid="structhpx_1_1util_1_1logging_1_1destination_1_1file__settings_1a4b9158e277048894ecd3b6e6ac9e67dd" prot="public" virt="non-virtual"><scope>hpx::util::logging::destination::file_settings</scope><name>do_append</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1destination_1_1file__settings_1a9896b25b66b1fcb0043969f28f30e19b" prot="public" virt="non-virtual"><scope>hpx::util::logging::destination::file_settings</scope><name>extra_flags</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1destination_1_1file__settings_1a9e0471cdefcba0a613642d85f2268278" prot="public" virt="non-virtual"><scope>hpx::util::logging::destination::file_settings</scope><name>file_settings</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1destination_1_1file__settings_1a51786555b33a9761c973a0296342fe2f" prot="public" virt="non-virtual"><scope>hpx::util::logging::destination::file_settings</scope><name>flag</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1destination_1_1file__settings_1a6d06f29faab96cc9165f34f87d42bec9" prot="public" virt="non-virtual"><scope>hpx::util::logging::destination::file_settings</scope><name>flush_each_time</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1destination_1_1file__settings_1aca08d782204d01860d58b3cdcbfffe0d" prot="public" virt="non-virtual"><scope>hpx::util::logging::destination::file_settings</scope><name>initial_overwrite</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
