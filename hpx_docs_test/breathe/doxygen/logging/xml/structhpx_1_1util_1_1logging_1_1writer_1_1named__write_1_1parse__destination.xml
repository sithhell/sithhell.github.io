<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1util_1_1logging_1_1writer_1_1named__write_1_1parse__destination" kind="struct" language="C++" prot="private">
    <compoundname>hpx::util::logging::writer::named_write::parse_destination</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structhpx_1_1util_1_1logging_1_1writer_1_1named__write_1_1parse__destination_1a78bb3b3b722dd949c7de36b1786cd60f" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string hpx::util::logging::writer::named_write::parse_destination::m_manipulator</definition>
        <argsstring></argsstring>
        <name>m_manipulator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/writer/named_write.hpp" line="288" column="1" bodyfile="libs/logging/include/hpx/logging/writer/named_write.hpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1writer_1_1named__write_1_1parse__destination_1ac3505961b23f13b584b3785f13996213" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hpx::util::logging::writer::named_write::parse_destination::has_manipulator_name</definition>
        <argsstring>() const</argsstring>
        <name>has_manipulator_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/writer/named_write.hpp" line="260" column="1" bodyfile="libs/logging/include/hpx/logging/writer/named_write.hpp" bodystart="260" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1writer_1_1named__write_1_1parse__destination_1a3b93c04a4d59df05d7aed7f8c7921d0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string hpx::util::logging::writer::named_write::parse_destination::get_manipulator_name</definition>
        <argsstring>() const</argsstring>
        <name>get_manipulator_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/writer/named_write.hpp" line="264" column="1" bodyfile="libs/logging/include/hpx/logging/writer/named_write.hpp" bodystart="264" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1writer_1_1named__write_1_1parse__destination_1a5e44ba16c1ecc051480af3c63dabb125" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::logging::writer::named_write::parse_destination::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/writer/named_write.hpp" line="273" column="1" bodyfile="libs/logging/include/hpx/logging/writer/named_write.hpp" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1writer_1_1named__write_1_1parse__destination_1a1e1e924609dde88f82b937866f14028d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::logging::writer::named_write::parse_destination::add</definition>
        <argsstring>(char c)</argsstring>
        <name>add</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/writer/named_write.hpp" line="278" column="1" bodyfile="libs/logging/include/hpx/logging/writer/named_write.hpp" bodystart="278" bodyend="285"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libs/logging/include/hpx/logging/writer/named_write.hpp" line="259" column="1" bodyfile="libs/logging/include/hpx/logging/writer/named_write.hpp" bodystart="258" bodyend="289"/>
    <listofallmembers>
      <member refid="structhpx_1_1util_1_1logging_1_1writer_1_1named__write_1_1parse__destination_1a1e1e924609dde88f82b937866f14028d" prot="public" virt="non-virtual"><scope>hpx::util::logging::writer::named_write::parse_destination</scope><name>add</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1writer_1_1named__write_1_1parse__destination_1a5e44ba16c1ecc051480af3c63dabb125" prot="public" virt="non-virtual"><scope>hpx::util::logging::writer::named_write::parse_destination</scope><name>clear</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1writer_1_1named__write_1_1parse__destination_1a3b93c04a4d59df05d7aed7f8c7921d0d" prot="public" virt="non-virtual"><scope>hpx::util::logging::writer::named_write::parse_destination</scope><name>get_manipulator_name</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1writer_1_1named__write_1_1parse__destination_1ac3505961b23f13b584b3785f13996213" prot="public" virt="non-virtual"><scope>hpx::util::logging::writer::named_write::parse_destination</scope><name>has_manipulator_name</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1writer_1_1named__write_1_1parse__destination_1a78bb3b3b722dd949c7de36b1786cd60f" prot="private" virt="non-virtual"><scope>hpx::util::logging::writer::named_write::parse_destination</scope><name>m_manipulator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
