<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="hpx_2logging_2format_2formatter_2time_8hpp" kind="file" language="C++">
    <compoundname>time.hpp</compoundname>
    <includes local="no">hpx/logging/detail/fwd.hpp</includes>
    <includes local="no">hpx/logging/detail/manipulator.hpp</includes>
    <includes local="no">hpx/logging/detail/time_format_holder.hpp</includes>
    <includes refid="hpx_2logging_2format_2formatter_2convert__format_8hpp" local="no">hpx/logging/format/formatter/convert_format.hpp</includes>
    <includes local="no">string</includes>
    <includes local="no">time.h</includes>
    <includedby refid="hpx_2logging_2format_2formatter_2defaults_8hpp" local="no">libs/logging/include/hpx/logging/format/formatter/defaults.hpp</includedby>
    <includedby refid="compatibility_2hpx_2util_2logging_2format_2formatter_2time_8hpp" local="no">libs/logging/include_compatibility/hpx/util/logging/format/formatter/time.hpp</includedby>
    <incdepgraph>
      <node id="650">
        <label>hpx/logging/format/optimize.hpp</label>
        <link refid="hpx_2logging_2format_2optimize_8hpp_source"/>
        <childnode refid="651" relation="include">
        </childnode>
        <childnode refid="652" relation="include">
        </childnode>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="653" relation="include">
        </childnode>
        <childnode refid="654" relation="include">
        </childnode>
        <childnode refid="655" relation="include">
        </childnode>
        <childnode refid="656" relation="include">
        </childnode>
        <childnode refid="657" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="659" relation="include">
        </childnode>
        <childnode refid="660" relation="include">
        </childnode>
      </node>
      <node id="646">
        <label>hpx/logging/detail/fwd.hpp</label>
      </node>
      <node id="655">
        <label>cwchar</label>
      </node>
      <node id="647">
        <label>hpx/logging/detail/manipulator.hpp</label>
      </node>
      <node id="658">
        <label>string</label>
      </node>
      <node id="656">
        <label>map</label>
      </node>
      <node id="645">
        <label>libs/logging/include/hpx/logging/format/formatter/time.hpp</label>
        <link refid="hpx_2logging_2format_2formatter_2time_8hpp"/>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="647" relation="include">
        </childnode>
        <childnode refid="648" relation="include">
        </childnode>
        <childnode refid="649" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
        <childnode refid="661" relation="include">
        </childnode>
      </node>
      <node id="651">
        <label>hpx/config.hpp</label>
      </node>
      <node id="648">
        <label>hpx/logging/detail/time_format_holder.hpp</label>
      </node>
      <node id="649">
        <label>hpx/logging/format/formatter/convert_format.hpp</label>
        <link refid="hpx_2logging_2format_2formatter_2convert__format_8hpp_source"/>
        <childnode refid="646" relation="include">
        </childnode>
        <childnode refid="650" relation="include">
        </childnode>
        <childnode refid="658" relation="include">
        </childnode>
      </node>
      <node id="660">
        <label>vector</label>
      </node>
      <node id="659">
        <label>utility</label>
      </node>
      <node id="661">
        <label>time.h</label>
      </node>
      <node id="652">
        <label>hpx/assertion.hpp</label>
      </node>
      <node id="653">
        <label>cstddef</label>
      </node>
      <node id="654">
        <label>cstring</label>
      </node>
      <node id="657">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="677">
        <label>libs/logging/include_compatibility/hpx/util/logging/format/formatter/time.hpp</label>
        <link refid="compatibility_2hpx_2util_2logging_2format_2formatter_2time_8hpp_source"/>
      </node>
      <node id="674">
        <label>libs/logging/include_compatibility/hpx/util/logging/writer/named_write.hpp</label>
        <link refid="compatibility_2hpx_2util_2logging_2writer_2named__write_8hpp_source"/>
      </node>
      <node id="665">
        <label>libs/logging/include/hpx/logging/format_fwd.hpp</label>
        <link refid="hpx_2logging_2format__fwd_8hpp_source"/>
        <childnode refid="664" relation="include">
        </childnode>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="668" relation="include">
        </childnode>
      </node>
      <node id="676">
        <label>libs/logging/include_compatibility/hpx/util/logging/format/formatter/defaults.hpp</label>
        <link refid="compatibility_2hpx_2util_2logging_2format_2formatter_2defaults_8hpp_source"/>
      </node>
      <node id="672">
        <label>libs/logging/include/hpx/logging/format/named_write.hpp</label>
        <link refid="hpx_2logging_2format_2named__write_8hpp_source"/>
        <childnode refid="673" relation="include">
        </childnode>
      </node>
      <node id="675">
        <label>libs/logging/include_compatibility/hpx/util/logging/format.hpp</label>
        <link refid="compatibility_2hpx_2util_2logging_2format_8hpp_source"/>
      </node>
      <node id="668">
        <label>libs/logging/include_compatibility/hpx/util/logging/format_fwd.hpp</label>
        <link refid="compatibility_2hpx_2util_2logging_2format__fwd_8hpp_source"/>
      </node>
      <node id="669">
        <label>libs/logging/include/hpx/logging/writer/format_write.hpp</label>
        <link refid="hpx_2logging_2writer_2format__write_8hpp_source"/>
        <childnode refid="670" relation="include">
        </childnode>
      </node>
      <node id="664">
        <label>libs/logging/include/hpx/logging/format.hpp</label>
        <link refid="hpx_2logging_2format_8hpp"/>
        <childnode refid="665" relation="include">
        </childnode>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
      </node>
      <node id="662">
        <label>libs/logging/include/hpx/logging/format/formatter/time.hpp</label>
        <link refid="hpx_2logging_2format_2formatter_2time_8hpp"/>
        <childnode refid="663" relation="include">
        </childnode>
        <childnode refid="677" relation="include">
        </childnode>
      </node>
      <node id="667">
        <label>libs/logging/include_compatibility/hpx/util/logging/format/named_write_fwd.hpp</label>
        <link refid="compatibility_2hpx_2util_2logging_2format_2named__write__fwd_8hpp_source"/>
      </node>
      <node id="663">
        <label>libs/logging/include/hpx/logging/format/formatter/defaults.hpp</label>
        <link refid="hpx_2logging_2format_2formatter_2defaults_8hpp_source"/>
        <childnode refid="664" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
      </node>
      <node id="670">
        <label>libs/logging/include_compatibility/hpx/util/logging/writer/format_write.hpp</label>
        <link refid="compatibility_2hpx_2util_2logging_2writer_2format__write_8hpp_source"/>
      </node>
      <node id="671">
        <label>libs/logging/include/hpx/logging/writer/named_write.hpp</label>
        <link refid="hpx_2logging_2writer_2named__write_8hpp_source"/>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
      </node>
      <node id="673">
        <label>libs/logging/include_compatibility/hpx/util/logging/format/named_write.hpp</label>
        <link refid="compatibility_2hpx_2util_2logging_2format_2named__write_8hpp_source"/>
      </node>
      <node id="666">
        <label>libs/logging/include/hpx/logging/format/named_write_fwd.hpp</label>
        <link refid="hpx_2logging_2format_2named__write__fwd_8hpp_source"/>
        <childnode refid="667" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structhpx_1_1util_1_1logging_1_1formatter_1_1time__t" prot="public">hpx::util::logging::formatter::time_t</innerclass>
    <innernamespace refid="namespacehpx">hpx</innernamespace>
    <innernamespace refid="namespacehpx_1_1util">hpx::util</innernamespace>
    <innernamespace refid="namespacehpx_1_1util_1_1logging">hpx::util::logging</innernamespace>
    <innernamespace refid="namespacehpx_1_1util_1_1logging_1_1formatter">hpx::util::logging::formatter</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>formatter_time.hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Boost<sp/>Logging<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author:<sp/>John<sp/>Torjo,<sp/>www.torjo.com</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2007<sp/>John<sp/>Torjo<sp/>(see<sp/>www.torjo.com<sp/>for<sp/>email)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Distributed<sp/>under<sp/>the<sp/>Boost<sp/>Software<sp/>License,<sp/>Version<sp/>1.0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>(See<sp/>accompanying<sp/>file<sp/>LICENSE_1_0.txt<sp/>or<sp/>copy<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>http://www.boost.org/LICENSE_1_0.txt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>http://www.boost.org<sp/>for<sp/>updates,<sp/>documentation,<sp/>and<sp/>revision<sp/>history.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>http://www.torjo.com/log2/<sp/>for<sp/>more<sp/>details</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>JT28092007_formatter_time_HPP_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>JT28092007_formatter_time_HPP_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/logging/detail/fwd.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/logging/detail/manipulator.hpp&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is_generic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/logging/detail/time_format_holder.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;hpx/logging/format/formatter/convert_format.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehpx" kindref="compound">hpx</ref><sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">util<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">logging<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">formatter<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>convert<sp/>=<sp/>do_convert_format::prepend&gt;</highlight></codeline>
<codeline lineno="53" refid="structhpx_1_1util_1_1logging_1_1formatter_1_1time__t" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhpx_1_1util_1_1logging_1_1formatter_1_1time__t" kindref="compound">time_t</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>is_generic</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>non_const_context&lt;hpx::util::logging::detail::time_format_holder&gt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>convert<sp/>convert_type;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>non_const_context&lt;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hpx::util::logging::detail::time_format_holder&gt;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non_const_context_base;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structhpx_1_1util_1_1logging_1_1formatter_1_1time__t_1abc897529a6a3decf0d9470b8458be822" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhpx_1_1util_1_1logging_1_1formatter_1_1time__t_1abc897529a6a3decf0d9470b8458be822" kindref="member">time_t</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>format)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>non_const_context_base(format)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_time(msg_type&amp;<sp/>msg,<sp/>::<ref refid="structhpx_1_1util_1_1logging_1_1formatter_1_1time__t" kindref="compound">time_t</ref><sp/>val)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="71"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[64];</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tm<sp/>details<sp/>=<sp/>*localtime(&amp;val);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non_const_context_base::context().write_time(buffer,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details.tm_mday,<sp/>details.tm_mon<sp/>+<sp/>1,<sp/>details.tm_year<sp/>+<sp/>1900,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>details.tm_hour,<sp/>details.tm_min,<sp/>details.tm_sec);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convert::write(buffer,<sp/>msg);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(msg_type&amp;<sp/>msg)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="83"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhpx_1_1util_1_1logging_1_1formatter_1_1time__t" kindref="compound">::time_t</ref><sp/>val<sp/>=<sp/><ref refid="structhpx_1_1util_1_1logging_1_1formatter_1_1time__t" kindref="compound">::time</ref>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_time(msg,<sp/>val);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhpx_1_1util_1_1logging_1_1formatter_1_1time__t" kindref="compound">time_t</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="89"><highlight class="keyword"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>non_const_context_base::context()<sp/>==</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other.non_const_context_base::context();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="structhpx_1_1util_1_1logging_1_1formatter_1_1time__t_1ab9c1aad292acd27925b860e2d4631e50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structhpx_1_1util_1_1logging_1_1formatter_1_1time__t_1ab9c1aad292acd27925b860e2d4631e50" kindref="member">configure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>non_const_context_base::context().set_format(str);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structhpx_1_1util_1_1logging_1_1formatter_1_1time__t" kindref="compound">time_t&lt;&gt;</ref><sp/><ref refid="structhpx_1_1util_1_1logging_1_1formatter_1_1time__t" kindref="compound">time</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">}}}}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hpx::util::logging::formatter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="libs/logging/include/hpx/logging/format/formatter/time.hpp"/>
  </compounddef>
</doxygen>
