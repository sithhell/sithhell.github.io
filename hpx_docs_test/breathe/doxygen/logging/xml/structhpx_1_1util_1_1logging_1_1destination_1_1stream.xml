<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1util_1_1logging_1_1destination_1_1stream" kind="struct" language="C++" prot="public">
    <compoundname>hpx::util::logging::destination::stream</compoundname>
    <basecompoundref prot="public" virt="non-virtual">is_generic</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">non_const_context&lt; std::ostream *&gt;</basecompoundref>
    <includes refid="hpx_2logging_2format_2destination_2defaults_8hpp" local="no">defaults.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1a15bab7785c043b1be161ec2063f42c09" prot="public" static="no">
        <type>std::ostream</type>
        <definition>typedef std::ostream hpx::util::logging::destination::stream::stream_type</definition>
        <argsstring></argsstring>
        <name>stream_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/destination/defaults.hpp" line="71" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/defaults.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1a923f910707564713b6d9285b1ecb3758" prot="public" static="no">
        <type>non_const_context&lt; stream_type * &gt;</type>
        <definition>typedef non_const_context&lt;stream_type*&gt; hpx::util::logging::destination::stream::non_const_context_base</definition>
        <argsstring></argsstring>
        <name>non_const_context_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/destination/defaults.hpp" line="72" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/defaults.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1a0d1acc83dacf3ca852059cde6877c4b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::util::logging::destination::stream::stream</definition>
        <argsstring>(stream_type *s)</argsstring>
        <name>stream</name>
        <param>
          <type>stream_type *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/destination/defaults.hpp" line="74" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/defaults.hpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1a5540e5a6152cf21bbc8b8fe9bceb694b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hpx::util::logging::destination::stream::stream</definition>
        <argsstring>(stream_type &amp;s)</argsstring>
        <name>stream</name>
        <param>
          <type>stream_type &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/destination/defaults.hpp" line="78" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/defaults.hpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1abd9abb5f0a067bc857609b5fd740eeb8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::logging::destination::stream::operator()</definition>
        <argsstring>(const msg_type &amp;msg) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const msg_type &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/destination/defaults.hpp" line="83" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/defaults.hpp" bodystart="83" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1a8ae77a357902a942b6436e8794bde534" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hpx::util::logging::destination::stream::operator==</definition>
        <argsstring>(const stream &amp;other) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structhpx_1_1util_1_1logging_1_1destination_1_1stream" kindref="compound">stream</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/destination/defaults.hpp" line="89" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/defaults.hpp" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1add67ef1baa1430c7d0d0b793321b855b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::logging::destination::stream::set_stream</definition>
        <argsstring>(stream_type *p)</argsstring>
        <name>set_stream</name>
        <param>
          <type>stream_type *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>resets the stream. Further output will be written to this stream </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/destination/defaults.hpp" line="98" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/defaults.hpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1a2decdb055ed2a130fbdf4d164a5aae28" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::logging::destination::stream::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>clears the stream. Further output will be ignored </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/destination/defaults.hpp" line="106" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/defaults.hpp" bodystart="106" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>writes to stream. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>: The stream must outlive this object! Or, <ref refid="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1a2decdb055ed2a130fbdf4d164a5aae28" kindref="member">clear()</ref> the stream, before the stream is deleted. </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="102">
        <label>is_generic</label>
      </node>
      <node id="103">
        <label>non_const_context&lt; std::ostream *&gt;</label>
      </node>
      <node id="101">
        <label>hpx::util::logging::destination::stream</label>
        <link refid="structhpx_1_1util_1_1logging_1_1destination_1_1stream"/>
        <childnode refid="102" relation="public-inheritance">
        </childnode>
        <childnode refid="103" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="105">
        <label>is_generic</label>
      </node>
      <node id="106">
        <label>non_const_context&lt; std::ostream *&gt;</label>
      </node>
      <node id="104">
        <label>hpx::util::logging::destination::stream</label>
        <link refid="structhpx_1_1util_1_1logging_1_1destination_1_1stream"/>
        <childnode refid="105" relation="public-inheritance">
        </childnode>
        <childnode refid="106" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/logging/include/hpx/logging/format/destination/defaults.hpp" line="70" column="1" bodyfile="libs/logging/include/hpx/logging/format/destination/defaults.hpp" bodystart="67" bodyend="110"/>
    <listofallmembers>
      <member refid="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1a2decdb055ed2a130fbdf4d164a5aae28" prot="public" virt="non-virtual"><scope>hpx::util::logging::destination::stream</scope><name>clear</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1a923f910707564713b6d9285b1ecb3758" prot="public" virt="non-virtual"><scope>hpx::util::logging::destination::stream</scope><name>non_const_context_base</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1abd9abb5f0a067bc857609b5fd740eeb8" prot="public" virt="non-virtual"><scope>hpx::util::logging::destination::stream</scope><name>operator()</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1a8ae77a357902a942b6436e8794bde534" prot="public" virt="non-virtual"><scope>hpx::util::logging::destination::stream</scope><name>operator==</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1add67ef1baa1430c7d0d0b793321b855b" prot="public" virt="non-virtual"><scope>hpx::util::logging::destination::stream</scope><name>set_stream</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1a0d1acc83dacf3ca852059cde6877c4b4" prot="public" virt="non-virtual"><scope>hpx::util::logging::destination::stream</scope><name>stream</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1a5540e5a6152cf21bbc8b8fe9bceb694b" prot="public" virt="non-virtual"><scope>hpx::util::logging::destination::stream</scope><name>stream</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1destination_1_1stream_1a15bab7785c043b1be161ec2063f42c09" prot="public" virt="non-virtual"><scope>hpx::util::logging::destination::stream</scope><name>stream_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
