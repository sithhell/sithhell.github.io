<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structhpx_1_1util_1_1logging_1_1formatter_1_1append__newline__t" kind="struct" language="C++" prot="public">
    <compoundname>hpx::util::logging::formatter::append_newline_t</compoundname>
    <basecompoundref prot="public" virt="non-virtual">is_generic</basecompoundref>
    <includes refid="hpx_2logging_2format_2formatter_2defaults_8hpp" local="no">defaults.hpp</includes>
    <templateparamlist>
      <param>
        <type>class convert</type>
        <defval><ref refid="structhpx_1_1util_1_1logging_1_1formatter_1_1do__convert__format_1_1append" kindref="compound">do_convert_format::append</ref></defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structhpx_1_1util_1_1logging_1_1formatter_1_1append__newline__t_1a8d5c975a03c983a75c361df3ba1bfe83" prot="public" static="no">
        <type>convert</type>
        <definition>typedef convert hpx::util::logging::formatter::append_newline_t&lt; convert &gt;::convert_type</definition>
        <argsstring></argsstring>
        <name>convert_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/formatter/defaults.hpp" line="96" column="1" bodyfile="libs/logging/include/hpx/logging/format/formatter/defaults.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1formatter_1_1append__newline__t_1a567ecfa93391a34e8fe493f7508b3034" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::logging::formatter::append_newline_t&lt; convert &gt;::operator()</definition>
        <argsstring>(msg_type &amp;str) const</argsstring>
        <name>operator()</name>
        <param>
          <type>msg_type &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/formatter/defaults.hpp" line="98" column="1" bodyfile="libs/logging/include/hpx/logging/format/formatter/defaults.hpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structhpx_1_1util_1_1logging_1_1formatter_1_1append__newline__t_1a26177cea6de6bd7294e77fefd44c6832" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool hpx::util::logging::formatter::append_newline_t&lt; convert &gt;::operator==</definition>
        <argsstring>(const append_newline_t &amp;) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structhpx_1_1util_1_1logging_1_1formatter_1_1append__newline__t" kindref="compound">append_newline_t</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/logging/include/hpx/logging/format/formatter/defaults.hpp" line="103" column="1" bodyfile="libs/logging/include/hpx/logging/format/formatter/defaults.hpp" bodystart="103" bodyend="106"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Appends a new line. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>convert</parametername>
</parameternamelist>
<parameterdescription>
<para>[optional] In case there needs to be a conversion between std::(w)string and the string that holds your logged message. See convert_format. For instance, you might use <ref refid="structhpx_1_1util_1_1logging_1_1optimize_1_1cache__string__one__str" kindref="compound">a cached_string class</ref> (see <ref refid="namespacehpx_1_1util_1_1logging_1_1optimize" kindref="compound">optimize namespace</ref>). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="7">
        <label>is_generic</label>
      </node>
      <node id="6">
        <label>hpx::util::logging::formatter::append_newline_t&lt; convert &gt;</label>
        <link refid="structhpx_1_1util_1_1logging_1_1formatter_1_1append__newline__t"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>is_generic</label>
      </node>
      <node id="8">
        <label>hpx::util::logging::formatter::append_newline_t&lt; convert &gt;</label>
        <link refid="structhpx_1_1util_1_1logging_1_1formatter_1_1append__newline__t"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libs/logging/include/hpx/logging/format/formatter/defaults.hpp" line="95" column="1" bodyfile="libs/logging/include/hpx/logging/format/formatter/defaults.hpp" bodystart="94" bodyend="107"/>
    <listofallmembers>
      <member refid="structhpx_1_1util_1_1logging_1_1formatter_1_1append__newline__t_1a8d5c975a03c983a75c361df3ba1bfe83" prot="public" virt="non-virtual"><scope>hpx::util::logging::formatter::append_newline_t</scope><name>convert_type</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1formatter_1_1append__newline__t_1a567ecfa93391a34e8fe493f7508b3034" prot="public" virt="non-virtual"><scope>hpx::util::logging::formatter::append_newline_t</scope><name>operator()</name></member>
      <member refid="structhpx_1_1util_1_1logging_1_1formatter_1_1append__newline__t_1a26177cea6de6bd7294e77fefd44c6832" prot="public" virt="non-virtual"><scope>hpx::util::logging::formatter::append_newline_t</scope><name>operator==</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
