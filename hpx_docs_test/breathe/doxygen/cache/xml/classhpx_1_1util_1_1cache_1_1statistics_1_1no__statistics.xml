<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics" kind="class" language="C++" prot="public">
    <compoundname>hpx::util::cache::statistics::no_statistics</compoundname>
    <derivedcompoundref refid="classhpx_1_1util_1_1cache_1_1statistics_1_1local__statistics" prot="public" virt="non-virtual">hpx::util::cache::statistics::local_statistics</derivedcompoundref>
    <innerclass refid="structhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1_1update__on__exit" prot="public">hpx::util::cache::statistics::no_statistics::update_on_exit</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a96deba61db7953e59c6645293109ba3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::cache::statistics::no_statistics::got_hit</definition>
        <argsstring>()</argsstring>
        <name>got_hit</name>
        <briefdescription>
<para>The function <emphasis>got_hit</emphasis> will be called by a cache instance whenever a entry got touched. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" line="31" column="1" bodyfile="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" bodystart="31" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a3a2f55c959797aa399ad9ce136240ae9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::cache::statistics::no_statistics::got_miss</definition>
        <argsstring>()</argsstring>
        <name>got_miss</name>
        <briefdescription>
<para>The function <emphasis>got_miss</emphasis> will be called by a cache instance whenever a requested entry has not been found in the cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" line="35" column="1" bodyfile="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" bodystart="35" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1ae5a3b80a61a2f3d4505e09b96ca83f65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::cache::statistics::no_statistics::got_insertion</definition>
        <argsstring>()</argsstring>
        <name>got_insertion</name>
        <briefdescription>
<para>The function <emphasis>got_insertion</emphasis> will be called by a cache instance whenever a new entry has been inserted. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" line="39" column="1" bodyfile="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1aadc7c358631d14e536fbfd1366276bb6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::cache::statistics::no_statistics::got_eviction</definition>
        <argsstring>()</argsstring>
        <name>got_eviction</name>
        <briefdescription>
<para>The function <emphasis>got_eviction</emphasis> will be called by a cache instance whenever an entry has been removed from the cache because a new inserted entry let the cache grow beyond its capacity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" line="45" column="1" bodyfile="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1abd0a14a9ec6013bf3dab97e6a09c22d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hpx::util::cache::statistics::no_statistics::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Reset all statistics. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" line="48" column="1" bodyfile="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a12774877ad7800d36b201072f9620d75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::int64_t</type>
        <definition>std::int64_t hpx::util::cache::statistics::no_statistics::get_get_entry_count</definition>
        <argsstring>(bool)</argsstring>
        <name>get_get_entry_count</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function <emphasis>get_get_entry_count</emphasis> returns the number of invocations of the get_entry() API function of the cache. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" line="58" column="1" bodyfile="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a03cb03a4be2054733004394492e52b99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::int64_t</type>
        <definition>std::int64_t hpx::util::cache::statistics::no_statistics::get_insert_entry_count</definition>
        <argsstring>(bool)</argsstring>
        <name>get_insert_entry_count</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function <emphasis>get_insert_entry_count</emphasis> returns the number of invocations of the insert_entry() API function of the cache. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" line="65" column="1" bodyfile="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a6e96c610181c70853e4ceb2925969ab5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::int64_t</type>
        <definition>std::int64_t hpx::util::cache::statistics::no_statistics::get_update_entry_count</definition>
        <argsstring>(bool)</argsstring>
        <name>get_update_entry_count</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function <emphasis>get_update_entry_count</emphasis> returns the number of invocations of the update_entry() API function of the cache. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" line="72" column="1" bodyfile="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a64c93a4d748f7f85cf61d996b1331e34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::int64_t</type>
        <definition>std::int64_t hpx::util::cache::statistics::no_statistics::get_erase_entry_count</definition>
        <argsstring>(bool)</argsstring>
        <name>get_erase_entry_count</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function <emphasis>get_erase_entry_count</emphasis> returns the number of invocations of the erase() API function of the cache. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" line="79" column="1" bodyfile="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a31651d1baeee2d265bc164821f31058f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::int64_t</type>
        <definition>std::int64_t hpx::util::cache::statistics::no_statistics::get_get_entry_time</definition>
        <argsstring>(bool)</argsstring>
        <name>get_get_entry_time</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function <emphasis>get_get_entry_time</emphasis> returns the overall time spent executing of the get_entry() API function of the cache. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" line="86" column="1" bodyfile="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a69beb17792a8b46a0d8e798e2da6da43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::int64_t</type>
        <definition>std::int64_t hpx::util::cache::statistics::no_statistics::get_insert_entry_time</definition>
        <argsstring>(bool)</argsstring>
        <name>get_insert_entry_time</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function <emphasis>get_insert_entry_time</emphasis> returns the overall time spent executing of the insert_entry() API function of the cache. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" line="93" column="1" bodyfile="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a4ed980ae645c834f14822b444e25a6a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::int64_t</type>
        <definition>std::int64_t hpx::util::cache::statistics::no_statistics::get_update_entry_time</definition>
        <argsstring>(bool)</argsstring>
        <name>get_update_entry_time</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function <emphasis>get_update_entry_time</emphasis> returns the overall time spent executing of the update_entry() API function of the cache. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" line="100" column="1" bodyfile="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1abc61cda73f7b2198d41c224b972073be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::int64_t</type>
        <definition>std::int64_t hpx::util::cache::statistics::no_statistics::get_erase_entry_time</definition>
        <argsstring>(bool)</argsstring>
        <name>get_erase_entry_time</name>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The function <emphasis>get_erase_entry_time</emphasis> returns the overall time spent executing of the erase() API function of the cache. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" line="107" column="1" bodyfile="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" bodystart="107" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="44">
        <label>hpx::util::cache::statistics::local_statistics</label>
        <link refid="classhpx_1_1util_1_1cache_1_1statistics_1_1local__statistics"/>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>hpx::util::cache::statistics::no_statistics</label>
        <link refid="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics"/>
      </node>
      <node id="45">
        <label>hpx::util::cache::statistics::local_full_statistics</label>
        <link refid="classhpx_1_1util_1_1cache_1_1statistics_1_1local__full__statistics"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" line="27" column="1" bodyfile="libs/cache/include/hpx/cache/statistics/no_statistics.hpp" bodystart="26" bodyend="111"/>
    <listofallmembers>
      <member refid="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1abd0a14a9ec6013bf3dab97e6a09c22d8" prot="public" virt="non-virtual"><scope>hpx::util::cache::statistics::no_statistics</scope><name>clear</name></member>
      <member refid="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a64c93a4d748f7f85cf61d996b1331e34" prot="public" virt="non-virtual"><scope>hpx::util::cache::statistics::no_statistics</scope><name>get_erase_entry_count</name></member>
      <member refid="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1abc61cda73f7b2198d41c224b972073be" prot="public" virt="non-virtual"><scope>hpx::util::cache::statistics::no_statistics</scope><name>get_erase_entry_time</name></member>
      <member refid="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a12774877ad7800d36b201072f9620d75" prot="public" virt="non-virtual"><scope>hpx::util::cache::statistics::no_statistics</scope><name>get_get_entry_count</name></member>
      <member refid="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a31651d1baeee2d265bc164821f31058f" prot="public" virt="non-virtual"><scope>hpx::util::cache::statistics::no_statistics</scope><name>get_get_entry_time</name></member>
      <member refid="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a03cb03a4be2054733004394492e52b99" prot="public" virt="non-virtual"><scope>hpx::util::cache::statistics::no_statistics</scope><name>get_insert_entry_count</name></member>
      <member refid="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a69beb17792a8b46a0d8e798e2da6da43" prot="public" virt="non-virtual"><scope>hpx::util::cache::statistics::no_statistics</scope><name>get_insert_entry_time</name></member>
      <member refid="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a6e96c610181c70853e4ceb2925969ab5" prot="public" virt="non-virtual"><scope>hpx::util::cache::statistics::no_statistics</scope><name>get_update_entry_count</name></member>
      <member refid="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a4ed980ae645c834f14822b444e25a6a1" prot="public" virt="non-virtual"><scope>hpx::util::cache::statistics::no_statistics</scope><name>get_update_entry_time</name></member>
      <member refid="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1aadc7c358631d14e536fbfd1366276bb6" prot="public" virt="non-virtual"><scope>hpx::util::cache::statistics::no_statistics</scope><name>got_eviction</name></member>
      <member refid="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a96deba61db7953e59c6645293109ba3f" prot="public" virt="non-virtual"><scope>hpx::util::cache::statistics::no_statistics</scope><name>got_hit</name></member>
      <member refid="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1ae5a3b80a61a2f3d4505e09b96ca83f65" prot="public" virt="non-virtual"><scope>hpx::util::cache::statistics::no_statistics</scope><name>got_insertion</name></member>
      <member refid="classhpx_1_1util_1_1cache_1_1statistics_1_1no__statistics_1a3a2f55c959797aa399ad9ce136240ae9" prot="public" virt="non-virtual"><scope>hpx::util::cache::statistics::no_statistics</scope><name>got_miss</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
